import { createElement } from '@syncfusion/ej2-base';
import { Diagram } from '../../../src/diagram/diagram';
import { ConnectorModel } from '../../../src/diagram/objects/connector-model';
import { NodeModel, BasicShapeModel } from '../../../src/diagram/objects/node-model';
import { PointPortModel } from '../../../src/diagram/objects/port-model';
import { Segments, ConnectorConstraints } from '../../../src/diagram/enum/enum';
import { Connector } from '../../../src/diagram/objects/connector';
import { StraightSegmentModel } from '../../../src/diagram/objects/connector-model';
import { PathElement } from '../../../src/diagram/core/elements/path-element';
import { MouseEvents } from '../../../spec/diagram/interaction/mouseevents.spec';
import { SnapConstraints } from '../../../src/diagram/index';
import { PointModel } from '../../../src/diagram/primitives/point-model';
import { UndoRedo } from '../../../src/diagram/objects/undo-redo';
import { ConnectorEditing } from '../../../src/diagram/interaction/connector-editing';
Diagram.Inject(UndoRedo);
Diagram.Inject(ConnectorEditing);

/**
 * Editing test cases
 */
function getIntermediatePoints(Points: PointModel[], value: string): string {
    let output: string = 'expect(';
    for (let i = 0; i < Points.length; i++) {
        output += value + '.intermediatePoints[' + i + '].x ==' + Points[i].x +
            '&&' + value + '.intermediatePoints[' + i + '].y ==' + Points[i].y + '&&';
    }
    output += ').toBe(true);';
    return output;
}

describe('Diagram Control', () => {
    describe('Conectors with segments - Orthogonal Segment Rendering(Point To Port)', () => {
        let diagram: Diagram;
        let ele: HTMLElement;
        let mouseEvents: MouseEvents = new MouseEvents();
        let diagramCanvas: HTMLElement;
        beforeAll((): void => {
            ele = createElement('div', { id: 'diagramOrthogonalSegmentPointToPortRendering' });
            document.body.appendChild(ele);
            let nodesCollection: NodeModel[] = []; let count = 1; let offsetY = 100; let offsetX = 100
            for (let i = 0; i < 9; i++) {
                let node = {
                    id: 'node' + i, offsetX: ((count) * offsetX), offsetY: offsetY, width: 50, height: 50,
                    annotations: [{
                        content: ((count) * offsetX).toString(),
                    },
                    {
                        offset: { x: 0.5, y: 0 },
                        content: offsetY.toString(),
                    },
                    {
                        offset: { x: 0.5, y: 1 },
                        content: 'node' + i,
                    }],
                    ports: [{ id: 'port1', offset: { x: 0, y: 0.5 } },
                    { id: 'port2', offset: { x: 0.5, y: 0 } },
                    { id: 'port3', offset: { x: 1, y: 0.5 } },
                    { id: 'port4', offset: { x: 0.5, y: 1 } }]
                };
                if (node.id !== 'node4') {
                    nodesCollection.push(node);
                }
                count += 3;
                if (count == 10) {
                    count = 1;
                    offsetX = 100;
                    offsetY = offsetY + 200;
                }
            }
            let portCollection = [{ id: 'port1', offset: { x: 0, y: 0.5 } },
            { id: 'port2', offset: { x: 0.5, y: 0 } },
            { id: 'port3', offset: { x: 1, y: 0.5 } },
            { id: 'port4', offset: { x: 0.5, y: 1 } }];
            nodesCollection.push({ id: 'node9', offsetX: 100, offsetY: 700, width: 50, height: 50, ports: portCollection });
            nodesCollection.push({ id: 'node10', offsetX: 700, offsetY: 700, width: 50, height: 50, ports: portCollection });
            nodesCollection.push({ id: 'node11', offsetX: 100, offsetY: 1000, width: 50, height: 50, ports: portCollection });
            nodesCollection.push({ id: 'node12', offsetX: 700, offsetY: 900, width: 50, height: 50, ports: portCollection });

            let nodes: NodeModel[] = nodesCollection; let connectors: ConnectorModel[] = [];
            count = 0;
            let dir = ['Left', 'Right', 'Top', 'Bottom'];
            let ports = ['port1', 'port2', 'port3', 'port4'];
            let sourcePoints = [{ x: 300, y: 200 }, { x: 400, y: 200 }, { x: 300, y: 300 }, { x: 500, y: 300 },
            { x: 300, y: 700 }, { x: 450, y: 700 }, { x: 100, y: 850 }, { x: 700, y: 1150 }];
            let targetNodes = ['node0', 'node2', 'node6', 'node8',
                'node9', 'node10', 'node11', 'node12'];
            for (let i = 0; i < targetNodes.length; i++) {
                for (let k = 0; k < ports.length; k++) {
                    for (let j = 0; j < dir.length; j++) {
                        let connector: ConnectorModel = {
                            id: 'connector' + count, type: 'Orthogonal', sourcePoint: sourcePoints[i], targetID: targetNodes[i], targetPortID: ports[k],
                            segments: [{ type: 'Orthogonal', direction: dir[j], length: 50 },],
                        }
                        connectors.push(connector);
                        count++;
                    }
                }
            }

            diagram = new Diagram({
                width: 1000, height: 1000, nodes: nodes,
                connectors: connectors, 
                getConnectorDefaults: (obj: ConnectorModel, diagram: Diagram) => {
                    let connector: ConnectorModel = {};
                    connector.constraints = ConnectorConstraints.Default | ConnectorConstraints.DragSegmentThumb;
                    return connector;
                },
                snapSettings: { constraints: SnapConstraints.ShowLines }
            });
            diagram.appendTo('#diagramOrthogonalSegmentPointToPortRendering');
            diagramCanvas = document.getElementById(diagram.element.id + 'content');
        });
        afterAll((): void => {
            diagram.destroy();
            ele.remove();
        });

        it('Checking Orthogonal segment - Point To Port Rendering', (done: Function) => {
            expect((diagram.connectors[0] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[0] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[0] as Connector).intermediatePoints[1].x == 55 && (diagram.connectors[0] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[0] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[0] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[0] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[0] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[1] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[1] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[1] as Connector).intermediatePoints[1].x == 55 && (diagram.connectors[1] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[1] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[1] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[1] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[1] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[2] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[2] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[2] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[2] as Connector).intermediatePoints[1].y == 150 && (diagram.connectors[2] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[2] as Connector).intermediatePoints[2].y == 150 && (diagram.connectors[2] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[2] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[2] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[2] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[3] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[3] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[3] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[3] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[3] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[3] as Connector).intermediatePoints[2].y == 250 && (diagram.connectors[3] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[3] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[3] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[3] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[4] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[4] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[4] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[4] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[4] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[4] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[4] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[4] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[4] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[4] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[5] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[5] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[5] as Connector).intermediatePoints[1].x == 350 && (diagram.connectors[5] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[5] as Connector).intermediatePoints[2].x == 350 && (diagram.connectors[5] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[5] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[5] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[5] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[5] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[6] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[6] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[6] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[6] as Connector).intermediatePoints[1].y == 55 && (diagram.connectors[6] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[6] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[6] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[6] as Connector).intermediatePoints[3].y == 75).toBe(true);
            expect((diagram.connectors[7] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[7] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[7] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[7] as Connector).intermediatePoints[1].y == 55 && (diagram.connectors[7] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[7] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[7] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[7] as Connector).intermediatePoints[3].y == 75).toBe(true);
            expect((diagram.connectors[8] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[8] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[8] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[8] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[8] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[8] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[8] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[8] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[9] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[9] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[9] as Connector).intermediatePoints[1].x == 350 && (diagram.connectors[9] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[9] as Connector).intermediatePoints[2].x == 350 && (diagram.connectors[9] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[9] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[9] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[10] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[10] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[10] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[10] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[10] as Connector).intermediatePoints[2].x == 125 && (diagram.connectors[10] as Connector).intermediatePoints[2].y == 100).toBe(true);
            expect((diagram.connectors[11] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[11] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[11] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[11] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[11] as Connector).intermediatePoints[2].x == 125 && (diagram.connectors[11] as Connector).intermediatePoints[2].y == 100).toBe(true);
            expect((diagram.connectors[12] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[12] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[12] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[12] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[12] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[12] as Connector).intermediatePoints[2].y == 125).toBe(true);
            expect((diagram.connectors[13] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[13] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[13] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[13] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[13] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[13] as Connector).intermediatePoints[2].y == 125).toBe(true);
            expect((diagram.connectors[14] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[14] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[14] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[14] as Connector).intermediatePoints[1].y == 150 && (diagram.connectors[14] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[14] as Connector).intermediatePoints[2].y == 150 && (diagram.connectors[14] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[14] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[15] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[15] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[15] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[15] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[15] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[15] as Connector).intermediatePoints[2].y == 250 && (diagram.connectors[15] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[15] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[16] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[16] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[16] as Connector).intermediatePoints[1].x == 350 && (diagram.connectors[16] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[16] as Connector).intermediatePoints[2].x == 350 && (diagram.connectors[16] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[16] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[16] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[17] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[17] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[17] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[17] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[17] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[17] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[17] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[17] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[18] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[18] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[18] as Connector).intermediatePoints[1].x == 400 && (diagram.connectors[18] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[18] as Connector).intermediatePoints[2].x == 675 && (diagram.connectors[18] as Connector).intermediatePoints[2].y == 100).toBe(true);
            expect((diagram.connectors[19] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[19] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[19] as Connector).intermediatePoints[1].x == 400 && (diagram.connectors[19] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[19] as Connector).intermediatePoints[2].x == 675 && (diagram.connectors[19] as Connector).intermediatePoints[2].y == 100).toBe(true);
            expect((diagram.connectors[20] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[20] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[20] as Connector).intermediatePoints[1].x == 350 && (diagram.connectors[20] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[20] as Connector).intermediatePoints[2].x == 350 && (diagram.connectors[20] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[20] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[20] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[20] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[20] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[21] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[21] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[21] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[21] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[21] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[21] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[21] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[21] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[21] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[21] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[22] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[22] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[22] as Connector).intermediatePoints[1].x == 400 && (diagram.connectors[22] as Connector).intermediatePoints[1].y == 55 && (diagram.connectors[22] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[22] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[22] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[22] as Connector).intermediatePoints[3].y == 75).toBe(true);
            expect((diagram.connectors[23] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[23] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[23] as Connector).intermediatePoints[1].x == 400 && (diagram.connectors[23] as Connector).intermediatePoints[1].y == 55 && (diagram.connectors[23] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[23] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[23] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[23] as Connector).intermediatePoints[3].y == 75).toBe(true);
            expect((diagram.connectors[24] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[24] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[24] as Connector).intermediatePoints[1].x == 745 && (diagram.connectors[24] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[24] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[24] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[24] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[24] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[25] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[25] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[25] as Connector).intermediatePoints[1].x == 745 && (diagram.connectors[25] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[25] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[25] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[25] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[25] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[26] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[26] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[26] as Connector).intermediatePoints[1].x == 400 && (diagram.connectors[26] as Connector).intermediatePoints[1].y == 150 && (diagram.connectors[26] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[26] as Connector).intermediatePoints[2].y == 150 && (diagram.connectors[26] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[26] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[26] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[26] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[27] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[27] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[27] as Connector).intermediatePoints[1].x == 400 && (diagram.connectors[27] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[27] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[27] as Connector).intermediatePoints[2].y == 250 && (diagram.connectors[27] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[27] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[27] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[27] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[28] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[28] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[28] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[28] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[28] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[28] as Connector).intermediatePoints[2].y == 125).toBe(true);
            expect((diagram.connectors[29] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[29] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[29] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[29] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[29] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[29] as Connector).intermediatePoints[2].y == 125).toBe(true);
            expect((diagram.connectors[30] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[30] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[30] as Connector).intermediatePoints[1].x == 400 && (diagram.connectors[30] as Connector).intermediatePoints[1].y == 150 && (diagram.connectors[30] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[30] as Connector).intermediatePoints[2].y == 150 && (diagram.connectors[30] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[30] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[31] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[31] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[31] as Connector).intermediatePoints[1].x == 400 && (diagram.connectors[31] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[31] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[31] as Connector).intermediatePoints[2].y == 250 && (diagram.connectors[31] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[31] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[32] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[32] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[32] as Connector).intermediatePoints[1].x == 55 && (diagram.connectors[32] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[32] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[32] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[32] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[32] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[33] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[33] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[33] as Connector).intermediatePoints[1].x == 55 && (diagram.connectors[33] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[33] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[33] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[33] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[33] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[34] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[34] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[34] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[34] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[34] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[34] as Connector).intermediatePoints[2].y == 250 && (diagram.connectors[34] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[34] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[34] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[34] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[35] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[35] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[35] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[35] as Connector).intermediatePoints[1].y == 350 && (diagram.connectors[35] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[35] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[35] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[35] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[35] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[35] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[36] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[36] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[36] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[36] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[36] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[36] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[37] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[37] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[37] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[37] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[37] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[37] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[38] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[38] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[38] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[38] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[38] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[38] as Connector).intermediatePoints[2].y == 250 && (diagram.connectors[38] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[38] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[39] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[39] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[39] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[39] as Connector).intermediatePoints[1].y == 350 && (diagram.connectors[39] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[39] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[39] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[39] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[40] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[40] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[40] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[40] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[40] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[40] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[40] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[40] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[41] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[41] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[41] as Connector).intermediatePoints[1].x == 350 && (diagram.connectors[41] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[41] as Connector).intermediatePoints[2].x == 350 && (diagram.connectors[41] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[41] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[41] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[42] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[42] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[42] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[42] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[42] as Connector).intermediatePoints[2].x == 125 && (diagram.connectors[42] as Connector).intermediatePoints[2].y == 500).toBe(true);
            expect((diagram.connectors[43] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[43] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[43] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[43] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[43] as Connector).intermediatePoints[2].x == 125 && (diagram.connectors[43] as Connector).intermediatePoints[2].y == 500).toBe(true);
            expect((diagram.connectors[44] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[44] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[44] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[44] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[44] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[44] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[44] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[44] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[44] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[44] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[45] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[45] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[45] as Connector).intermediatePoints[1].x == 350 && (diagram.connectors[45] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[45] as Connector).intermediatePoints[2].x == 350 && (diagram.connectors[45] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[45] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[45] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[45] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[45] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[46] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[46] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[46] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[46] as Connector).intermediatePoints[1].y == 545 && (diagram.connectors[46] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[46] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[46] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[46] as Connector).intermediatePoints[3].y == 525).toBe(true);
            expect((diagram.connectors[47] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[47] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[47] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[47] as Connector).intermediatePoints[1].y == 545 && (diagram.connectors[47] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[47] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[47] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[47] as Connector).intermediatePoints[3].y == 525).toBe(true);
            expect((diagram.connectors[48] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[48] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[48] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[48] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[48] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[48] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[48] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[48] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[49] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[49] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[49] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[49] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[49] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[49] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[49] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[49] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[50] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[50] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[50] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[50] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[50] as Connector).intermediatePoints[2].x == 675 && (diagram.connectors[50] as Connector).intermediatePoints[2].y == 500).toBe(true);
            expect((diagram.connectors[51] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[51] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[51] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[51] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[51] as Connector).intermediatePoints[2].x == 675 && (diagram.connectors[51] as Connector).intermediatePoints[2].y == 500).toBe(true);
            expect((diagram.connectors[52] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[52] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[52] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[52] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[52] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[52] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[53] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[53] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[53] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[53] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[53] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[53] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[54] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[54] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[54] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[54] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[54] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[54] as Connector).intermediatePoints[2].y == 250 && (diagram.connectors[54] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[54] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[55] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[55] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[55] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[55] as Connector).intermediatePoints[1].y == 350 && (diagram.connectors[55] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[55] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[55] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[55] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[56] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[56] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[56] as Connector).intermediatePoints[1].x == 745 && (diagram.connectors[56] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[56] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[56] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[56] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[56] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[57] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[57] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[57] as Connector).intermediatePoints[1].x == 745 && (diagram.connectors[57] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[57] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[57] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[57] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[57] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[58] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[58] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[58] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[58] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[58] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[58] as Connector).intermediatePoints[2].y == 250 && (diagram.connectors[58] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[58] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[58] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[58] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[59] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[59] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[59] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[59] as Connector).intermediatePoints[1].y == 350 && (diagram.connectors[59] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[59] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[59] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[59] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[59] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[59] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[60] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[60] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[60] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[60] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[60] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[60] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[60] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[60] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[60] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[60] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[61] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[61] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[61] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[61] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[61] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[61] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[61] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[61] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[61] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[61] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[62] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[62] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[62] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[62] as Connector).intermediatePoints[1].y == 545 && (diagram.connectors[62] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[62] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[62] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[62] as Connector).intermediatePoints[3].y == 525).toBe(true);
            expect((diagram.connectors[63] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[63] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[63] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[63] as Connector).intermediatePoints[1].y == 545 && (diagram.connectors[63] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[63] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[63] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[63] as Connector).intermediatePoints[3].y == 525).toBe(true);
            expect((diagram.connectors[64] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[64] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[64] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[64] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[64] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[64] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[64] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[64] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[64] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[64] as Connector).intermediatePoints[4].y == 700 && (diagram.connectors[64] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[64] as Connector).intermediatePoints[5].y == 700).toBe(true);
            expect((diagram.connectors[65] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[65] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[65] as Connector).intermediatePoints[1].x == 350 && (diagram.connectors[65] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[65] as Connector).intermediatePoints[2].x == 350 && (diagram.connectors[65] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[65] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[65] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[65] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[65] as Connector).intermediatePoints[4].y == 700 && (diagram.connectors[65] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[65] as Connector).intermediatePoints[5].y == 700).toBe(true);
            expect((diagram.connectors[66] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[66] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[66] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[66] as Connector).intermediatePoints[1].y == 650 && (diagram.connectors[66] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[66] as Connector).intermediatePoints[2].y == 650 && (diagram.connectors[66] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[66] as Connector).intermediatePoints[3].y == 700 && (diagram.connectors[66] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[66] as Connector).intermediatePoints[4].y == 700).toBe(true);
            expect((diagram.connectors[67] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[67] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[67] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[67] as Connector).intermediatePoints[1].y == 750 && (diagram.connectors[67] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[67] as Connector).intermediatePoints[2].y == 750 && (diagram.connectors[67] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[67] as Connector).intermediatePoints[3].y == 700 && (diagram.connectors[67] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[67] as Connector).intermediatePoints[4].y == 700).toBe(true);
            expect((diagram.connectors[68] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[68] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[68] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[68] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[68] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[68] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[68] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[68] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[68] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[68] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[69] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[69] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[69] as Connector).intermediatePoints[1].x == 350 && (diagram.connectors[69] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[69] as Connector).intermediatePoints[2].x == 350 && (diagram.connectors[69] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[69] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[69] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[69] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[69] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[70] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[70] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[70] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[70] as Connector).intermediatePoints[1].y == 650 && (diagram.connectors[70] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[70] as Connector).intermediatePoints[2].y == 650 && (diagram.connectors[70] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[70] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[71] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[71] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[71] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[71] as Connector).intermediatePoints[1].y == 655 && (diagram.connectors[71] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[71] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[71] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[71] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[72] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[72] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[72] as Connector).intermediatePoints[1].x == 125 && (diagram.connectors[72] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[73] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[73] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[73] as Connector).intermediatePoints[1].x == 125 && (diagram.connectors[73] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[74] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[74] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[74] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[74] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[74] as Connector).intermediatePoints[2].x == 125 && (diagram.connectors[74] as Connector).intermediatePoints[2].y == 700).toBe(true);
            expect((diagram.connectors[75] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[75] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[75] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[75] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[75] as Connector).intermediatePoints[2].x == 125 && (diagram.connectors[75] as Connector).intermediatePoints[2].y == 700).toBe(true);
            expect((diagram.connectors[76] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[76] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[76] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[76] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[76] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[76] as Connector).intermediatePoints[2].y == 745 && (diagram.connectors[76] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[76] as Connector).intermediatePoints[3].y == 745 && (diagram.connectors[76] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[76] as Connector).intermediatePoints[4].y == 725).toBe(true);
            expect((diagram.connectors[77] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[77] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[77] as Connector).intermediatePoints[1].x == 350 && (diagram.connectors[77] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[77] as Connector).intermediatePoints[2].x == 350 && (diagram.connectors[77] as Connector).intermediatePoints[2].y == 745 && (diagram.connectors[77] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[77] as Connector).intermediatePoints[3].y == 745 && (diagram.connectors[77] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[77] as Connector).intermediatePoints[4].y == 725).toBe(true);
            expect((diagram.connectors[78] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[78] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[78] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[78] as Connector).intermediatePoints[1].y == 745 && (diagram.connectors[78] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[78] as Connector).intermediatePoints[2].y == 745 && (diagram.connectors[78] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[78] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[79] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[79] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[79] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[79] as Connector).intermediatePoints[1].y == 750 && (diagram.connectors[79] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[79] as Connector).intermediatePoints[2].y == 750 && (diagram.connectors[79] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[79] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[80] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[80] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[80] as Connector).intermediatePoints[1].x == 675 && (diagram.connectors[80] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[81] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[81] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[81] as Connector).intermediatePoints[1].x == 675 && (diagram.connectors[81] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[82] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[82] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[82] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[82] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[82] as Connector).intermediatePoints[2].x == 675 && (diagram.connectors[82] as Connector).intermediatePoints[2].y == 700).toBe(true);
            expect((diagram.connectors[83] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[83] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[83] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[83] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[83] as Connector).intermediatePoints[2].x == 675 && (diagram.connectors[83] as Connector).intermediatePoints[2].y == 700).toBe(true);
            expect((diagram.connectors[84] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[84] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[84] as Connector).intermediatePoints[1].x == 400 && (diagram.connectors[84] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[84] as Connector).intermediatePoints[2].x == 400 && (diagram.connectors[84] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[84] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[84] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[84] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[84] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[85] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[85] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[85] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[85] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[85] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[85] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[85] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[85] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[85] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[85] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[86] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[86] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[86] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[86] as Connector).intermediatePoints[1].y == 650 && (diagram.connectors[86] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[86] as Connector).intermediatePoints[2].y == 650 && (diagram.connectors[86] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[86] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[87] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[87] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[87] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[87] as Connector).intermediatePoints[1].y == 655 && (diagram.connectors[87] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[87] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[87] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[87] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[88] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[88] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[88] as Connector).intermediatePoints[1].x == 400 && (diagram.connectors[88] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[88] as Connector).intermediatePoints[2].x == 400 && (diagram.connectors[88] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[88] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[88] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[88] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[88] as Connector).intermediatePoints[4].y == 700 && (diagram.connectors[88] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[88] as Connector).intermediatePoints[5].y == 700).toBe(true);
            expect((diagram.connectors[89] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[89] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[89] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[89] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[89] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[89] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[89] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[89] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[89] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[89] as Connector).intermediatePoints[4].y == 700 && (diagram.connectors[89] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[89] as Connector).intermediatePoints[5].y == 700).toBe(true);
            expect((diagram.connectors[90] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[90] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[90] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[90] as Connector).intermediatePoints[1].y == 650 && (diagram.connectors[90] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[90] as Connector).intermediatePoints[2].y == 650 && (diagram.connectors[90] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[90] as Connector).intermediatePoints[3].y == 700 && (diagram.connectors[90] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[90] as Connector).intermediatePoints[4].y == 700).toBe(true);
            expect((diagram.connectors[91] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[91] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[91] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[91] as Connector).intermediatePoints[1].y == 750 && (diagram.connectors[91] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[91] as Connector).intermediatePoints[2].y == 750 && (diagram.connectors[91] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[91] as Connector).intermediatePoints[3].y == 700 && (diagram.connectors[91] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[91] as Connector).intermediatePoints[4].y == 700).toBe(true);
            expect((diagram.connectors[92] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[92] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[92] as Connector).intermediatePoints[1].x == 400 && (diagram.connectors[92] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[92] as Connector).intermediatePoints[2].x == 400 && (diagram.connectors[92] as Connector).intermediatePoints[2].y == 745 && (diagram.connectors[92] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[92] as Connector).intermediatePoints[3].y == 745 && (diagram.connectors[92] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[92] as Connector).intermediatePoints[4].y == 725).toBe(true);
            expect((diagram.connectors[93] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[93] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[93] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[93] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[93] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[93] as Connector).intermediatePoints[2].y == 745 && (diagram.connectors[93] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[93] as Connector).intermediatePoints[3].y == 745 && (diagram.connectors[93] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[93] as Connector).intermediatePoints[4].y == 725).toBe(true);
            expect((diagram.connectors[94] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[94] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[94] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[94] as Connector).intermediatePoints[1].y == 745 && (diagram.connectors[94] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[94] as Connector).intermediatePoints[2].y == 745 && (diagram.connectors[94] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[94] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[95] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[95] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[95] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[95] as Connector).intermediatePoints[1].y == 750 && (diagram.connectors[95] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[95] as Connector).intermediatePoints[2].y == 750 && (diagram.connectors[95] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[95] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[96] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[96] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[96] as Connector).intermediatePoints[1].x == 50 && (diagram.connectors[96] as Connector).intermediatePoints[1].y == 850 && (diagram.connectors[96] as Connector).intermediatePoints[2].x == 50 && (diagram.connectors[96] as Connector).intermediatePoints[2].y == 1000 && (diagram.connectors[96] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[96] as Connector).intermediatePoints[3].y == 1000).toBe(true);
            expect((diagram.connectors[97] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[97] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[97] as Connector).intermediatePoints[1].x == 55 && (diagram.connectors[97] as Connector).intermediatePoints[1].y == 850 && (diagram.connectors[97] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[97] as Connector).intermediatePoints[2].y == 1000 && (diagram.connectors[97] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[97] as Connector).intermediatePoints[3].y == 1000).toBe(true);
            expect((diagram.connectors[98] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[98] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[98] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[98] as Connector).intermediatePoints[1].y == 800 && (diagram.connectors[98] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[98] as Connector).intermediatePoints[2].y == 800 && (diagram.connectors[98] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[98] as Connector).intermediatePoints[3].y == 1000 && (diagram.connectors[98] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[98] as Connector).intermediatePoints[4].y == 1000).toBe(true);
            expect((diagram.connectors[99] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[99] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[99] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[99] as Connector).intermediatePoints[1].y == 900 && (diagram.connectors[99] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[99] as Connector).intermediatePoints[2].y == 900 && (diagram.connectors[99] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[99] as Connector).intermediatePoints[3].y == 1000 && (diagram.connectors[99] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[99] as Connector).intermediatePoints[4].y == 1000).toBe(true);
            expect((diagram.connectors[100] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[100] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[100] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[100] as Connector).intermediatePoints[1].y == 975).toBe(true);
            expect((diagram.connectors[101] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[101] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[101] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[101] as Connector).intermediatePoints[1].y == 975).toBe(true);
            expect((diagram.connectors[102] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[102] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[102] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[102] as Connector).intermediatePoints[1].y == 975).toBe(true);
            expect((diagram.connectors[103] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[103] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[103] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[103] as Connector).intermediatePoints[1].y == 975).toBe(true);
            expect((diagram.connectors[104] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[104] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[104] as Connector).intermediatePoints[1].x == 145 && (diagram.connectors[104] as Connector).intermediatePoints[1].y == 850 && (diagram.connectors[104] as Connector).intermediatePoints[2].x == 145 && (diagram.connectors[104] as Connector).intermediatePoints[2].y == 1000 && (diagram.connectors[104] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[104] as Connector).intermediatePoints[3].y == 1000).toBe(true);
            expect((diagram.connectors[105] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[105] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[105] as Connector).intermediatePoints[1].x == 150 && (diagram.connectors[105] as Connector).intermediatePoints[1].y == 850 && (diagram.connectors[105] as Connector).intermediatePoints[2].x == 150 && (diagram.connectors[105] as Connector).intermediatePoints[2].y == 1000 && (diagram.connectors[105] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[105] as Connector).intermediatePoints[3].y == 1000).toBe(true);
            expect((diagram.connectors[106] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[106] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[106] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[106] as Connector).intermediatePoints[1].y == 800 && (diagram.connectors[106] as Connector).intermediatePoints[2].x == 145 && (diagram.connectors[106] as Connector).intermediatePoints[2].y == 800 && (diagram.connectors[106] as Connector).intermediatePoints[3].x == 145 && (diagram.connectors[106] as Connector).intermediatePoints[3].y == 1000 && (diagram.connectors[106] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[106] as Connector).intermediatePoints[4].y == 1000).toBe(true);
            expect((diagram.connectors[107] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[107] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[107] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[107] as Connector).intermediatePoints[1].y == 900 && (diagram.connectors[107] as Connector).intermediatePoints[2].x == 145 && (diagram.connectors[107] as Connector).intermediatePoints[2].y == 900 && (diagram.connectors[107] as Connector).intermediatePoints[3].x == 145 && (diagram.connectors[107] as Connector).intermediatePoints[3].y == 1000 && (diagram.connectors[107] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[107] as Connector).intermediatePoints[4].y == 1000).toBe(true);
            expect((diagram.connectors[108] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[108] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[108] as Connector).intermediatePoints[1].x == 50 && (diagram.connectors[108] as Connector).intermediatePoints[1].y == 850 && (diagram.connectors[108] as Connector).intermediatePoints[2].x == 50 && (diagram.connectors[108] as Connector).intermediatePoints[2].y == 1045 && (diagram.connectors[108] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[108] as Connector).intermediatePoints[3].y == 1045 && (diagram.connectors[108] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[108] as Connector).intermediatePoints[4].y == 1025).toBe(true);
            expect((diagram.connectors[109] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[109] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[109] as Connector).intermediatePoints[1].x == 150 && (diagram.connectors[109] as Connector).intermediatePoints[1].y == 850 && (diagram.connectors[109] as Connector).intermediatePoints[2].x == 150 && (diagram.connectors[109] as Connector).intermediatePoints[2].y == 1045 && (diagram.connectors[109] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[109] as Connector).intermediatePoints[3].y == 1045 && (diagram.connectors[109] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[109] as Connector).intermediatePoints[4].y == 1025).toBe(true);
            expect((diagram.connectors[110] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[110] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[110] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[110] as Connector).intermediatePoints[1].y == 800 && (diagram.connectors[110] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[110] as Connector).intermediatePoints[2].y == 800 && (diagram.connectors[110] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[110] as Connector).intermediatePoints[3].y == 1045 && (diagram.connectors[110] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[110] as Connector).intermediatePoints[4].y == 1045 && (diagram.connectors[110] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[110] as Connector).intermediatePoints[5].y == 1025).toBe(true);
            expect((diagram.connectors[111] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[111] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[111] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[111] as Connector).intermediatePoints[1].y == 900 && (diagram.connectors[111] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[111] as Connector).intermediatePoints[2].y == 900 && (diagram.connectors[111] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[111] as Connector).intermediatePoints[3].y == 1045 && (diagram.connectors[111] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[111] as Connector).intermediatePoints[4].y == 1045 && (diagram.connectors[111] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[111] as Connector).intermediatePoints[5].y == 1025).toBe(true);
            expect((diagram.connectors[112] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[112] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[112] as Connector).intermediatePoints[1].x == 650 && (diagram.connectors[112] as Connector).intermediatePoints[1].y == 1150 && (diagram.connectors[112] as Connector).intermediatePoints[2].x == 650 && (diagram.connectors[112] as Connector).intermediatePoints[2].y == 900 && (diagram.connectors[112] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[112] as Connector).intermediatePoints[3].y == 900).toBe(true);
            expect((diagram.connectors[113] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[113] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[113] as Connector).intermediatePoints[1].x == 655 && (diagram.connectors[113] as Connector).intermediatePoints[1].y == 1150 && (diagram.connectors[113] as Connector).intermediatePoints[2].x == 655 && (diagram.connectors[113] as Connector).intermediatePoints[2].y == 900 && (diagram.connectors[113] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[113] as Connector).intermediatePoints[3].y == 900).toBe(true);
            expect((diagram.connectors[114] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[114] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[114] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[114] as Connector).intermediatePoints[1].y == 1100 && (diagram.connectors[114] as Connector).intermediatePoints[2].x == 655 && (diagram.connectors[114] as Connector).intermediatePoints[2].y == 1100 && (diagram.connectors[114] as Connector).intermediatePoints[3].x == 655 && (diagram.connectors[114] as Connector).intermediatePoints[3].y == 900 && (diagram.connectors[114] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[114] as Connector).intermediatePoints[4].y == 900).toBe(true);
            expect((diagram.connectors[115] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[115] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[115] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[115] as Connector).intermediatePoints[1].y == 1200 && (diagram.connectors[115] as Connector).intermediatePoints[2].x == 655 && (diagram.connectors[115] as Connector).intermediatePoints[2].y == 1200 && (diagram.connectors[115] as Connector).intermediatePoints[3].x == 655 && (diagram.connectors[115] as Connector).intermediatePoints[3].y == 900 && (diagram.connectors[115] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[115] as Connector).intermediatePoints[4].y == 900).toBe(true);
            expect((diagram.connectors[116] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[116] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[116] as Connector).intermediatePoints[1].x == 650 && (diagram.connectors[116] as Connector).intermediatePoints[1].y == 1150 && (diagram.connectors[116] as Connector).intermediatePoints[2].x == 650 && (diagram.connectors[116] as Connector).intermediatePoints[2].y == 855 && (diagram.connectors[116] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[116] as Connector).intermediatePoints[3].y == 855 && (diagram.connectors[116] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[116] as Connector).intermediatePoints[4].y == 875).toBe(true);
            expect((diagram.connectors[117] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[117] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[117] as Connector).intermediatePoints[1].x == 750 && (diagram.connectors[117] as Connector).intermediatePoints[1].y == 1150 && (diagram.connectors[117] as Connector).intermediatePoints[2].x == 750 && (diagram.connectors[117] as Connector).intermediatePoints[2].y == 855 && (diagram.connectors[117] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[117] as Connector).intermediatePoints[3].y == 855 && (diagram.connectors[117] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[117] as Connector).intermediatePoints[4].y == 875).toBe(true);
            expect((diagram.connectors[118] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[118] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[118] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[118] as Connector).intermediatePoints[1].y == 1100 && (diagram.connectors[118] as Connector).intermediatePoints[2].x == 655 && (diagram.connectors[118] as Connector).intermediatePoints[2].y == 1100 && (diagram.connectors[118] as Connector).intermediatePoints[3].x == 655 && (diagram.connectors[118] as Connector).intermediatePoints[3].y == 855 && (diagram.connectors[118] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[118] as Connector).intermediatePoints[4].y == 855 && (diagram.connectors[118] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[118] as Connector).intermediatePoints[5].y == 875).toBe(true);
            expect((diagram.connectors[119] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[119] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[119] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[119] as Connector).intermediatePoints[1].y == 1200 && (diagram.connectors[119] as Connector).intermediatePoints[2].x == 655 && (diagram.connectors[119] as Connector).intermediatePoints[2].y == 1200 && (diagram.connectors[119] as Connector).intermediatePoints[3].x == 655 && (diagram.connectors[119] as Connector).intermediatePoints[3].y == 855 && (diagram.connectors[119] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[119] as Connector).intermediatePoints[4].y == 855 && (diagram.connectors[119] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[119] as Connector).intermediatePoints[5].y == 875).toBe(true);
            expect((diagram.connectors[120] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[120] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[120] as Connector).intermediatePoints[1].x == 745 && (diagram.connectors[120] as Connector).intermediatePoints[1].y == 1150 && (diagram.connectors[120] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[120] as Connector).intermediatePoints[2].y == 900 && (diagram.connectors[120] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[120] as Connector).intermediatePoints[3].y == 900).toBe(true);
            expect((diagram.connectors[121] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[121] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[121] as Connector).intermediatePoints[1].x == 750 && (diagram.connectors[121] as Connector).intermediatePoints[1].y == 1150 && (diagram.connectors[121] as Connector).intermediatePoints[2].x == 750 && (diagram.connectors[121] as Connector).intermediatePoints[2].y == 900 && (diagram.connectors[121] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[121] as Connector).intermediatePoints[3].y == 900).toBe(true);
            expect((diagram.connectors[122] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[122] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[122] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[122] as Connector).intermediatePoints[1].y == 1100 && (diagram.connectors[122] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[122] as Connector).intermediatePoints[2].y == 1100 && (diagram.connectors[122] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[122] as Connector).intermediatePoints[3].y == 900 && (diagram.connectors[122] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[122] as Connector).intermediatePoints[4].y == 900).toBe(true);
            expect((diagram.connectors[123] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[123] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[123] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[123] as Connector).intermediatePoints[1].y == 1200 && (diagram.connectors[123] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[123] as Connector).intermediatePoints[2].y == 1200 && (diagram.connectors[123] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[123] as Connector).intermediatePoints[3].y == 900 && (diagram.connectors[123] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[123] as Connector).intermediatePoints[4].y == 900).toBe(true);
            expect((diagram.connectors[124] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[124] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[124] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[124] as Connector).intermediatePoints[1].y == 925).toBe(true);
            expect((diagram.connectors[125] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[125] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[125] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[125] as Connector).intermediatePoints[1].y == 925).toBe(true);
            expect((diagram.connectors[126] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[126] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[126] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[126] as Connector).intermediatePoints[1].y == 925).toBe(true);
            expect((diagram.connectors[127] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[127] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[127] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[127] as Connector).intermediatePoints[1].y == 925).toBe(true);
            done();
        });
    });

    describe('Conectors with segments - Orthogonal Segment Rendering(Node To Point)', () => {
        let diagram: Diagram;
        let ele: HTMLElement;
        let mouseEvents: MouseEvents = new MouseEvents();
        let diagramCanvas: HTMLElement;
        beforeAll((): void => {
            ele = createElement('div', { id: 'diagramOrthogonalSegmentNodeToPointRendering' });
            document.body.appendChild(ele);
            let nodesCollection: NodeModel[] = []; let count = 1; let offsetY = 100; let offsetX = 100
            for (let i = 0; i < 9; i++) {
                let node = {
                    id: 'node' + i, offsetX: ((count) * offsetX), offsetY: offsetY, width: 50, height: 50,
                    annotations: [{
                        content: ((count) * offsetX).toString(),
                    },
                    {
                        offset: { x: 0.5, y: 0 },
                        content: offsetY.toString(),
                    },
                    {
                        offset: { x: 0.5, y: 1 },
                        content: 'node' + i,
                    }],
                    ports: [{ id: 'port1', offset: { x: 0, y: 0.5 } },
                    { id: 'port2', offset: { x: 0.5, y: 0 } },
                    { id: 'port3', offset: { x: 1, y: 0.5 } },
                    { id: 'port4', offset: { x: 0.5, y: 1 } }]
                };
                if (node.id !== 'node4') {
                    nodesCollection.push(node);
                }
                count += 3;
                if (count == 10) {
                    count = 1;
                    offsetX = 100;
                    offsetY = offsetY + 200;
                }
            }
            let portCollection = [{ id: 'port1', offset: { x: 0, y: 0.5 } },
            { id: 'port2', offset: { x: 0.5, y: 0 } },
            { id: 'port3', offset: { x: 1, y: 0.5 } },
            { id: 'port4', offset: { x: 0.5, y: 1 } }];
            nodesCollection.push({ id: 'node9', offsetX: 100, offsetY: 700, width: 50, height: 50, ports: portCollection });
            nodesCollection.push({ id: 'node10', offsetX: 700, offsetY: 700, width: 50, height: 50, ports: portCollection });
            nodesCollection.push({ id: 'node11', offsetX: 100, offsetY: 1000, width: 50, height: 50, ports: portCollection });
            nodesCollection.push({ id: 'node12', offsetX: 700, offsetY: 900, width: 50, height: 50, ports: portCollection });

            let nodes: NodeModel[] = nodesCollection;
            let connectors: ConnectorModel[] = [];
            count = 0;
            let dir = ['Left', 'Right', 'Top', 'Bottom'];
            let ports = ['port1', 'port2', 'port3', 'port4'];
            let targetPoints = [{ x: 300, y: 200 }, { x: 400, y: 200 }, { x: 300, y: 300 }, { x: 500, y: 300 },
            { x: 300, y: 700 }, { x: 450, y: 700 }, { x: 100, y: 850 }, { x: 700, y: 1150 }];
            let sourceNodes = ['node0', 'node2', 'node6', 'node8',
                'node9', 'node10', 'node11', 'node12'];
            for (let i = 0; i < sourceNodes.length; i++) {
                for (let j = 0; j < dir.length; j++) {
                    let connector: ConnectorModel = {
                        id: 'connector' + count, type: 'Orthogonal', targetPoint: targetPoints[i], sourceID: sourceNodes[i],
                        segments: [{ type: 'Orthogonal', direction: dir[j], length: 50 },],
                    }
                    connectors.push(connector);
                    count++;
                }
            }

            diagram = new Diagram({
                width: 1000, height: 1000, nodes: nodes,
                connectors: connectors, 
                getConnectorDefaults: (obj: ConnectorModel, diagram: Diagram) => {
                    let connector: ConnectorModel = {};
                    connector.constraints = ConnectorConstraints.Default | ConnectorConstraints.DragSegmentThumb;
                    return connector;
                },
                snapSettings: { constraints: SnapConstraints.ShowLines }
            });
            diagram.appendTo('#diagramOrthogonalSegmentNodeToPointRendering');

            diagramCanvas = document.getElementById(diagram.element.id + 'content');
        });
        afterAll((): void => {
            diagram.destroy();
            ele.remove();
        });

        it('Checking Orthogonal segment - Rendering (Node To Point) All causes', (done: Function) => {

            expect((diagram.connectors[0] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[0] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[0] as Connector).intermediatePoints[1].x == 25 && (diagram.connectors[0] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[0] as Connector).intermediatePoints[2].x == 25 && (diagram.connectors[0] as Connector).intermediatePoints[2].y == 200 && (diagram.connectors[0] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[0] as Connector).intermediatePoints[3].y == 200).toBe(true);
            expect((diagram.connectors[1] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[1] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[1] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[1] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[1] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[1] as Connector).intermediatePoints[2].y == 200 && (diagram.connectors[1] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[1] as Connector).intermediatePoints[3].y == 200).toBe(true);
            expect((diagram.connectors[2] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[2] as Connector).intermediatePoints[0].y == 75 && (diagram.connectors[2] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[2] as Connector).intermediatePoints[1].y == 25 && (diagram.connectors[2] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[2] as Connector).intermediatePoints[2].y == 25 && (diagram.connectors[2] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[2] as Connector).intermediatePoints[3].y == 200).toBe(true);
            expect((diagram.connectors[3] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[3] as Connector).intermediatePoints[0].y == 125 && (diagram.connectors[3] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[3] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[3] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[3] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[3] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[3] as Connector).intermediatePoints[3].y == 200).toBe(true);
            expect((diagram.connectors[4] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[4] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[4] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[4] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[4] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[4] as Connector).intermediatePoints[2].y == 200 && (diagram.connectors[4] as Connector).intermediatePoints[3].x == 400 && (diagram.connectors[4] as Connector).intermediatePoints[3].y == 200).toBe(true);
            expect((diagram.connectors[5] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[5] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[5] as Connector).intermediatePoints[1].x == 775 && (diagram.connectors[5] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[5] as Connector).intermediatePoints[2].x == 775 && (diagram.connectors[5] as Connector).intermediatePoints[2].y == 200 && (diagram.connectors[5] as Connector).intermediatePoints[3].x == 400 && (diagram.connectors[5] as Connector).intermediatePoints[3].y == 200).toBe(true);
            expect((diagram.connectors[6] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[6] as Connector).intermediatePoints[0].y == 75 && (diagram.connectors[6] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[6] as Connector).intermediatePoints[1].y == 25 && (diagram.connectors[6] as Connector).intermediatePoints[2].x == 400 && (diagram.connectors[6] as Connector).intermediatePoints[2].y == 25 && (diagram.connectors[6] as Connector).intermediatePoints[3].x == 400 && (diagram.connectors[6] as Connector).intermediatePoints[3].y == 200).toBe(true);
            expect((diagram.connectors[7] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[7] as Connector).intermediatePoints[0].y == 125 && (diagram.connectors[7] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[7] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[7] as Connector).intermediatePoints[2].x == 400 && (diagram.connectors[7] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[7] as Connector).intermediatePoints[3].x == 400 && (diagram.connectors[7] as Connector).intermediatePoints[3].y == 200).toBe(true);
            expect((diagram.connectors[8] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[8] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[8] as Connector).intermediatePoints[1].x == 25 && (diagram.connectors[8] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[8] as Connector).intermediatePoints[2].x == 25 && (diagram.connectors[8] as Connector).intermediatePoints[2].y == 300 && (diagram.connectors[8] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[8] as Connector).intermediatePoints[3].y == 300).toBe(true);
            expect((diagram.connectors[9] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[9] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[9] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[9] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[9] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[9] as Connector).intermediatePoints[2].y == 300 && (diagram.connectors[9] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[9] as Connector).intermediatePoints[3].y == 300).toBe(true);
            expect((diagram.connectors[10] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[10] as Connector).intermediatePoints[0].y == 475 && (diagram.connectors[10] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[10] as Connector).intermediatePoints[1].y == 425 && (diagram.connectors[10] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[10] as Connector).intermediatePoints[2].y == 425 && (diagram.connectors[10] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[10] as Connector).intermediatePoints[3].y == 300).toBe(true);
            expect((diagram.connectors[11] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[11] as Connector).intermediatePoints[0].y == 525 && (diagram.connectors[11] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[11] as Connector).intermediatePoints[1].y == 575 && (diagram.connectors[11] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[11] as Connector).intermediatePoints[2].y == 575 && (diagram.connectors[11] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[11] as Connector).intermediatePoints[3].y == 300).toBe(true);
            expect((diagram.connectors[12] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[12] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[12] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[12] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[12] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[12] as Connector).intermediatePoints[2].y == 300 && (diagram.connectors[12] as Connector).intermediatePoints[3].x == 500 && (diagram.connectors[12] as Connector).intermediatePoints[3].y == 300).toBe(true);
            expect((diagram.connectors[13] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[13] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[13] as Connector).intermediatePoints[1].x == 775 && (diagram.connectors[13] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[13] as Connector).intermediatePoints[2].x == 775 && (diagram.connectors[13] as Connector).intermediatePoints[2].y == 300 && (diagram.connectors[13] as Connector).intermediatePoints[3].x == 500 && (diagram.connectors[13] as Connector).intermediatePoints[3].y == 300).toBe(true);
            expect((diagram.connectors[14] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[14] as Connector).intermediatePoints[0].y == 475 && (diagram.connectors[14] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[14] as Connector).intermediatePoints[1].y == 425 && (diagram.connectors[14] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[14] as Connector).intermediatePoints[2].y == 425 && (diagram.connectors[14] as Connector).intermediatePoints[3].x == 500 && (diagram.connectors[14] as Connector).intermediatePoints[3].y == 300).toBe(true);
            expect((diagram.connectors[15] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[15] as Connector).intermediatePoints[0].y == 525 && (diagram.connectors[15] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[15] as Connector).intermediatePoints[1].y == 575 && (diagram.connectors[15] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[15] as Connector).intermediatePoints[2].y == 575 && (diagram.connectors[15] as Connector).intermediatePoints[3].x == 500 && (diagram.connectors[15] as Connector).intermediatePoints[3].y == 300).toBe(true);
            expect((diagram.connectors[16] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[16] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[16] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[16] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[17] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[17] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[17] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[17] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[18] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[18] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[18] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[18] as Connector).intermediatePoints[1].y == 625 && (diagram.connectors[18] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[18] as Connector).intermediatePoints[2].y == 625 && (diagram.connectors[18] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[18] as Connector).intermediatePoints[3].y == 700).toBe(true);
            expect((diagram.connectors[19] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[19] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[19] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[19] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[19] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[19] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[19] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[19] as Connector).intermediatePoints[3].y == 700).toBe(true);
            expect((diagram.connectors[20] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[20] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[20] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[20] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[21] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[21] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[21] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[21] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[22] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[22] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[22] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[22] as Connector).intermediatePoints[1].y == 625 && (diagram.connectors[22] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[22] as Connector).intermediatePoints[2].y == 625 && (diagram.connectors[22] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[22] as Connector).intermediatePoints[3].y == 700).toBe(true);
            expect((diagram.connectors[23] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[23] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[23] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[23] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[23] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[23] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[23] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[23] as Connector).intermediatePoints[3].y == 700).toBe(true);
            expect((diagram.connectors[24] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[24] as Connector).intermediatePoints[0].y == 1000 && (diagram.connectors[24] as Connector).intermediatePoints[1].x == 25 && (diagram.connectors[24] as Connector).intermediatePoints[1].y == 1000 && (diagram.connectors[24] as Connector).intermediatePoints[2].x == 25 && (diagram.connectors[24] as Connector).intermediatePoints[2].y == 850 && (diagram.connectors[24] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[24] as Connector).intermediatePoints[3].y == 850).toBe(true);
            expect((diagram.connectors[25] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[25] as Connector).intermediatePoints[0].y == 1000 && (diagram.connectors[25] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[25] as Connector).intermediatePoints[1].y == 1000 && (diagram.connectors[25] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[25] as Connector).intermediatePoints[2].y == 850 && (diagram.connectors[25] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[25] as Connector).intermediatePoints[3].y == 850).toBe(true);
            expect((diagram.connectors[26] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[26] as Connector).intermediatePoints[0].y == 975 && (diagram.connectors[26] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[26] as Connector).intermediatePoints[1].y == 850).toBe(true);
            expect((diagram.connectors[27] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[27] as Connector).intermediatePoints[0].y == 975 && (diagram.connectors[27] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[27] as Connector).intermediatePoints[1].y == 850).toBe(true);
            expect((diagram.connectors[28] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[28] as Connector).intermediatePoints[0].y == 900 && (diagram.connectors[28] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[28] as Connector).intermediatePoints[1].y == 900 && (diagram.connectors[28] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[28] as Connector).intermediatePoints[2].y == 1150 && (diagram.connectors[28] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[28] as Connector).intermediatePoints[3].y == 1150).toBe(true);
            expect((diagram.connectors[29] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[29] as Connector).intermediatePoints[0].y == 900 && (diagram.connectors[29] as Connector).intermediatePoints[1].x == 775 && (diagram.connectors[29] as Connector).intermediatePoints[1].y == 900 && (diagram.connectors[29] as Connector).intermediatePoints[2].x == 775 && (diagram.connectors[29] as Connector).intermediatePoints[2].y == 1150 && (diagram.connectors[29] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[29] as Connector).intermediatePoints[3].y == 1150).toBe(true);
            expect((diagram.connectors[30] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[30] as Connector).intermediatePoints[0].y == 925 && (diagram.connectors[30] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[30] as Connector).intermediatePoints[1].y == 1150).toBe(true);
            expect((diagram.connectors[31] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[31] as Connector).intermediatePoints[0].y == 925 && (diagram.connectors[31] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[31] as Connector).intermediatePoints[1].y == 1150).toBe(true);
            done();
        });
    });

    describe('Conectors with segments - Orthogonal Segment Rendering(Point To Node)', () => {
        let diagram: Diagram;
        let ele: HTMLElement;
        let mouseEvents: MouseEvents = new MouseEvents();
        let diagramCanvas: HTMLElement;
        beforeAll((): void => {
            ele = createElement('div', { id: 'diagramOrthogonalSegmentPointToNodeRendering' });
            document.body.appendChild(ele);
            let nodesCollection: NodeModel[] = []; let count = 1; let offsetY = 100; let offsetX = 100
            for (let i = 0; i < 9; i++) {
                let node = {
                    id: 'node' + i, offsetX: ((count) * offsetX), offsetY: offsetY, width: 50, height: 50,
                    annotations: [{
                        content: ((count) * offsetX).toString(),
                    },
                    {
                        offset: { x: 0.5, y: 0 },
                        content: offsetY.toString(),
                    },
                    {
                        offset: { x: 0.5, y: 1 },
                        content: 'node' + i,
                    }],
                    ports: [{ id: 'port1', offset: { x: 0, y: 0.5 } },
                    { id: 'port2', offset: { x: 0.5, y: 0 } },
                    { id: 'port3', offset: { x: 1, y: 0.5 } },
                    { id: 'port4', offset: { x: 0.5, y: 1 } }]
                };
                if (node.id !== 'node4') {
                    nodesCollection.push(node);
                }
                count += 3;
                if (count == 10) {
                    count = 1;
                    offsetX = 100;
                    offsetY = offsetY + 200;
                }
            }
            let portCollection = [{ id: 'port1', offset: { x: 0, y: 0.5 } },
            { id: 'port2', offset: { x: 0.5, y: 0 } },
            { id: 'port3', offset: { x: 1, y: 0.5 } },
            { id: 'port4', offset: { x: 0.5, y: 1 } }];
            nodesCollection.push({ id: 'node9', offsetX: 100, offsetY: 700, width: 50, height: 50, ports: portCollection });
            nodesCollection.push({ id: 'node10', offsetX: 700, offsetY: 700, width: 50, height: 50, ports: portCollection });
            nodesCollection.push({ id: 'node11', offsetX: 100, offsetY: 1000, width: 50, height: 50, ports: portCollection });
            nodesCollection.push({ id: 'node12', offsetX: 700, offsetY: 900, width: 50, height: 50, ports: portCollection });

            let nodes: NodeModel[] = nodesCollection;

            let connectors: ConnectorModel[] = [];
            count = 0;
            let dir = ['Left', 'Right', 'Top', 'Bottom'];
            let ports = ['port1', 'port2', 'port3', 'port4'];
            let sourcePoints = [{ x: 300, y: 200 }, { x: 400, y: 200 }, { x: 300, y: 300 }, { x: 500, y: 300 },
            { x: 300, y: 700 }, { x: 450, y: 700 }, { x: 100, y: 850 }, { x: 700, y: 1150 }];
            let targetNodes = ['node0', 'node2', 'node6', 'node8',
                'node9', 'node10', 'node11', 'node12'];
            for (let i = 0; i < targetNodes.length; i++) {
                for (let j = 0; j < dir.length; j++) {
                    let connector: ConnectorModel = {
                        id: 'connector' + count, type: 'Orthogonal', sourcePoint: sourcePoints[i], targetID: targetNodes[i],
                        segments: [{ type: 'Orthogonal', direction: dir[j], length: 50 },],
                    }
                    connectors.push(connector);
                    count++;
                }
            }

            diagram = new Diagram({
                width: 1000, height: 1000, nodes: nodes,
                connectors: connectors, 
                getConnectorDefaults: (obj: ConnectorModel, diagram: Diagram) => {
                    let connector: ConnectorModel = {};
                    connector.constraints = ConnectorConstraints.Default | ConnectorConstraints.DragSegmentThumb;
                    return connector;
                },
                snapSettings: { constraints: SnapConstraints.ShowLines }
            });
            diagram.appendTo('#diagramOrthogonalSegmentPointToNodeRendering');

            diagramCanvas = document.getElementById(diagram.element.id + 'content');
        });
        afterAll((): void => {
            diagram.destroy();
            ele.remove();
        });

        it('Checking Orthogonal segment - Rendering (Point To Node) All causes', (done: Function) => {

            expect((diagram.connectors[0] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[0] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[0] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[0] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[0] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[0] as Connector).intermediatePoints[2].y == 125).toBe(true);
            expect((diagram.connectors[1] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[1] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[1] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[1] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[1] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[1] as Connector).intermediatePoints[2].y == 125).toBe(true);
            expect((diagram.connectors[2] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[2] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[2] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[2] as Connector).intermediatePoints[1].y == 150 && (diagram.connectors[2] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[2] as Connector).intermediatePoints[2].y == 150 && (diagram.connectors[2] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[2] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[3] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[3] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[3] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[3] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[3] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[3] as Connector).intermediatePoints[2].y == 250 && (diagram.connectors[3] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[3] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[4] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[4] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[4] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[4] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[4] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[4] as Connector).intermediatePoints[2].y == 125).toBe(true);
            expect((diagram.connectors[5] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[5] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[5] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[5] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[5] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[5] as Connector).intermediatePoints[2].y == 125).toBe(true);
            expect((diagram.connectors[6] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[6] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[6] as Connector).intermediatePoints[1].x == 400 && (diagram.connectors[6] as Connector).intermediatePoints[1].y == 150 && (diagram.connectors[6] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[6] as Connector).intermediatePoints[2].y == 150 && (diagram.connectors[6] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[6] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[7] as Connector).intermediatePoints[0].x == 400 && (diagram.connectors[7] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[7] as Connector).intermediatePoints[1].x == 400 && (diagram.connectors[7] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[7] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[7] as Connector).intermediatePoints[2].y == 250 && (diagram.connectors[7] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[7] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[8] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[8] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[8] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[8] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[8] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[8] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[9] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[9] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[9] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[9] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[9] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[9] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[10] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[10] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[10] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[10] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[10] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[10] as Connector).intermediatePoints[2].y == 250 && (diagram.connectors[10] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[10] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[11] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[11] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[11] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[11] as Connector).intermediatePoints[1].y == 350 && (diagram.connectors[11] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[11] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[11] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[11] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[12] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[12] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[12] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[12] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[12] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[12] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[13] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[13] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[13] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[13] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[13] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[13] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[14] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[14] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[14] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[14] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[14] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[14] as Connector).intermediatePoints[2].y == 250 && (diagram.connectors[14] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[14] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[15] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[15] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[15] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[15] as Connector).intermediatePoints[1].y == 350 && (diagram.connectors[15] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[15] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[15] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[15] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[16] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[16] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[16] as Connector).intermediatePoints[1].x == 125 && (diagram.connectors[16] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[17] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[17] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[17] as Connector).intermediatePoints[1].x == 350 && (diagram.connectors[17] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[17] as Connector).intermediatePoints[2].x == 350 && (diagram.connectors[17] as Connector).intermediatePoints[2].y == 635 && (diagram.connectors[17] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[17] as Connector).intermediatePoints[3].y == 635 && (diagram.connectors[17] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[17] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[18] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[18] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[18] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[18] as Connector).intermediatePoints[1].y == 650 && (diagram.connectors[18] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[18] as Connector).intermediatePoints[2].y == 650 && (diagram.connectors[18] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[18] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[19] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[19] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[19] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[19] as Connector).intermediatePoints[1].y == 750 && (diagram.connectors[19] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[19] as Connector).intermediatePoints[2].y == 750 && (diagram.connectors[19] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[19] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[20] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[20] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[20] as Connector).intermediatePoints[1].x == 400 && (diagram.connectors[20] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[20] as Connector).intermediatePoints[2].x == 400 && (diagram.connectors[20] as Connector).intermediatePoints[2].y == 635 && (diagram.connectors[20] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[20] as Connector).intermediatePoints[3].y == 635 && (diagram.connectors[20] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[20] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[21] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[21] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[21] as Connector).intermediatePoints[1].x == 675 && (diagram.connectors[21] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[22] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[22] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[22] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[22] as Connector).intermediatePoints[1].y == 650 && (diagram.connectors[22] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[22] as Connector).intermediatePoints[2].y == 650 && (diagram.connectors[22] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[22] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[23] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[23] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[23] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[23] as Connector).intermediatePoints[1].y == 750 && (diagram.connectors[23] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[23] as Connector).intermediatePoints[2].y == 750 && (diagram.connectors[23] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[23] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[24] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[24] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[24] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[24] as Connector).intermediatePoints[1].y == 975).toBe(true);
            expect((diagram.connectors[25] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[25] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[25] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[25] as Connector).intermediatePoints[1].y == 975).toBe(true);
            expect((diagram.connectors[26] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[26] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[26] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[26] as Connector).intermediatePoints[1].y == 975).toBe(true);
            expect((diagram.connectors[27] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[27] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[27] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[27] as Connector).intermediatePoints[1].y == 975).toBe(true);
            expect((diagram.connectors[28] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[28] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[28] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[28] as Connector).intermediatePoints[1].y == 925).toBe(true);
            expect((diagram.connectors[29] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[29] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[29] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[29] as Connector).intermediatePoints[1].y == 925).toBe(true);
            expect((diagram.connectors[30] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[30] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[30] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[30] as Connector).intermediatePoints[1].y == 925).toBe(true);
            expect((diagram.connectors[31] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[31] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[31] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[31] as Connector).intermediatePoints[1].y == 925).toBe(true);
            done();

        });
    });

    describe('Conectors with segments - Orthogonal Segment Rendering(Node To Node)', () => {
        let diagram: Diagram;
        let ele: HTMLElement;
        let mouseEvents: MouseEvents = new MouseEvents();
        let diagramCanvas: HTMLElement;
        beforeAll((): void => {
            ele = createElement('div', { id: 'diagramOrthogonalSegmentNodeToNodeRendering' });
            document.body.appendChild(ele);
            let nodes: NodeModel[] = []; let count = 1; let offsetY = 100; let offsetX = 100
            for (var i = 0; i < 9; i++) {
                var node = {
                    id: 'node' + i, offsetX: ((count) * offsetX), offsetY: offsetY, width: 50, height: 50,
                    annotations: [{
                        content: ((count) * offsetX).toString(),
                    },
                    {
                        offset: { x: 0.5, y: 0 },
                        content: offsetY.toString(),
                    }, {
                        offset: { x: 0.5, y: 1 },
                        content: 'node' + i,
                    }],
                    ports: [{ id: 'port1', offset: { x: 0, y: 0.5 } },
                    { id: 'port2', offset: { x: 0.5, y: 0 } },
                    { id: 'port3', offset: { x: 1, y: 0.5 } },
                    { id: 'port4', offset: { x: 0.5, y: 1 } }]
                };
                if (node.id == 'node1') {
                    node.offsetX = 550, node.offsetY = 250,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                }
                else if (node.id == 'node3') {
                    node.offsetX = 250, node.offsetY = 250,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                }
                else if (node.id == 'node5') {
                    node.offsetX = 550, node.offsetY = 400,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                } else if (node.id == 'node7') {
                    node.offsetX = 250, node.offsetY = 400,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                }
                if (node.id !== 'node4')
                    nodes.push(node);
                count += 3;
                if (count == 10) {
                    count = 1;
                    offsetX = 100;
                    offsetY = offsetY + 200;
                }
            }
            nodes.push({ id: 'node9', offsetX: 100, offsetY: 700, width: 50, height: 50, });
            nodes.push({ id: 'node10', offsetX: 700, offsetY: 700, width: 50, height: 50, });
            nodes.push({ id: 'node11', offsetX: 100, offsetY: 1000, width: 50, height: 50, });
            nodes.push({ id: 'node12', offsetX: 700, offsetY: 900, width: 50, height: 50, });
            nodes.push({ id: 'node13', offsetX: 300, offsetY: 700, width: 50, height: 50 });
            nodes.push({ id: 'node14', offsetX: 450, offsetY: 700, width: 50, height: 50 });
            nodes.push({ id: 'node15', offsetX: 100, offsetY: 850, width: 50, height: 50 });
            nodes.push({ id: 'node16', offsetX: 700, offsetY: 1150, width: 50, height: 50 });
            let connectors: ConnectorModel[] = [];
            let dir = ['Left', 'Right', 'Top', 'Bottom'];
            // let ports = ['port1', 'port2', 'port3', 'port4'];
            let targetNodes = ['node3', 'node1', 'node7', 'node5',
                'node13', 'node14', 'node15', 'node16'];
            let sourceNodes = ['node0', 'node2', 'node6', 'node8',
                'node9', 'node10', 'node11', 'node12'];
            for (let i = 0; i < sourceNodes.length; i++) {
                for (let j = 0; j < dir.length; j++) {
                    let connector: ConnectorModel = {
                        id: 'connector' + count, type: 'Orthogonal', targetID: targetNodes[i], sourceID: sourceNodes[i],
                        segments: [{ type: 'Orthogonal', direction: dir[j], length: 50 },],
                    }
                    connectors.push(connector);
                    count++;
                }
            }

            diagram = new Diagram({
                width: 1000, height: 1000, nodes: nodes,
                connectors: connectors, 
                getConnectorDefaults: (obj: ConnectorModel, diagram: Diagram) => {
                    let connector: ConnectorModel = {};
                    connector.constraints = ConnectorConstraints.Default | ConnectorConstraints.DragSegmentThumb;
                    return connector;
                },
                snapSettings: { constraints: SnapConstraints.ShowLines }
            });
            diagram.appendTo('#diagramOrthogonalSegmentNodeToNodeRendering');
            diagramCanvas = document.getElementById(diagram.element.id + 'content');
        });
        afterAll((): void => {
            diagram.destroy();
            ele.remove();
        });
        it('Checking Orthogonal segment - Node to Node Rendering', (done: Function) => {

            expect((diagram.connectors[0] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[0] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[0] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[0] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[0] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[0] as Connector).intermediatePoints[2].y == 225).toBe(true);
            expect((diagram.connectors[1] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[1] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[1] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[1] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[1] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[1] as Connector).intermediatePoints[2].y == 225).toBe(true);
            expect((diagram.connectors[2] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[2] as Connector).intermediatePoints[0].y == 75 && (diagram.connectors[2] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[2] as Connector).intermediatePoints[1].y == 25 && (diagram.connectors[2] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[2] as Connector).intermediatePoints[2].y == 25 && (diagram.connectors[2] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[2] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[3] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[3] as Connector).intermediatePoints[0].y == 125 && (diagram.connectors[3] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[3] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[3] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[3] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[3] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[3] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[4] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[4] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[4] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[4] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[4] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[4] as Connector).intermediatePoints[2].y == 225).toBe(true);
            expect((diagram.connectors[5] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[5] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[5] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[5] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[5] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[5] as Connector).intermediatePoints[2].y == 225).toBe(true);
            expect((diagram.connectors[6] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[6] as Connector).intermediatePoints[0].y == 75 && (diagram.connectors[6] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[6] as Connector).intermediatePoints[1].y == 25 && (diagram.connectors[6] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[6] as Connector).intermediatePoints[2].y == 25 && (diagram.connectors[6] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[6] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[7] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[7] as Connector).intermediatePoints[0].y == 125 && (diagram.connectors[7] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[7] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[7] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[7] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[7] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[7] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[8] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[8] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[8] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[8] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[8] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[8] as Connector).intermediatePoints[2].y == 425).toBe(true);
            expect((diagram.connectors[9] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[9] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[9] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[9] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[9] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[9] as Connector).intermediatePoints[2].y == 425).toBe(true);
            expect((diagram.connectors[10] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[10] as Connector).intermediatePoints[0].y == 475 && (diagram.connectors[10] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[10] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[10] as Connector).intermediatePoints[2].x == 225 && (diagram.connectors[10] as Connector).intermediatePoints[2].y == 400).toBe(true);
            expect((diagram.connectors[11] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[11] as Connector).intermediatePoints[0].y == 525 && (diagram.connectors[11] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[11] as Connector).intermediatePoints[1].y == 575 && (diagram.connectors[11] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[11] as Connector).intermediatePoints[2].y == 575 && (diagram.connectors[11] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[11] as Connector).intermediatePoints[3].y == 425).toBe(true);
            expect((diagram.connectors[12] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[12] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[12] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[12] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[12] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[12] as Connector).intermediatePoints[2].y == 425).toBe(true);
            expect((diagram.connectors[13] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[13] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[13] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[13] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[13] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[13] as Connector).intermediatePoints[2].y == 425).toBe(true);
            expect((diagram.connectors[14] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[14] as Connector).intermediatePoints[0].y == 475 && (diagram.connectors[14] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[14] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[14] as Connector).intermediatePoints[2].x == 575 && (diagram.connectors[14] as Connector).intermediatePoints[2].y == 400).toBe(true);
            expect((diagram.connectors[15] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[15] as Connector).intermediatePoints[0].y == 525 && (diagram.connectors[15] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[15] as Connector).intermediatePoints[1].y == 575 && (diagram.connectors[15] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[15] as Connector).intermediatePoints[2].y == 575 && (diagram.connectors[15] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[15] as Connector).intermediatePoints[3].y == 425).toBe(true);
            expect((diagram.connectors[16] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[16] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[16] as Connector).intermediatePoints[1].x == 275 && (diagram.connectors[16] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[17] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[17] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[17] as Connector).intermediatePoints[1].x == 275 && (diagram.connectors[17] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[18] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[18] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[18] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[18] as Connector).intermediatePoints[1].y == 625 && (diagram.connectors[18] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[18] as Connector).intermediatePoints[2].y == 625 && (diagram.connectors[18] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[18] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[19] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[19] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[19] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[19] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[19] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[19] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[19] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[19] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[20] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[20] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[20] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[20] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[21] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[21] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[21] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[21] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[22] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[22] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[22] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[22] as Connector).intermediatePoints[1].y == 625 && (diagram.connectors[22] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[22] as Connector).intermediatePoints[2].y == 625 && (diagram.connectors[22] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[22] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[23] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[23] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[23] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[23] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[23] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[23] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[23] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[23] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[24] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[24] as Connector).intermediatePoints[0].y == 1000 && (diagram.connectors[24] as Connector).intermediatePoints[1].x == 25 && (diagram.connectors[24] as Connector).intermediatePoints[1].y == 1000 && (diagram.connectors[24] as Connector).intermediatePoints[2].x == 25 && (diagram.connectors[24] as Connector).intermediatePoints[2].y == 955 && (diagram.connectors[24] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[24] as Connector).intermediatePoints[3].y == 955 && (diagram.connectors[24] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[24] as Connector).intermediatePoints[4].y == 875).toBe(true);
            expect((diagram.connectors[25] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[25] as Connector).intermediatePoints[0].y == 1000 && (diagram.connectors[25] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[25] as Connector).intermediatePoints[1].y == 1000 && (diagram.connectors[25] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[25] as Connector).intermediatePoints[2].y == 955 && (diagram.connectors[25] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[25] as Connector).intermediatePoints[3].y == 955 && (diagram.connectors[25] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[25] as Connector).intermediatePoints[4].y == 875).toBe(true);
            expect((diagram.connectors[26] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[26] as Connector).intermediatePoints[0].y == 975 && (diagram.connectors[26] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[26] as Connector).intermediatePoints[1].y == 875).toBe(true);
            expect((diagram.connectors[27] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[27] as Connector).intermediatePoints[0].y == 975 && (diagram.connectors[27] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[27] as Connector).intermediatePoints[1].y == 875).toBe(true);
            expect((diagram.connectors[28] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[28] as Connector).intermediatePoints[0].y == 900 && (diagram.connectors[28] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[28] as Connector).intermediatePoints[1].y == 900 && (diagram.connectors[28] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[28] as Connector).intermediatePoints[2].y == 945 && (diagram.connectors[28] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[28] as Connector).intermediatePoints[3].y == 945 && (diagram.connectors[28] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[28] as Connector).intermediatePoints[4].y == 1125).toBe(true);
            expect((diagram.connectors[29] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[29] as Connector).intermediatePoints[0].y == 900 && (diagram.connectors[29] as Connector).intermediatePoints[1].x == 775 && (diagram.connectors[29] as Connector).intermediatePoints[1].y == 900 && (diagram.connectors[29] as Connector).intermediatePoints[2].x == 775 && (diagram.connectors[29] as Connector).intermediatePoints[2].y == 945 && (diagram.connectors[29] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[29] as Connector).intermediatePoints[3].y == 945 && (diagram.connectors[29] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[29] as Connector).intermediatePoints[4].y == 1125).toBe(true);
            expect((diagram.connectors[30] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[30] as Connector).intermediatePoints[0].y == 925 && (diagram.connectors[30] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[30] as Connector).intermediatePoints[1].y == 1125).toBe(true);
            expect((diagram.connectors[31] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[31] as Connector).intermediatePoints[0].y == 925 && (diagram.connectors[31] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[31] as Connector).intermediatePoints[1].y == 1125).toBe(true);
            done();
        });
    });

    describe('Conectors with segments - Orthogonal Segment Rendering(Node To Port)', () => {
        let diagram: Diagram;
        let ele: HTMLElement;
        let mouseEvents: MouseEvents = new MouseEvents();
        let diagramCanvas: HTMLElement;
        beforeAll((): void => {
            ele = createElement('div', { id: 'diagramOrthogonalSegmentNodeToPortRendering' });
            document.body.appendChild(ele);
            let nodes: NodeModel[] = []; let count = 1; let offsetY = 100; let offsetX = 100
            for (var i = 0; i < 9; i++) {
                var node = {
                    id: 'node' + i, offsetX: ((count) * offsetX), offsetY: offsetY, width: 50, height: 50,
                    annotations: [{
                        content: ((count) * offsetX).toString(),
                    },
                    {
                        offset: { x: 0.5, y: 0 },
                        content: offsetY.toString(),
                    }, {
                        offset: { x: 0.5, y: 1 },
                        content: 'node' + i,
                    }],
                    ports: [{ id: 'port1', offset: { x: 0, y: 0.5 } },
                    { id: 'port2', offset: { x: 0.5, y: 0 } },
                    { id: 'port3', offset: { x: 1, y: 0.5 } },
                    { id: 'port4', offset: { x: 0.5, y: 1 } }]
                };
                if (node.id == 'node1') {
                    node.offsetX = 550, node.offsetY = 250,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                }
                else if (node.id == 'node3') {
                    node.offsetX = 250, node.offsetY = 250,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                }
                else if (node.id == 'node5') {
                    node.offsetX = 550, node.offsetY = 400,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                } else if (node.id == 'node7') {
                    node.offsetX = 250, node.offsetY = 400,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                }
                if (node.id !== 'node4')
                    nodes.push(node);
                count += 3;
                if (count == 10) {
                    count = 1;
                    offsetX = 100;
                    offsetY = offsetY + 200;
                }
            }
            let portCollection = [{ id: 'port1', offset: { x: 0, y: 0.5 } },
            { id: 'port2', offset: { x: 0.5, y: 0 } },
            { id: 'port3', offset: { x: 1, y: 0.5 } },
            { id: 'port4', offset: { x: 0.5, y: 1 } }];
            nodes.push({ id: 'node9', offsetX: 100, offsetY: 700, width: 50, height: 50, ports: portCollection });
            nodes.push({ id: 'node10', offsetX: 700, offsetY: 700, width: 50, height: 50, ports: portCollection });
            nodes.push({ id: 'node11', offsetX: 100, offsetY: 1000, width: 50, height: 50, ports: portCollection });
            nodes.push({ id: 'node12', offsetX: 700, offsetY: 900, width: 50, height: 50, ports: portCollection });
            nodes.push({ id: 'node13', offsetX: 300, offsetY: 700, width: 50, height: 50, ports: portCollection });
            nodes.push({ id: 'node14', offsetX: 450, offsetY: 700, width: 50, height: 50, ports: portCollection });
            nodes.push({ id: 'node15', offsetX: 100, offsetY: 850, width: 50, height: 50, ports: portCollection });
            nodes.push({ id: 'node16', offsetX: 700, offsetY: 1150, width: 50, height: 50, ports: portCollection });

            let connectors: ConnectorModel[] = [];
            count = 0;
            let dir = ['Left', 'Right', 'Top', 'Bottom'];
            let ports = ['port1', 'port2', 'port3', 'port4'];
            let sourceNodes = ['node3', 'node1', 'node7', 'node5', 'node13', 'node14', 'node15', 'node16'];
            let targetNodes = ['node0', 'node2', 'node6', 'node8',
                'node9', 'node10', 'node11', 'node12'];
            for (let i = 0; i < sourceNodes.length; i++) {
                for (let k = 0; k < ports.length; k++) {
                    for (let j = 0; j < dir.length; j++) {
                        let connector: ConnectorModel = {
                            id: 'connector' + count, type: 'Orthogonal', targetID: targetNodes[i], sourceID: sourceNodes[i], targetPortID: ports[k],
                            segments: [{ type: 'Orthogonal', direction: dir[j], length: 50 },],
                        };
                        // if (count == 99 || count == 99)
                        connectors.push(connector);
                        count++;
                    }
                }
            }

            diagram = new Diagram({
                width: 1000, height: 1000, nodes: nodes,
                connectors: connectors, 
                getConnectorDefaults: (obj: ConnectorModel, diagram: Diagram) => {
                    let connector: ConnectorModel = {};
                    connector.constraints = ConnectorConstraints.Default | ConnectorConstraints.DragSegmentThumb;
                    return connector;
                },
                snapSettings: { constraints: SnapConstraints.ShowLines }
            });
            diagram.appendTo('#diagramOrthogonalSegmentNodeToPortRendering');
            diagramCanvas = document.getElementById(diagram.element.id + 'content');
        });
        afterAll((): void => {
            diagram.destroy();
            ele.remove();
        });
        it('Checking Orthogonal segment - Node to Port Rendering', (done: Function) => {

            expect((diagram.connectors[0] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[0] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[0] as Connector).intermediatePoints[1].x == 55 && (diagram.connectors[0] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[0] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[0] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[0] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[0] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[1] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[1] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[1] as Connector).intermediatePoints[1].x == 55 && (diagram.connectors[1] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[1] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[1] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[1] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[1] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[2] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[2] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[2] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[2] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[2] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[2] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[2] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[2] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[2] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[2] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[3] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[3] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[3] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[3] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[3] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[3] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[3] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[3] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[3] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[3] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[4] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[4] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[4] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[4] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[4] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[4] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[4] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[4] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[4] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[4] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[5] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[5] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[5] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[5] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[5] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[5] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[5] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[5] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[5] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[5] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[6] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[6] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[6] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[6] as Connector).intermediatePoints[1].y == 55 && (diagram.connectors[6] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[6] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[6] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[6] as Connector).intermediatePoints[3].y == 75).toBe(true);
            expect((diagram.connectors[7] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[7] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[7] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[7] as Connector).intermediatePoints[1].y == 55 && (diagram.connectors[7] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[7] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[7] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[7] as Connector).intermediatePoints[3].y == 75).toBe(true);
            expect((diagram.connectors[8] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[8] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[8] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[8] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[8] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[8] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[8] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[8] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[9] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[9] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[9] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[9] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[9] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[9] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[9] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[9] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[10] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[10] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[10] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[10] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[10] as Connector).intermediatePoints[2].x == 125 && (diagram.connectors[10] as Connector).intermediatePoints[2].y == 100).toBe(true);
            expect((diagram.connectors[11] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[11] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[11] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[11] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[11] as Connector).intermediatePoints[2].x == 125 && (diagram.connectors[11] as Connector).intermediatePoints[2].y == 100).toBe(true);
            expect((diagram.connectors[12] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[12] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[12] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[12] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[12] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[12] as Connector).intermediatePoints[2].y == 125).toBe(true);
            expect((diagram.connectors[13] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[13] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[13] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[13] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[13] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[13] as Connector).intermediatePoints[2].y == 125).toBe(true);
            expect((diagram.connectors[14] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[14] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[14] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[14] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[14] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[14] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[14] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[14] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[15] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[15] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[15] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[15] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[15] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[15] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[15] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[15] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[16] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[16] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[16] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[16] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[16] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[16] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[16] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[16] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[17] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[17] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[17] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[17] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[17] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[17] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[17] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[17] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[18] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[18] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[18] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[18] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[18] as Connector).intermediatePoints[2].x == 675 && (diagram.connectors[18] as Connector).intermediatePoints[2].y == 100).toBe(true);
            expect((diagram.connectors[19] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[19] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[19] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[19] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[19] as Connector).intermediatePoints[2].x == 675 && (diagram.connectors[19] as Connector).intermediatePoints[2].y == 100).toBe(true);
            expect((diagram.connectors[20] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[20] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[20] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[20] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[20] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[20] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[20] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[20] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[20] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[20] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[21] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[21] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[21] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[21] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[21] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[21] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[21] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[21] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[21] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[21] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[22] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[22] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[22] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[22] as Connector).intermediatePoints[1].y == 55 && (diagram.connectors[22] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[22] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[22] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[22] as Connector).intermediatePoints[3].y == 75).toBe(true);
            expect((diagram.connectors[23] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[23] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[23] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[23] as Connector).intermediatePoints[1].y == 55 && (diagram.connectors[23] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[23] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[23] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[23] as Connector).intermediatePoints[3].y == 75).toBe(true);
            expect((diagram.connectors[24] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[24] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[24] as Connector).intermediatePoints[1].x == 745 && (diagram.connectors[24] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[24] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[24] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[24] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[24] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[25] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[25] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[25] as Connector).intermediatePoints[1].x == 745 && (diagram.connectors[25] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[25] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[25] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[25] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[25] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[26] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[26] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[26] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[26] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[26] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[26] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[26] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[26] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[26] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[26] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[27] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[27] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[27] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[27] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[27] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[27] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[27] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[27] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[27] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[27] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[28] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[28] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[28] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[28] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[28] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[28] as Connector).intermediatePoints[2].y == 125).toBe(true);
            expect((diagram.connectors[29] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[29] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[29] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[29] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[29] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[29] as Connector).intermediatePoints[2].y == 125).toBe(true);
            expect((diagram.connectors[30] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[30] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[30] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[30] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[30] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[30] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[30] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[30] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[31] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[31] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[31] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[31] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[31] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[31] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[31] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[31] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[32] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[32] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[32] as Connector).intermediatePoints[1].x == 55 && (diagram.connectors[32] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[32] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[32] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[32] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[32] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[33] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[33] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[33] as Connector).intermediatePoints[1].x == 55 && (diagram.connectors[33] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[33] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[33] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[33] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[33] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[34] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[34] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[34] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[34] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[34] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[34] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[34] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[34] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[34] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[34] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[35] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[35] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[35] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[35] as Connector).intermediatePoints[1].y == 475 && (diagram.connectors[35] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[35] as Connector).intermediatePoints[2].y == 475 && (diagram.connectors[35] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[35] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[35] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[35] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[36] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[36] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[36] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[36] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[36] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[36] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[37] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[37] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[37] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[37] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[37] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[37] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[38] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[38] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[38] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[38] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[38] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[38] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[38] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[38] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[39] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[39] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[39] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[39] as Connector).intermediatePoints[1].y == 455 && (diagram.connectors[39] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[39] as Connector).intermediatePoints[2].y == 455 && (diagram.connectors[39] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[39] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[40] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[40] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[40] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[40] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[40] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[40] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[40] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[40] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[41] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[41] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[41] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[41] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[41] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[41] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[41] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[41] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[42] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[42] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[42] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[42] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[42] as Connector).intermediatePoints[2].x == 125 && (diagram.connectors[42] as Connector).intermediatePoints[2].y == 500).toBe(true);
            expect((diagram.connectors[43] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[43] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[43] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[43] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[43] as Connector).intermediatePoints[2].x == 125 && (diagram.connectors[43] as Connector).intermediatePoints[2].y == 500).toBe(true);
            expect((diagram.connectors[44] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[44] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[44] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[44] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[44] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[44] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[44] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[44] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[44] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[44] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[45] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[45] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[45] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[45] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[45] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[45] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[45] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[45] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[45] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[45] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[46] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[46] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[46] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[46] as Connector).intermediatePoints[1].y == 545 && (diagram.connectors[46] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[46] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[46] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[46] as Connector).intermediatePoints[3].y == 525).toBe(true);
            expect((diagram.connectors[47] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[47] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[47] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[47] as Connector).intermediatePoints[1].y == 545 && (diagram.connectors[47] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[47] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[47] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[47] as Connector).intermediatePoints[3].y == 525).toBe(true);
            expect((diagram.connectors[48] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[48] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[48] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[48] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[48] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[48] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[48] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[48] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[49] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[49] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[49] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[49] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[49] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[49] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[49] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[49] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[50] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[50] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[50] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[50] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[50] as Connector).intermediatePoints[2].x == 675 && (diagram.connectors[50] as Connector).intermediatePoints[2].y == 500).toBe(true);
            expect((diagram.connectors[51] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[51] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[51] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[51] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[51] as Connector).intermediatePoints[2].x == 675 && (diagram.connectors[51] as Connector).intermediatePoints[2].y == 500).toBe(true);
            expect((diagram.connectors[52] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[52] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[52] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[52] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[52] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[52] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[53] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[53] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[53] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[53] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[53] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[53] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[54] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[54] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[54] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[54] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[54] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[54] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[54] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[54] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[55] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[55] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[55] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[55] as Connector).intermediatePoints[1].y == 455 && (diagram.connectors[55] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[55] as Connector).intermediatePoints[2].y == 455 && (diagram.connectors[55] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[55] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[56] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[56] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[56] as Connector).intermediatePoints[1].x == 745 && (diagram.connectors[56] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[56] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[56] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[56] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[56] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[57] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[57] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[57] as Connector).intermediatePoints[1].x == 745 && (diagram.connectors[57] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[57] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[57] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[57] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[57] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[58] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[58] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[58] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[58] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[58] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[58] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[58] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[58] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[58] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[58] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[59] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[59] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[59] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[59] as Connector).intermediatePoints[1].y == 475 && (diagram.connectors[59] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[59] as Connector).intermediatePoints[2].y == 475 && (diagram.connectors[59] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[59] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[59] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[59] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[60] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[60] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[60] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[60] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[60] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[60] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[60] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[60] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[60] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[60] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[61] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[61] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[61] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[61] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[61] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[61] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[61] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[61] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[61] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[61] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[62] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[62] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[62] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[62] as Connector).intermediatePoints[1].y == 545 && (diagram.connectors[62] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[62] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[62] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[62] as Connector).intermediatePoints[3].y == 525).toBe(true);
            expect((diagram.connectors[63] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[63] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[63] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[63] as Connector).intermediatePoints[1].y == 545 && (diagram.connectors[63] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[63] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[63] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[63] as Connector).intermediatePoints[3].y == 525).toBe(true);
            expect((diagram.connectors[64] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[64] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[64] as Connector).intermediatePoints[1].x == 225 && (diagram.connectors[64] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[64] as Connector).intermediatePoints[2].x == 225 && (diagram.connectors[64] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[64] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[64] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[64] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[64] as Connector).intermediatePoints[4].y == 700 && (diagram.connectors[64] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[64] as Connector).intermediatePoints[5].y == 700).toBe(true);
            expect((diagram.connectors[65] as Connector).intermediatePoints[0].x == 325 && (diagram.connectors[65] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[65] as Connector).intermediatePoints[1].x == 375 && (diagram.connectors[65] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[65] as Connector).intermediatePoints[2].x == 375 && (diagram.connectors[65] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[65] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[65] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[65] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[65] as Connector).intermediatePoints[4].y == 700 && (diagram.connectors[65] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[65] as Connector).intermediatePoints[5].y == 700).toBe(true);
            expect((diagram.connectors[66] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[66] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[66] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[66] as Connector).intermediatePoints[1].y == 625 && (diagram.connectors[66] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[66] as Connector).intermediatePoints[2].y == 625 && (diagram.connectors[66] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[66] as Connector).intermediatePoints[3].y == 700 && (diagram.connectors[66] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[66] as Connector).intermediatePoints[4].y == 700).toBe(true);
            expect((diagram.connectors[67] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[67] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[67] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[67] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[67] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[67] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[67] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[67] as Connector).intermediatePoints[3].y == 700 && (diagram.connectors[67] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[67] as Connector).intermediatePoints[4].y == 700).toBe(true);
            expect((diagram.connectors[68] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[68] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[68] as Connector).intermediatePoints[1].x == 225 && (diagram.connectors[68] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[68] as Connector).intermediatePoints[2].x == 225 && (diagram.connectors[68] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[68] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[68] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[68] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[68] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[69] as Connector).intermediatePoints[0].x == 325 && (diagram.connectors[69] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[69] as Connector).intermediatePoints[1].x == 375 && (diagram.connectors[69] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[69] as Connector).intermediatePoints[2].x == 375 && (diagram.connectors[69] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[69] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[69] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[69] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[69] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[70] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[70] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[70] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[70] as Connector).intermediatePoints[1].y == 625 && (diagram.connectors[70] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[70] as Connector).intermediatePoints[2].y == 625 && (diagram.connectors[70] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[70] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[71] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[71] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[71] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[71] as Connector).intermediatePoints[1].y == 655 && (diagram.connectors[71] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[71] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[71] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[71] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[72] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[72] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[72] as Connector).intermediatePoints[1].x == 125 && (diagram.connectors[72] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[73] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[73] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[73] as Connector).intermediatePoints[1].x == 125 && (diagram.connectors[73] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[74] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[74] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[74] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[74] as Connector).intermediatePoints[1].y == 625 && (diagram.connectors[74] as Connector).intermediatePoints[2].x == 255 && (diagram.connectors[74] as Connector).intermediatePoints[2].y == 625 && (diagram.connectors[74] as Connector).intermediatePoints[3].x == 255 && (diagram.connectors[74] as Connector).intermediatePoints[3].y == 700 && (diagram.connectors[74] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[74] as Connector).intermediatePoints[4].y == 700).toBe(true);
            expect((diagram.connectors[75] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[75] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[75] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[75] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[75] as Connector).intermediatePoints[2].x == 255 && (diagram.connectors[75] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[75] as Connector).intermediatePoints[3].x == 255 && (diagram.connectors[75] as Connector).intermediatePoints[3].y == 700 && (diagram.connectors[75] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[75] as Connector).intermediatePoints[4].y == 700).toBe(true);
            expect((diagram.connectors[76] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[76] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[76] as Connector).intermediatePoints[1].x == 225 && (diagram.connectors[76] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[76] as Connector).intermediatePoints[2].x == 225 && (diagram.connectors[76] as Connector).intermediatePoints[2].y == 745 && (diagram.connectors[76] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[76] as Connector).intermediatePoints[3].y == 745 && (diagram.connectors[76] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[76] as Connector).intermediatePoints[4].y == 725).toBe(true);
            expect((diagram.connectors[77] as Connector).intermediatePoints[0].x == 325 && (diagram.connectors[77] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[77] as Connector).intermediatePoints[1].x == 375 && (diagram.connectors[77] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[77] as Connector).intermediatePoints[2].x == 375 && (diagram.connectors[77] as Connector).intermediatePoints[2].y == 745 && (diagram.connectors[77] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[77] as Connector).intermediatePoints[3].y == 745 && (diagram.connectors[77] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[77] as Connector).intermediatePoints[4].y == 725).toBe(true);
            expect((diagram.connectors[78] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[78] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[78] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[78] as Connector).intermediatePoints[1].y == 745 && (diagram.connectors[78] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[78] as Connector).intermediatePoints[2].y == 745 && (diagram.connectors[78] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[78] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[79] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[79] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[79] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[79] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[79] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[79] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[79] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[79] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[80] as Connector).intermediatePoints[0].x == 475 && (diagram.connectors[80] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[80] as Connector).intermediatePoints[1].x == 675 && (diagram.connectors[80] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[81] as Connector).intermediatePoints[0].x == 475 && (diagram.connectors[81] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[81] as Connector).intermediatePoints[1].x == 675 && (diagram.connectors[81] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[82] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[82] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[82] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[82] as Connector).intermediatePoints[1].y == 625 && (diagram.connectors[82] as Connector).intermediatePoints[2].x == 495 && (diagram.connectors[82] as Connector).intermediatePoints[2].y == 625 && (diagram.connectors[82] as Connector).intermediatePoints[3].x == 495 && (diagram.connectors[82] as Connector).intermediatePoints[3].y == 700 && (diagram.connectors[82] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[82] as Connector).intermediatePoints[4].y == 700).toBe(true);
            expect((diagram.connectors[83] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[83] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[83] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[83] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[83] as Connector).intermediatePoints[2].x == 495 && (diagram.connectors[83] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[83] as Connector).intermediatePoints[3].x == 495 && (diagram.connectors[83] as Connector).intermediatePoints[3].y == 700 && (diagram.connectors[83] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[83] as Connector).intermediatePoints[4].y == 700).toBe(true);
            expect((diagram.connectors[84] as Connector).intermediatePoints[0].x == 425 && (diagram.connectors[84] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[84] as Connector).intermediatePoints[1].x == 375 && (diagram.connectors[84] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[84] as Connector).intermediatePoints[2].x == 375 && (diagram.connectors[84] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[84] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[84] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[84] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[84] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[85] as Connector).intermediatePoints[0].x == 475 && (diagram.connectors[85] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[85] as Connector).intermediatePoints[1].x == 525 && (diagram.connectors[85] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[85] as Connector).intermediatePoints[2].x == 525 && (diagram.connectors[85] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[85] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[85] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[85] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[85] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[86] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[86] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[86] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[86] as Connector).intermediatePoints[1].y == 625 && (diagram.connectors[86] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[86] as Connector).intermediatePoints[2].y == 625 && (diagram.connectors[86] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[86] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[87] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[87] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[87] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[87] as Connector).intermediatePoints[1].y == 655 && (diagram.connectors[87] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[87] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[87] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[87] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[88] as Connector).intermediatePoints[0].x == 425 && (diagram.connectors[88] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[88] as Connector).intermediatePoints[1].x == 375 && (diagram.connectors[88] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[88] as Connector).intermediatePoints[2].x == 375 && (diagram.connectors[88] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[88] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[88] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[88] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[88] as Connector).intermediatePoints[4].y == 700 && (diagram.connectors[88] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[88] as Connector).intermediatePoints[5].y == 700).toBe(true);
            expect((diagram.connectors[89] as Connector).intermediatePoints[0].x == 475 && (diagram.connectors[89] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[89] as Connector).intermediatePoints[1].x == 525 && (diagram.connectors[89] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[89] as Connector).intermediatePoints[2].x == 525 && (diagram.connectors[89] as Connector).intermediatePoints[2].y == 655 && (diagram.connectors[89] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[89] as Connector).intermediatePoints[3].y == 655 && (diagram.connectors[89] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[89] as Connector).intermediatePoints[4].y == 700 && (diagram.connectors[89] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[89] as Connector).intermediatePoints[5].y == 700).toBe(true);
            expect((diagram.connectors[90] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[90] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[90] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[90] as Connector).intermediatePoints[1].y == 625 && (diagram.connectors[90] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[90] as Connector).intermediatePoints[2].y == 625 && (diagram.connectors[90] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[90] as Connector).intermediatePoints[3].y == 700 && (diagram.connectors[90] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[90] as Connector).intermediatePoints[4].y == 700).toBe(true);
            expect((diagram.connectors[91] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[91] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[91] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[91] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[91] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[91] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[91] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[91] as Connector).intermediatePoints[3].y == 700 && (diagram.connectors[91] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[91] as Connector).intermediatePoints[4].y == 700).toBe(true);
            expect((diagram.connectors[92] as Connector).intermediatePoints[0].x == 425 && (diagram.connectors[92] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[92] as Connector).intermediatePoints[1].x == 375 && (diagram.connectors[92] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[92] as Connector).intermediatePoints[2].x == 375 && (diagram.connectors[92] as Connector).intermediatePoints[2].y == 745 && (diagram.connectors[92] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[92] as Connector).intermediatePoints[3].y == 745 && (diagram.connectors[92] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[92] as Connector).intermediatePoints[4].y == 725).toBe(true);
            expect((diagram.connectors[93] as Connector).intermediatePoints[0].x == 475 && (diagram.connectors[93] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[93] as Connector).intermediatePoints[1].x == 525 && (diagram.connectors[93] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[93] as Connector).intermediatePoints[2].x == 525 && (diagram.connectors[93] as Connector).intermediatePoints[2].y == 745 && (diagram.connectors[93] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[93] as Connector).intermediatePoints[3].y == 745 && (diagram.connectors[93] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[93] as Connector).intermediatePoints[4].y == 725).toBe(true);
            expect((diagram.connectors[94] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[94] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[94] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[94] as Connector).intermediatePoints[1].y == 745 && (diagram.connectors[94] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[94] as Connector).intermediatePoints[2].y == 745 && (diagram.connectors[94] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[94] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[95] as Connector).intermediatePoints[0].x == 450 && (diagram.connectors[95] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[95] as Connector).intermediatePoints[1].x == 450 && (diagram.connectors[95] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[95] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[95] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[95] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[95] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[96] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[96] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[96] as Connector).intermediatePoints[1].x == 25 && (diagram.connectors[96] as Connector).intermediatePoints[1].y == 850 && (diagram.connectors[96] as Connector).intermediatePoints[2].x == 25 && (diagram.connectors[96] as Connector).intermediatePoints[2].y == 1000 && (diagram.connectors[96] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[96] as Connector).intermediatePoints[3].y == 1000).toBe(true);
            expect((diagram.connectors[97] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[97] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[97] as Connector).intermediatePoints[1].x == 55 && (diagram.connectors[97] as Connector).intermediatePoints[1].y == 850 && (diagram.connectors[97] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[97] as Connector).intermediatePoints[2].y == 1000 && (diagram.connectors[97] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[97] as Connector).intermediatePoints[3].y == 1000).toBe(true);
            expect((diagram.connectors[98] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[98] as Connector).intermediatePoints[0].y == 825 && (diagram.connectors[98] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[98] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[98] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[98] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[98] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[98] as Connector).intermediatePoints[3].y == 1000 && (diagram.connectors[98] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[98] as Connector).intermediatePoints[4].y == 1000).toBe(true);
            expect((diagram.connectors[99] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[99] as Connector).intermediatePoints[0].y == 875 && (diagram.connectors[99] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[99] as Connector).intermediatePoints[1].y == 925 && (diagram.connectors[99] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[99] as Connector).intermediatePoints[2].y == 925 && (diagram.connectors[99] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[99] as Connector).intermediatePoints[3].y == 1000 && (diagram.connectors[99] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[99] as Connector).intermediatePoints[4].y == 1000).toBe(true);
            expect((diagram.connectors[100] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[100] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[100] as Connector).intermediatePoints[1].x == 25 && (diagram.connectors[100] as Connector).intermediatePoints[1].y == 850 && (diagram.connectors[100] as Connector).intermediatePoints[2].x == 25 && (diagram.connectors[100] as Connector).intermediatePoints[2].y == 895 && (diagram.connectors[100] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[100] as Connector).intermediatePoints[3].y == 895 && (diagram.connectors[100] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[100] as Connector).intermediatePoints[4].y == 975).toBe(true);
            expect((diagram.connectors[101] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[101] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[101] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[101] as Connector).intermediatePoints[1].y == 850 && (diagram.connectors[101] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[101] as Connector).intermediatePoints[2].y == 895 && (diagram.connectors[101] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[101] as Connector).intermediatePoints[3].y == 895 && (diagram.connectors[101] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[101] as Connector).intermediatePoints[4].y == 975).toBe(true);
            expect((diagram.connectors[102] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[102] as Connector).intermediatePoints[0].y == 875 && (diagram.connectors[102] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[102] as Connector).intermediatePoints[1].y == 975).toBe(true);
            expect((diagram.connectors[103] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[103] as Connector).intermediatePoints[0].y == 875 && (diagram.connectors[103] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[103] as Connector).intermediatePoints[1].y == 975).toBe(true);
            expect((diagram.connectors[104] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[104] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[104] as Connector).intermediatePoints[1].x == 145 && (diagram.connectors[104] as Connector).intermediatePoints[1].y == 850 && (diagram.connectors[104] as Connector).intermediatePoints[2].x == 145 && (diagram.connectors[104] as Connector).intermediatePoints[2].y == 1000 && (diagram.connectors[104] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[104] as Connector).intermediatePoints[3].y == 1000).toBe(true);
            expect((diagram.connectors[105] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[105] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[105] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[105] as Connector).intermediatePoints[1].y == 850 && (diagram.connectors[105] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[105] as Connector).intermediatePoints[2].y == 1000 && (diagram.connectors[105] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[105] as Connector).intermediatePoints[3].y == 1000).toBe(true);
            expect((diagram.connectors[106] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[106] as Connector).intermediatePoints[0].y == 825 && (diagram.connectors[106] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[106] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[106] as Connector).intermediatePoints[2].x == 145 && (diagram.connectors[106] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[106] as Connector).intermediatePoints[3].x == 145 && (diagram.connectors[106] as Connector).intermediatePoints[3].y == 1000 && (diagram.connectors[106] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[106] as Connector).intermediatePoints[4].y == 1000).toBe(true);
            expect((diagram.connectors[107] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[107] as Connector).intermediatePoints[0].y == 875 && (diagram.connectors[107] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[107] as Connector).intermediatePoints[1].y == 925 && (diagram.connectors[107] as Connector).intermediatePoints[2].x == 145 && (diagram.connectors[107] as Connector).intermediatePoints[2].y == 925 && (diagram.connectors[107] as Connector).intermediatePoints[3].x == 145 && (diagram.connectors[107] as Connector).intermediatePoints[3].y == 1000 && (diagram.connectors[107] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[107] as Connector).intermediatePoints[4].y == 1000).toBe(true);
            expect((diagram.connectors[108] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[108] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[108] as Connector).intermediatePoints[1].x == 25 && (diagram.connectors[108] as Connector).intermediatePoints[1].y == 850 && (diagram.connectors[108] as Connector).intermediatePoints[2].x == 25 && (diagram.connectors[108] as Connector).intermediatePoints[2].y == 1045 && (diagram.connectors[108] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[108] as Connector).intermediatePoints[3].y == 1045 && (diagram.connectors[108] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[108] as Connector).intermediatePoints[4].y == 1025).toBe(true);
            expect((diagram.connectors[109] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[109] as Connector).intermediatePoints[0].y == 850 && (diagram.connectors[109] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[109] as Connector).intermediatePoints[1].y == 850 && (diagram.connectors[109] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[109] as Connector).intermediatePoints[2].y == 1045 && (diagram.connectors[109] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[109] as Connector).intermediatePoints[3].y == 1045 && (diagram.connectors[109] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[109] as Connector).intermediatePoints[4].y == 1025).toBe(true);
            expect((diagram.connectors[110] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[110] as Connector).intermediatePoints[0].y == 825 && (diagram.connectors[110] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[110] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[110] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[110] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[110] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[110] as Connector).intermediatePoints[3].y == 1045 && (diagram.connectors[110] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[110] as Connector).intermediatePoints[4].y == 1045 && (diagram.connectors[110] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[110] as Connector).intermediatePoints[5].y == 1025).toBe(true);
            expect((diagram.connectors[111] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[111] as Connector).intermediatePoints[0].y == 875 && (diagram.connectors[111] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[111] as Connector).intermediatePoints[1].y == 925 && (diagram.connectors[111] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[111] as Connector).intermediatePoints[2].y == 925 && (diagram.connectors[111] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[111] as Connector).intermediatePoints[3].y == 1045 && (diagram.connectors[111] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[111] as Connector).intermediatePoints[4].y == 1045 && (diagram.connectors[111] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[111] as Connector).intermediatePoints[5].y == 1025).toBe(true);
            expect((diagram.connectors[112] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[112] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[112] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[112] as Connector).intermediatePoints[1].y == 1150 && (diagram.connectors[112] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[112] as Connector).intermediatePoints[2].y == 900 && (diagram.connectors[112] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[112] as Connector).intermediatePoints[3].y == 900).toBe(true);
            expect((diagram.connectors[113] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[113] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[113] as Connector).intermediatePoints[1].x == 655 && (diagram.connectors[113] as Connector).intermediatePoints[1].y == 1150 && (diagram.connectors[113] as Connector).intermediatePoints[2].x == 655 && (diagram.connectors[113] as Connector).intermediatePoints[2].y == 900 && (diagram.connectors[113] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[113] as Connector).intermediatePoints[3].y == 900).toBe(true);
            expect((diagram.connectors[114] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[114] as Connector).intermediatePoints[0].y == 1125 && (diagram.connectors[114] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[114] as Connector).intermediatePoints[1].y == 1075 && (diagram.connectors[114] as Connector).intermediatePoints[2].x == 655 && (diagram.connectors[114] as Connector).intermediatePoints[2].y == 1075 && (diagram.connectors[114] as Connector).intermediatePoints[3].x == 655 && (diagram.connectors[114] as Connector).intermediatePoints[3].y == 900 && (diagram.connectors[114] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[114] as Connector).intermediatePoints[4].y == 900).toBe(true);
            expect((diagram.connectors[115] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[115] as Connector).intermediatePoints[0].y == 1175 && (diagram.connectors[115] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[115] as Connector).intermediatePoints[1].y == 1225 && (diagram.connectors[115] as Connector).intermediatePoints[2].x == 655 && (diagram.connectors[115] as Connector).intermediatePoints[2].y == 1225 && (diagram.connectors[115] as Connector).intermediatePoints[3].x == 655 && (diagram.connectors[115] as Connector).intermediatePoints[3].y == 900 && (diagram.connectors[115] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[115] as Connector).intermediatePoints[4].y == 900).toBe(true);
            expect((diagram.connectors[116] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[116] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[116] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[116] as Connector).intermediatePoints[1].y == 1150 && (diagram.connectors[116] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[116] as Connector).intermediatePoints[2].y == 855 && (diagram.connectors[116] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[116] as Connector).intermediatePoints[3].y == 855 && (diagram.connectors[116] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[116] as Connector).intermediatePoints[4].y == 875).toBe(true);
            expect((diagram.connectors[117] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[117] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[117] as Connector).intermediatePoints[1].x == 775 && (diagram.connectors[117] as Connector).intermediatePoints[1].y == 1150 && (diagram.connectors[117] as Connector).intermediatePoints[2].x == 775 && (diagram.connectors[117] as Connector).intermediatePoints[2].y == 855 && (diagram.connectors[117] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[117] as Connector).intermediatePoints[3].y == 855 && (diagram.connectors[117] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[117] as Connector).intermediatePoints[4].y == 875).toBe(true);
            expect((diagram.connectors[118] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[118] as Connector).intermediatePoints[0].y == 1125 && (diagram.connectors[118] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[118] as Connector).intermediatePoints[1].y == 1075 && (diagram.connectors[118] as Connector).intermediatePoints[2].x == 655 && (diagram.connectors[118] as Connector).intermediatePoints[2].y == 1075 && (diagram.connectors[118] as Connector).intermediatePoints[3].x == 655 && (diagram.connectors[118] as Connector).intermediatePoints[3].y == 855 && (diagram.connectors[118] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[118] as Connector).intermediatePoints[4].y == 855 && (diagram.connectors[118] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[118] as Connector).intermediatePoints[5].y == 875).toBe(true);
            expect((diagram.connectors[119] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[119] as Connector).intermediatePoints[0].y == 1175 && (diagram.connectors[119] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[119] as Connector).intermediatePoints[1].y == 1225 && (diagram.connectors[119] as Connector).intermediatePoints[2].x == 655 && (diagram.connectors[119] as Connector).intermediatePoints[2].y == 1225 && (diagram.connectors[119] as Connector).intermediatePoints[3].x == 655 && (diagram.connectors[119] as Connector).intermediatePoints[3].y == 855 && (diagram.connectors[119] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[119] as Connector).intermediatePoints[4].y == 855 && (diagram.connectors[119] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[119] as Connector).intermediatePoints[5].y == 875).toBe(true);
            expect((diagram.connectors[120] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[120] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[120] as Connector).intermediatePoints[1].x == 745 && (diagram.connectors[120] as Connector).intermediatePoints[1].y == 1150 && (diagram.connectors[120] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[120] as Connector).intermediatePoints[2].y == 900 && (diagram.connectors[120] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[120] as Connector).intermediatePoints[3].y == 900).toBe(true);
            expect((diagram.connectors[121] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[121] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[121] as Connector).intermediatePoints[1].x == 775 && (diagram.connectors[121] as Connector).intermediatePoints[1].y == 1150 && (diagram.connectors[121] as Connector).intermediatePoints[2].x == 775 && (diagram.connectors[121] as Connector).intermediatePoints[2].y == 900 && (diagram.connectors[121] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[121] as Connector).intermediatePoints[3].y == 900).toBe(true);
            expect((diagram.connectors[122] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[122] as Connector).intermediatePoints[0].y == 1125 && (diagram.connectors[122] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[122] as Connector).intermediatePoints[1].y == 1075 && (diagram.connectors[122] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[122] as Connector).intermediatePoints[2].y == 1075 && (diagram.connectors[122] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[122] as Connector).intermediatePoints[3].y == 900 && (diagram.connectors[122] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[122] as Connector).intermediatePoints[4].y == 900).toBe(true);
            expect((diagram.connectors[123] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[123] as Connector).intermediatePoints[0].y == 1175 && (diagram.connectors[123] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[123] as Connector).intermediatePoints[1].y == 1225 && (diagram.connectors[123] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[123] as Connector).intermediatePoints[2].y == 1225 && (diagram.connectors[123] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[123] as Connector).intermediatePoints[3].y == 900 && (diagram.connectors[123] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[123] as Connector).intermediatePoints[4].y == 900).toBe(true);
            expect((diagram.connectors[124] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[124] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[124] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[124] as Connector).intermediatePoints[1].y == 1150 && (diagram.connectors[124] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[124] as Connector).intermediatePoints[2].y == 1105 && (diagram.connectors[124] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[124] as Connector).intermediatePoints[3].y == 1105 && (diagram.connectors[124] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[124] as Connector).intermediatePoints[4].y == 925).toBe(true);
            expect((diagram.connectors[125] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[125] as Connector).intermediatePoints[0].y == 1150 && (diagram.connectors[125] as Connector).intermediatePoints[1].x == 775 && (diagram.connectors[125] as Connector).intermediatePoints[1].y == 1150 && (diagram.connectors[125] as Connector).intermediatePoints[2].x == 775 && (diagram.connectors[125] as Connector).intermediatePoints[2].y == 1105 && (diagram.connectors[125] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[125] as Connector).intermediatePoints[3].y == 1105 && (diagram.connectors[125] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[125] as Connector).intermediatePoints[4].y == 925).toBe(true);
            expect((diagram.connectors[126] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[126] as Connector).intermediatePoints[0].y == 1125 && (diagram.connectors[126] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[126] as Connector).intermediatePoints[1].y == 925).toBe(true);
            expect((diagram.connectors[127] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[127] as Connector).intermediatePoints[0].y == 1125 && (diagram.connectors[127] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[127] as Connector).intermediatePoints[1].y == 925).toBe(true);
            done();
        });
    });

    describe('Conectors with segments - Orthogonal Segment Rendering(Port To Node)', () => {
        let diagram: Diagram;
        let ele: HTMLElement;
        let mouseEvents: MouseEvents = new MouseEvents();
        let diagramCanvas: HTMLElement;
        beforeAll((): void => {
            ele = createElement('div', { id: 'diagramOrthogonalSegmentPortToNodeRendering' });
            document.body.appendChild(ele);
            let nodes: NodeModel[] = [];
            var count = 1;
            var offsetY = 100;
            var offsetX = 100;
            for (var i = 0; i < 9; i++) {
                var node = {
                    id: 'node' + i, offsetX: ((count) * offsetX), offsetY: offsetY, width: 50, height: 50,
                    annotations: [{
                        content: ((count) * offsetX).toString(),
                    },
                    {
                        offset: { x: 0.5, y: 0 },
                        content: offsetY.toString(),
                    }, {
                        offset: { x: 0.5, y: 1 },
                        content: 'node' + i,
                    }],
                    ports: [{ id: 'port1', offset: { x: 0, y: 0.5 } },
                    { id: 'port2', offset: { x: 0.5, y: 0 } },
                    { id: 'port3', offset: { x: 1, y: 0.5 } },
                    { id: 'port4', offset: { x: 0.5, y: 1 } }]
                };
                if (node.id == 'node1') {
                    node.offsetX = 550, node.offsetY = 250,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                }
                else if (node.id == 'node3') {
                    node.offsetX = 250, node.offsetY = 250,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                }
                else if (node.id == 'node5') {
                    node.offsetX = 550, node.offsetY = 400,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                }
                else if (node.id == 'node7') {
                    node.offsetX = 250, node.offsetY = 400,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                }
                if (node.id !== 'node4')
                    nodes.push(node);
                count += 3;
                if (count == 10) {
                    count = 1;
                    offsetX = 100;
                    offsetY = offsetY + 200;
                }
            }
            var portCollection = [{ id: 'port1', offset: { x: 0, y: 0.5 } },
            { id: 'port2', offset: { x: 0.5, y: 0 } },
            { id: 'port3', offset: { x: 1, y: 0.5 } },
            { id: 'port4', offset: { x: 0.5, y: 1 } }];
            nodes.push({ id: 'node9', offsetX: 100, offsetY: 700, width: 50, height: 50, ports: portCollection });
            nodes.push({ id: 'node10', offsetX: 700, offsetY: 700, width: 50, height: 50, ports: portCollection });
            nodes.push({ id: 'node11', offsetX: 100, offsetY: 1000, width: 50, height: 50, ports: portCollection });
            nodes.push({ id: 'node12', offsetX: 700, offsetY: 900, width: 50, height: 50, ports: portCollection });
            nodes.push({ id: 'node13', offsetX: 300, offsetY: 700, width: 50, height: 50, ports: portCollection });
            nodes.push({ id: 'node14', offsetX: 450, offsetY: 700, width: 50, height: 50, ports: portCollection });
            nodes.push({ id: 'node15', offsetX: 100, offsetY: 850, width: 50, height: 50, ports: portCollection });
            nodes.push({ id: 'node16', offsetX: 700, offsetY: 1150, width: 50, height: 50, ports: portCollection });
            let connectors: ConnectorModel[] = [];
            count = 0;
            var dir = ['Left', 'Right', 'Top', 'Bottom'];
            var ports = ['port1', 'port2', 'port3', 'port4'];
            var targetNodes = ['node3', 'node1', 'node7', 'node5', 'node13', 'node14', 'node15', 'node16'];
            var sourceNodes = ['node0', 'node2', 'node6', 'node8',
                'node9', 'node10', 'node11', 'node12'];
            for (var i_2 = 0; i_2 < sourceNodes.length; i_2++) {
                for (var k = 0; k < ports.length; k++) {
                    for (var j = 0; j < dir.length; j++) {
                        let connector: ConnectorModel = {
                            id: 'connector' + count, type: 'Orthogonal', targetID: targetNodes[i_2], sourceID: sourceNodes[i_2], sourcePortID: ports[k],
                            segments: [{ type: 'Orthogonal', direction: dir[j], length: 50 },],
                        };
                        // if(count == 111 || count == 110)
                        connectors.push(connector);
                        count++;
                    }
                }
            }

            diagram = new Diagram({
                width: 1000, height: 1000, nodes: nodes,
                connectors: connectors, 
                getConnectorDefaults: (obj: ConnectorModel, diagram: Diagram) => {
                    let connector: ConnectorModel = {};
                    connector.constraints = ConnectorConstraints.Default | ConnectorConstraints.DragSegmentThumb;
                    return connector;
                },
                snapSettings: { constraints: SnapConstraints.ShowLines }
            });
            diagram.appendTo('#diagramOrthogonalSegmentPortToNodeRendering');
            diagramCanvas = document.getElementById(diagram.element.id + 'content');
        });
        afterAll((): void => {
            diagram.destroy();
            ele.remove();
        });
        it('Checking Orthogonal segment - Port to Node Rendering', (done: Function) => {

            expect((diagram.connectors[0] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[0] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[0] as Connector).intermediatePoints[1].x == 25 && (diagram.connectors[0] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[0] as Connector).intermediatePoints[2].x == 25 && (diagram.connectors[0] as Connector).intermediatePoints[2].y == 145 && (diagram.connectors[0] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[0] as Connector).intermediatePoints[3].y == 145 && (diagram.connectors[0] as Connector).intermediatePoints[4].x == 250 && (diagram.connectors[0] as Connector).intermediatePoints[4].y == 225).toBe(true);
            expect((diagram.connectors[1] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[1] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[1] as Connector).intermediatePoints[1].x == 25 && (diagram.connectors[1] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[1] as Connector).intermediatePoints[2].x == 25 && (diagram.connectors[1] as Connector).intermediatePoints[2].y == 145 && (diagram.connectors[1] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[1] as Connector).intermediatePoints[3].y == 145 && (diagram.connectors[1] as Connector).intermediatePoints[4].x == 250 && (diagram.connectors[1] as Connector).intermediatePoints[4].y == 225).toBe(true);
            expect((diagram.connectors[2] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[2] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[2] as Connector).intermediatePoints[1].x == 62 && (diagram.connectors[2] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[2] as Connector).intermediatePoints[2].x == 62 && (diagram.connectors[2] as Connector).intermediatePoints[2].y == 50 && (diagram.connectors[2] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[2] as Connector).intermediatePoints[3].y == 50 && (diagram.connectors[2] as Connector).intermediatePoints[4].x == 250 && (diagram.connectors[2] as Connector).intermediatePoints[4].y == 225).toBe(true);
            expect((diagram.connectors[3] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[3] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[3] as Connector).intermediatePoints[1].x == 62 && (diagram.connectors[3] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[3] as Connector).intermediatePoints[2].x == 62 && (diagram.connectors[3] as Connector).intermediatePoints[2].y == 150 && (diagram.connectors[3] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[3] as Connector).intermediatePoints[3].y == 150 && (diagram.connectors[3] as Connector).intermediatePoints[4].x == 250 && (diagram.connectors[3] as Connector).intermediatePoints[4].y == 225).toBe(true);
            expect((diagram.connectors[4] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[4] as Connector).intermediatePoints[0].y == 75 && (diagram.connectors[4] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[4] as Connector).intermediatePoints[1].y == 62 && (diagram.connectors[4] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[4] as Connector).intermediatePoints[2].y == 62 && (diagram.connectors[4] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[4] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[5] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[5] as Connector).intermediatePoints[0].y == 75 && (diagram.connectors[5] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[5] as Connector).intermediatePoints[1].y == 62 && (diagram.connectors[5] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[5] as Connector).intermediatePoints[2].y == 62 && (diagram.connectors[5] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[5] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[6] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[6] as Connector).intermediatePoints[0].y == 75 && (diagram.connectors[6] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[6] as Connector).intermediatePoints[1].y == 25 && (diagram.connectors[6] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[6] as Connector).intermediatePoints[2].y == 25 && (diagram.connectors[6] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[6] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[7] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[7] as Connector).intermediatePoints[0].y == 75 && (diagram.connectors[7] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[7] as Connector).intermediatePoints[1].y == 25 && (diagram.connectors[7] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[7] as Connector).intermediatePoints[2].y == 25 && (diagram.connectors[7] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[7] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[8] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[8] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[8] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[8] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[8] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[8] as Connector).intermediatePoints[2].y == 225).toBe(true);
            expect((diagram.connectors[9] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[9] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[9] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[9] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[9] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[9] as Connector).intermediatePoints[2].y == 225).toBe(true);
            expect((diagram.connectors[10] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[10] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[10] as Connector).intermediatePoints[1].x == 138 && (diagram.connectors[10] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[10] as Connector).intermediatePoints[2].x == 138 && (diagram.connectors[10] as Connector).intermediatePoints[2].y == 50 && (diagram.connectors[10] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[10] as Connector).intermediatePoints[3].y == 50 && (diagram.connectors[10] as Connector).intermediatePoints[4].x == 250 && (diagram.connectors[10] as Connector).intermediatePoints[4].y == 225).toBe(true);
            expect((diagram.connectors[11] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[11] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[11] as Connector).intermediatePoints[1].x == 138 && (diagram.connectors[11] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[11] as Connector).intermediatePoints[2].x == 138 && (diagram.connectors[11] as Connector).intermediatePoints[2].y == 150 && (diagram.connectors[11] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[11] as Connector).intermediatePoints[3].y == 150 && (diagram.connectors[11] as Connector).intermediatePoints[4].x == 250 && (diagram.connectors[11] as Connector).intermediatePoints[4].y == 225).toBe(true);
            expect((diagram.connectors[12] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[12] as Connector).intermediatePoints[0].y == 125 && (diagram.connectors[12] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[12] as Connector).intermediatePoints[1].y == 138 && (diagram.connectors[12] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[12] as Connector).intermediatePoints[2].y == 138 && (diagram.connectors[12] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[12] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[13] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[13] as Connector).intermediatePoints[0].y == 125 && (diagram.connectors[13] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[13] as Connector).intermediatePoints[1].y == 138 && (diagram.connectors[13] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[13] as Connector).intermediatePoints[2].y == 138 && (diagram.connectors[13] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[13] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[14] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[14] as Connector).intermediatePoints[0].y == 125 && (diagram.connectors[14] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[14] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[14] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[14] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[14] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[14] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[15] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[15] as Connector).intermediatePoints[0].y == 125 && (diagram.connectors[15] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[15] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[15] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[15] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[15] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[15] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[16] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[16] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[16] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[16] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[16] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[16] as Connector).intermediatePoints[2].y == 225).toBe(true);
            expect((diagram.connectors[17] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[17] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[17] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[17] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[17] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[17] as Connector).intermediatePoints[2].y == 225).toBe(true);
            expect((diagram.connectors[18] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[18] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[18] as Connector).intermediatePoints[1].x == 662 && (diagram.connectors[18] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[18] as Connector).intermediatePoints[2].x == 662 && (diagram.connectors[18] as Connector).intermediatePoints[2].y == 50 && (diagram.connectors[18] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[18] as Connector).intermediatePoints[3].y == 50 && (diagram.connectors[18] as Connector).intermediatePoints[4].x == 550 && (diagram.connectors[18] as Connector).intermediatePoints[4].y == 225).toBe(true);
            expect((diagram.connectors[19] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[19] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[19] as Connector).intermediatePoints[1].x == 662 && (diagram.connectors[19] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[19] as Connector).intermediatePoints[2].x == 662 && (diagram.connectors[19] as Connector).intermediatePoints[2].y == 150 && (diagram.connectors[19] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[19] as Connector).intermediatePoints[3].y == 150 && (diagram.connectors[19] as Connector).intermediatePoints[4].x == 550 && (diagram.connectors[19] as Connector).intermediatePoints[4].y == 225).toBe(true);
            expect((diagram.connectors[20] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[20] as Connector).intermediatePoints[0].y == 75 && (diagram.connectors[20] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[20] as Connector).intermediatePoints[1].y == 62 && (diagram.connectors[20] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[20] as Connector).intermediatePoints[2].y == 62 && (diagram.connectors[20] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[20] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[21] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[21] as Connector).intermediatePoints[0].y == 75 && (diagram.connectors[21] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[21] as Connector).intermediatePoints[1].y == 62 && (diagram.connectors[21] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[21] as Connector).intermediatePoints[2].y == 62 && (diagram.connectors[21] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[21] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[22] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[22] as Connector).intermediatePoints[0].y == 75 && (diagram.connectors[22] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[22] as Connector).intermediatePoints[1].y == 25 && (diagram.connectors[22] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[22] as Connector).intermediatePoints[2].y == 25 && (diagram.connectors[22] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[22] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[23] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[23] as Connector).intermediatePoints[0].y == 75 && (diagram.connectors[23] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[23] as Connector).intermediatePoints[1].y == 25 && (diagram.connectors[23] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[23] as Connector).intermediatePoints[2].y == 25 && (diagram.connectors[23] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[23] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[24] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[24] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[24] as Connector).intermediatePoints[1].x == 775 && (diagram.connectors[24] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[24] as Connector).intermediatePoints[2].x == 775 && (diagram.connectors[24] as Connector).intermediatePoints[2].y == 145 && (diagram.connectors[24] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[24] as Connector).intermediatePoints[3].y == 145 && (diagram.connectors[24] as Connector).intermediatePoints[4].x == 550 && (diagram.connectors[24] as Connector).intermediatePoints[4].y == 225).toBe(true);
            expect((diagram.connectors[25] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[25] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[25] as Connector).intermediatePoints[1].x == 775 && (diagram.connectors[25] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[25] as Connector).intermediatePoints[2].x == 775 && (diagram.connectors[25] as Connector).intermediatePoints[2].y == 145 && (diagram.connectors[25] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[25] as Connector).intermediatePoints[3].y == 145 && (diagram.connectors[25] as Connector).intermediatePoints[4].x == 550 && (diagram.connectors[25] as Connector).intermediatePoints[4].y == 225).toBe(true);
            expect((diagram.connectors[26] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[26] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[26] as Connector).intermediatePoints[1].x == 738 && (diagram.connectors[26] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[26] as Connector).intermediatePoints[2].x == 738 && (diagram.connectors[26] as Connector).intermediatePoints[2].y == 50 && (diagram.connectors[26] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[26] as Connector).intermediatePoints[3].y == 50 && (diagram.connectors[26] as Connector).intermediatePoints[4].x == 550 && (diagram.connectors[26] as Connector).intermediatePoints[4].y == 225).toBe(true);
            expect((diagram.connectors[27] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[27] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[27] as Connector).intermediatePoints[1].x == 738 && (diagram.connectors[27] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[27] as Connector).intermediatePoints[2].x == 738 && (diagram.connectors[27] as Connector).intermediatePoints[2].y == 150 && (diagram.connectors[27] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[27] as Connector).intermediatePoints[3].y == 150 && (diagram.connectors[27] as Connector).intermediatePoints[4].x == 550 && (diagram.connectors[27] as Connector).intermediatePoints[4].y == 225).toBe(true);
            expect((diagram.connectors[28] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[28] as Connector).intermediatePoints[0].y == 125 && (diagram.connectors[28] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[28] as Connector).intermediatePoints[1].y == 138 && (diagram.connectors[28] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[28] as Connector).intermediatePoints[2].y == 138 && (diagram.connectors[28] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[28] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[29] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[29] as Connector).intermediatePoints[0].y == 125 && (diagram.connectors[29] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[29] as Connector).intermediatePoints[1].y == 138 && (diagram.connectors[29] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[29] as Connector).intermediatePoints[2].y == 138 && (diagram.connectors[29] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[29] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[30] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[30] as Connector).intermediatePoints[0].y == 125 && (diagram.connectors[30] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[30] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[30] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[30] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[30] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[30] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[31] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[31] as Connector).intermediatePoints[0].y == 125 && (diagram.connectors[31] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[31] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[31] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[31] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[31] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[31] as Connector).intermediatePoints[3].y == 225).toBe(true);
            expect((diagram.connectors[32] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[32] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[32] as Connector).intermediatePoints[1].x == 25 && (diagram.connectors[32] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[32] as Connector).intermediatePoints[2].x == 25 && (diagram.connectors[32] as Connector).intermediatePoints[2].y == 455 && (diagram.connectors[32] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[32] as Connector).intermediatePoints[3].y == 455 && (diagram.connectors[32] as Connector).intermediatePoints[4].x == 250 && (diagram.connectors[32] as Connector).intermediatePoints[4].y == 425).toBe(true);
            expect((diagram.connectors[33] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[33] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[33] as Connector).intermediatePoints[1].x == 25 && (diagram.connectors[33] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[33] as Connector).intermediatePoints[2].x == 25 && (diagram.connectors[33] as Connector).intermediatePoints[2].y == 455 && (diagram.connectors[33] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[33] as Connector).intermediatePoints[3].y == 455 && (diagram.connectors[33] as Connector).intermediatePoints[4].x == 250 && (diagram.connectors[33] as Connector).intermediatePoints[4].y == 425).toBe(true);
            expect((diagram.connectors[34] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[34] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[34] as Connector).intermediatePoints[1].x == 62 && (diagram.connectors[34] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[34] as Connector).intermediatePoints[2].x == 62 && (diagram.connectors[34] as Connector).intermediatePoints[2].y == 450 && (diagram.connectors[34] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[34] as Connector).intermediatePoints[3].y == 450 && (diagram.connectors[34] as Connector).intermediatePoints[4].x == 250 && (diagram.connectors[34] as Connector).intermediatePoints[4].y == 425).toBe(true);
            expect((diagram.connectors[35] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[35] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[35] as Connector).intermediatePoints[1].x == 62 && (diagram.connectors[35] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[35] as Connector).intermediatePoints[2].x == 62 && (diagram.connectors[35] as Connector).intermediatePoints[2].y == 550 && (diagram.connectors[35] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[35] as Connector).intermediatePoints[3].y == 550 && (diagram.connectors[35] as Connector).intermediatePoints[4].x == 250 && (diagram.connectors[35] as Connector).intermediatePoints[4].y == 425).toBe(true);
            expect((diagram.connectors[36] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[36] as Connector).intermediatePoints[0].y == 475 && (diagram.connectors[36] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[36] as Connector).intermediatePoints[1].y == 462 && (diagram.connectors[36] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[36] as Connector).intermediatePoints[2].y == 462 && (diagram.connectors[36] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[36] as Connector).intermediatePoints[3].y == 425).toBe(true);
            expect((diagram.connectors[37] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[37] as Connector).intermediatePoints[0].y == 475 && (diagram.connectors[37] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[37] as Connector).intermediatePoints[1].y == 462 && (diagram.connectors[37] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[37] as Connector).intermediatePoints[2].y == 462 && (diagram.connectors[37] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[37] as Connector).intermediatePoints[3].y == 425).toBe(true);
            expect((diagram.connectors[38] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[38] as Connector).intermediatePoints[0].y == 475 && (diagram.connectors[38] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[38] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[38] as Connector).intermediatePoints[2].x == 225 && (diagram.connectors[38] as Connector).intermediatePoints[2].y == 400).toBe(true);
            expect((diagram.connectors[39] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[39] as Connector).intermediatePoints[0].y == 475 && (diagram.connectors[39] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[39] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[39] as Connector).intermediatePoints[2].x == 225 && (diagram.connectors[39] as Connector).intermediatePoints[2].y == 400).toBe(true);
            expect((diagram.connectors[40] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[40] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[40] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[40] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[40] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[40] as Connector).intermediatePoints[2].y == 425).toBe(true);
            expect((diagram.connectors[41] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[41] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[41] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[41] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[41] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[41] as Connector).intermediatePoints[2].y == 425).toBe(true);
            expect((diagram.connectors[42] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[42] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[42] as Connector).intermediatePoints[1].x == 138 && (diagram.connectors[42] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[42] as Connector).intermediatePoints[2].x == 138 && (diagram.connectors[42] as Connector).intermediatePoints[2].y == 450 && (diagram.connectors[42] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[42] as Connector).intermediatePoints[3].y == 450 && (diagram.connectors[42] as Connector).intermediatePoints[4].x == 250 && (diagram.connectors[42] as Connector).intermediatePoints[4].y == 425).toBe(true);
            expect((diagram.connectors[43] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[43] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[43] as Connector).intermediatePoints[1].x == 138 && (diagram.connectors[43] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[43] as Connector).intermediatePoints[2].x == 138 && (diagram.connectors[43] as Connector).intermediatePoints[2].y == 550 && (diagram.connectors[43] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[43] as Connector).intermediatePoints[3].y == 550 && (diagram.connectors[43] as Connector).intermediatePoints[4].x == 250 && (diagram.connectors[43] as Connector).intermediatePoints[4].y == 425).toBe(true);
            expect((diagram.connectors[44] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[44] as Connector).intermediatePoints[0].y == 525 && (diagram.connectors[44] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[44] as Connector).intermediatePoints[1].y == 538 && (diagram.connectors[44] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[44] as Connector).intermediatePoints[2].y == 538 && (diagram.connectors[44] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[44] as Connector).intermediatePoints[3].y == 425).toBe(true);
            expect((diagram.connectors[45] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[45] as Connector).intermediatePoints[0].y == 525 && (diagram.connectors[45] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[45] as Connector).intermediatePoints[1].y == 538 && (diagram.connectors[45] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[45] as Connector).intermediatePoints[2].y == 538 && (diagram.connectors[45] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[45] as Connector).intermediatePoints[3].y == 425).toBe(true);
            expect((diagram.connectors[46] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[46] as Connector).intermediatePoints[0].y == 525 && (diagram.connectors[46] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[46] as Connector).intermediatePoints[1].y == 575 && (diagram.connectors[46] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[46] as Connector).intermediatePoints[2].y == 575 && (diagram.connectors[46] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[46] as Connector).intermediatePoints[3].y == 425).toBe(true);
            expect((diagram.connectors[47] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[47] as Connector).intermediatePoints[0].y == 525 && (diagram.connectors[47] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[47] as Connector).intermediatePoints[1].y == 575 && (diagram.connectors[47] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[47] as Connector).intermediatePoints[2].y == 575 && (diagram.connectors[47] as Connector).intermediatePoints[3].x == 250 && (diagram.connectors[47] as Connector).intermediatePoints[3].y == 425).toBe(true);
            expect((diagram.connectors[48] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[48] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[48] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[48] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[48] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[48] as Connector).intermediatePoints[2].y == 425).toBe(true);
            expect((diagram.connectors[49] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[49] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[49] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[49] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[49] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[49] as Connector).intermediatePoints[2].y == 425).toBe(true);
            expect((diagram.connectors[50] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[50] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[50] as Connector).intermediatePoints[1].x == 662 && (diagram.connectors[50] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[50] as Connector).intermediatePoints[2].x == 662 && (diagram.connectors[50] as Connector).intermediatePoints[2].y == 450 && (diagram.connectors[50] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[50] as Connector).intermediatePoints[3].y == 450 && (diagram.connectors[50] as Connector).intermediatePoints[4].x == 550 && (diagram.connectors[50] as Connector).intermediatePoints[4].y == 425).toBe(true);
            expect((diagram.connectors[51] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[51] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[51] as Connector).intermediatePoints[1].x == 662 && (diagram.connectors[51] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[51] as Connector).intermediatePoints[2].x == 662 && (diagram.connectors[51] as Connector).intermediatePoints[2].y == 550 && (diagram.connectors[51] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[51] as Connector).intermediatePoints[3].y == 550 && (diagram.connectors[51] as Connector).intermediatePoints[4].x == 550 && (diagram.connectors[51] as Connector).intermediatePoints[4].y == 425).toBe(true);
            expect((diagram.connectors[52] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[52] as Connector).intermediatePoints[0].y == 475 && (diagram.connectors[52] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[52] as Connector).intermediatePoints[1].y == 462 && (diagram.connectors[52] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[52] as Connector).intermediatePoints[2].y == 462 && (diagram.connectors[52] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[52] as Connector).intermediatePoints[3].y == 425).toBe(true);
            expect((diagram.connectors[53] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[53] as Connector).intermediatePoints[0].y == 475 && (diagram.connectors[53] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[53] as Connector).intermediatePoints[1].y == 462 && (diagram.connectors[53] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[53] as Connector).intermediatePoints[2].y == 462 && (diagram.connectors[53] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[53] as Connector).intermediatePoints[3].y == 425).toBe(true);
            expect((diagram.connectors[54] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[54] as Connector).intermediatePoints[0].y == 475 && (diagram.connectors[54] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[54] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[54] as Connector).intermediatePoints[2].x == 575 && (diagram.connectors[54] as Connector).intermediatePoints[2].y == 400).toBe(true);
            expect((diagram.connectors[55] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[55] as Connector).intermediatePoints[0].y == 475 && (diagram.connectors[55] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[55] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[55] as Connector).intermediatePoints[2].x == 575 && (diagram.connectors[55] as Connector).intermediatePoints[2].y == 400).toBe(true);
            expect((diagram.connectors[56] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[56] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[56] as Connector).intermediatePoints[1].x == 775 && (diagram.connectors[56] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[56] as Connector).intermediatePoints[2].x == 775 && (diagram.connectors[56] as Connector).intermediatePoints[2].y == 455 && (diagram.connectors[56] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[56] as Connector).intermediatePoints[3].y == 455 && (diagram.connectors[56] as Connector).intermediatePoints[4].x == 550 && (diagram.connectors[56] as Connector).intermediatePoints[4].y == 425).toBe(true);
            expect((diagram.connectors[57] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[57] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[57] as Connector).intermediatePoints[1].x == 775 && (diagram.connectors[57] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[57] as Connector).intermediatePoints[2].x == 775 && (diagram.connectors[57] as Connector).intermediatePoints[2].y == 455 && (diagram.connectors[57] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[57] as Connector).intermediatePoints[3].y == 455 && (diagram.connectors[57] as Connector).intermediatePoints[4].x == 550 && (diagram.connectors[57] as Connector).intermediatePoints[4].y == 425).toBe(true);
            expect((diagram.connectors[58] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[58] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[58] as Connector).intermediatePoints[1].x == 738 && (diagram.connectors[58] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[58] as Connector).intermediatePoints[2].x == 738 && (diagram.connectors[58] as Connector).intermediatePoints[2].y == 450 && (diagram.connectors[58] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[58] as Connector).intermediatePoints[3].y == 450 && (diagram.connectors[58] as Connector).intermediatePoints[4].x == 550 && (diagram.connectors[58] as Connector).intermediatePoints[4].y == 425).toBe(true);
            expect((diagram.connectors[59] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[59] as Connector).intermediatePoints[0].y == 500 && (diagram.connectors[59] as Connector).intermediatePoints[1].x == 738 && (diagram.connectors[59] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[59] as Connector).intermediatePoints[2].x == 738 && (diagram.connectors[59] as Connector).intermediatePoints[2].y == 550 && (diagram.connectors[59] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[59] as Connector).intermediatePoints[3].y == 550 && (diagram.connectors[59] as Connector).intermediatePoints[4].x == 550 && (diagram.connectors[59] as Connector).intermediatePoints[4].y == 425).toBe(true);
            expect((diagram.connectors[60] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[60] as Connector).intermediatePoints[0].y == 525 && (diagram.connectors[60] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[60] as Connector).intermediatePoints[1].y == 538 && (diagram.connectors[60] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[60] as Connector).intermediatePoints[2].y == 538 && (diagram.connectors[60] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[60] as Connector).intermediatePoints[3].y == 425).toBe(true);
            expect((diagram.connectors[61] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[61] as Connector).intermediatePoints[0].y == 525 && (diagram.connectors[61] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[61] as Connector).intermediatePoints[1].y == 538 && (diagram.connectors[61] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[61] as Connector).intermediatePoints[2].y == 538 && (diagram.connectors[61] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[61] as Connector).intermediatePoints[3].y == 425).toBe(true);
            expect((diagram.connectors[62] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[62] as Connector).intermediatePoints[0].y == 525 && (diagram.connectors[62] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[62] as Connector).intermediatePoints[1].y == 575 && (diagram.connectors[62] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[62] as Connector).intermediatePoints[2].y == 575 && (diagram.connectors[62] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[62] as Connector).intermediatePoints[3].y == 425).toBe(true);
            expect((diagram.connectors[63] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[63] as Connector).intermediatePoints[0].y == 525 && (diagram.connectors[63] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[63] as Connector).intermediatePoints[1].y == 575 && (diagram.connectors[63] as Connector).intermediatePoints[2].x == 550 && (diagram.connectors[63] as Connector).intermediatePoints[2].y == 575 && (diagram.connectors[63] as Connector).intermediatePoints[3].x == 550 && (diagram.connectors[63] as Connector).intermediatePoints[3].y == 425).toBe(true);
            expect((diagram.connectors[64] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[64] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[64] as Connector).intermediatePoints[1].x == 25 && (diagram.connectors[64] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[64] as Connector).intermediatePoints[2].x == 25 && (diagram.connectors[64] as Connector).intermediatePoints[2].y == 635 && (diagram.connectors[64] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[64] as Connector).intermediatePoints[3].y == 635 && (diagram.connectors[64] as Connector).intermediatePoints[4].x == 300 && (diagram.connectors[64] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[65] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[65] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[65] as Connector).intermediatePoints[1].x == 25 && (diagram.connectors[65] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[65] as Connector).intermediatePoints[2].x == 25 && (diagram.connectors[65] as Connector).intermediatePoints[2].y == 635 && (diagram.connectors[65] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[65] as Connector).intermediatePoints[3].y == 635 && (diagram.connectors[65] as Connector).intermediatePoints[4].x == 300 && (diagram.connectors[65] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[66] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[66] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[66] as Connector).intermediatePoints[1].x == 62 && (diagram.connectors[66] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[66] as Connector).intermediatePoints[2].x == 62 && (diagram.connectors[66] as Connector).intermediatePoints[2].y == 650 && (diagram.connectors[66] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[66] as Connector).intermediatePoints[3].y == 650 && (diagram.connectors[66] as Connector).intermediatePoints[4].x == 300 && (diagram.connectors[66] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[67] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[67] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[67] as Connector).intermediatePoints[1].x == 62 && (diagram.connectors[67] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[67] as Connector).intermediatePoints[2].x == 62 && (diagram.connectors[67] as Connector).intermediatePoints[2].y == 750 && (diagram.connectors[67] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[67] as Connector).intermediatePoints[3].y == 750 && (diagram.connectors[67] as Connector).intermediatePoints[4].x == 300 && (diagram.connectors[67] as Connector).intermediatePoints[4].y == 725).toBe(true);
            expect((diagram.connectors[68] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[68] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[68] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[68] as Connector).intermediatePoints[1].y == 662 && (diagram.connectors[68] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[68] as Connector).intermediatePoints[2].y == 662 && (diagram.connectors[68] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[68] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[69] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[69] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[69] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[69] as Connector).intermediatePoints[1].y == 662 && (diagram.connectors[69] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[69] as Connector).intermediatePoints[2].y == 662 && (diagram.connectors[69] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[69] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[70] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[70] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[70] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[70] as Connector).intermediatePoints[1].y == 625 && (diagram.connectors[70] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[70] as Connector).intermediatePoints[2].y == 625 && (diagram.connectors[70] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[70] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[71] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[71] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[71] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[71] as Connector).intermediatePoints[1].y == 625 && (diagram.connectors[71] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[71] as Connector).intermediatePoints[2].y == 625 && (diagram.connectors[71] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[71] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[72] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[72] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[72] as Connector).intermediatePoints[1].x == 275 && (diagram.connectors[72] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[73] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[73] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[73] as Connector).intermediatePoints[1].x == 275 && (diagram.connectors[73] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[74] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[74] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[74] as Connector).intermediatePoints[1].x == 138 && (diagram.connectors[74] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[74] as Connector).intermediatePoints[2].x == 138 && (diagram.connectors[74] as Connector).intermediatePoints[2].y == 650 && (diagram.connectors[74] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[74] as Connector).intermediatePoints[3].y == 650 && (diagram.connectors[74] as Connector).intermediatePoints[4].x == 300 && (diagram.connectors[74] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[75] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[75] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[75] as Connector).intermediatePoints[1].x == 138 && (diagram.connectors[75] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[75] as Connector).intermediatePoints[2].x == 138 && (diagram.connectors[75] as Connector).intermediatePoints[2].y == 750 && (diagram.connectors[75] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[75] as Connector).intermediatePoints[3].y == 750 && (diagram.connectors[75] as Connector).intermediatePoints[4].x == 300 && (diagram.connectors[75] as Connector).intermediatePoints[4].y == 725).toBe(true);
            expect((diagram.connectors[76] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[76] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[76] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[76] as Connector).intermediatePoints[1].y == 738 && (diagram.connectors[76] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[76] as Connector).intermediatePoints[2].y == 738 && (diagram.connectors[76] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[76] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[77] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[77] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[77] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[77] as Connector).intermediatePoints[1].y == 738 && (diagram.connectors[77] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[77] as Connector).intermediatePoints[2].y == 738 && (diagram.connectors[77] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[77] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[78] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[78] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[78] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[78] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[78] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[78] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[78] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[78] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[79] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[79] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[79] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[79] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[79] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[79] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[79] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[79] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[80] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[80] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[80] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[80] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[81] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[81] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[81] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[81] as Connector).intermediatePoints[1].y == 700).toBe(true);
            expect((diagram.connectors[82] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[82] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[82] as Connector).intermediatePoints[1].x == 662 && (diagram.connectors[82] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[82] as Connector).intermediatePoints[2].x == 662 && (diagram.connectors[82] as Connector).intermediatePoints[2].y == 650 && (diagram.connectors[82] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[82] as Connector).intermediatePoints[3].y == 650 && (diagram.connectors[82] as Connector).intermediatePoints[4].x == 450 && (diagram.connectors[82] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[83] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[83] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[83] as Connector).intermediatePoints[1].x == 662 && (diagram.connectors[83] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[83] as Connector).intermediatePoints[2].x == 662 && (diagram.connectors[83] as Connector).intermediatePoints[2].y == 750 && (diagram.connectors[83] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[83] as Connector).intermediatePoints[3].y == 750 && (diagram.connectors[83] as Connector).intermediatePoints[4].x == 450 && (diagram.connectors[83] as Connector).intermediatePoints[4].y == 725).toBe(true);
            expect((diagram.connectors[84] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[84] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[84] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[84] as Connector).intermediatePoints[1].y == 662 && (diagram.connectors[84] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[84] as Connector).intermediatePoints[2].y == 662 && (diagram.connectors[84] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[84] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[85] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[85] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[85] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[85] as Connector).intermediatePoints[1].y == 662 && (diagram.connectors[85] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[85] as Connector).intermediatePoints[2].y == 662 && (diagram.connectors[85] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[85] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[86] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[86] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[86] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[86] as Connector).intermediatePoints[1].y == 625 && (diagram.connectors[86] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[86] as Connector).intermediatePoints[2].y == 625 && (diagram.connectors[86] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[86] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[87] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[87] as Connector).intermediatePoints[0].y == 675 && (diagram.connectors[87] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[87] as Connector).intermediatePoints[1].y == 625 && (diagram.connectors[87] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[87] as Connector).intermediatePoints[2].y == 625 && (diagram.connectors[87] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[87] as Connector).intermediatePoints[3].y == 675).toBe(true);
            expect((diagram.connectors[88] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[88] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[88] as Connector).intermediatePoints[1].x == 775 && (diagram.connectors[88] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[88] as Connector).intermediatePoints[2].x == 775 && (diagram.connectors[88] as Connector).intermediatePoints[2].y == 635 && (diagram.connectors[88] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[88] as Connector).intermediatePoints[3].y == 635 && (diagram.connectors[88] as Connector).intermediatePoints[4].x == 450 && (diagram.connectors[88] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[89] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[89] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[89] as Connector).intermediatePoints[1].x == 775 && (diagram.connectors[89] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[89] as Connector).intermediatePoints[2].x == 775 && (diagram.connectors[89] as Connector).intermediatePoints[2].y == 635 && (diagram.connectors[89] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[89] as Connector).intermediatePoints[3].y == 635 && (diagram.connectors[89] as Connector).intermediatePoints[4].x == 450 && (diagram.connectors[89] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[90] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[90] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[90] as Connector).intermediatePoints[1].x == 738 && (diagram.connectors[90] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[90] as Connector).intermediatePoints[2].x == 738 && (diagram.connectors[90] as Connector).intermediatePoints[2].y == 650 && (diagram.connectors[90] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[90] as Connector).intermediatePoints[3].y == 650 && (diagram.connectors[90] as Connector).intermediatePoints[4].x == 450 && (diagram.connectors[90] as Connector).intermediatePoints[4].y == 675).toBe(true);
            expect((diagram.connectors[91] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[91] as Connector).intermediatePoints[0].y == 700 && (diagram.connectors[91] as Connector).intermediatePoints[1].x == 738 && (diagram.connectors[91] as Connector).intermediatePoints[1].y == 700 && (diagram.connectors[91] as Connector).intermediatePoints[2].x == 738 && (diagram.connectors[91] as Connector).intermediatePoints[2].y == 750 && (diagram.connectors[91] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[91] as Connector).intermediatePoints[3].y == 750 && (diagram.connectors[91] as Connector).intermediatePoints[4].x == 450 && (diagram.connectors[91] as Connector).intermediatePoints[4].y == 725).toBe(true);
            expect((diagram.connectors[92] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[92] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[92] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[92] as Connector).intermediatePoints[1].y == 738 && (diagram.connectors[92] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[92] as Connector).intermediatePoints[2].y == 738 && (diagram.connectors[92] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[92] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[93] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[93] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[93] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[93] as Connector).intermediatePoints[1].y == 738 && (diagram.connectors[93] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[93] as Connector).intermediatePoints[2].y == 738 && (diagram.connectors[93] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[93] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[94] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[94] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[94] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[94] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[94] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[94] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[94] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[94] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[95] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[95] as Connector).intermediatePoints[0].y == 725 && (diagram.connectors[95] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[95] as Connector).intermediatePoints[1].y == 775 && (diagram.connectors[95] as Connector).intermediatePoints[2].x == 450 && (diagram.connectors[95] as Connector).intermediatePoints[2].y == 775 && (diagram.connectors[95] as Connector).intermediatePoints[3].x == 450 && (diagram.connectors[95] as Connector).intermediatePoints[3].y == 725).toBe(true);
            expect((diagram.connectors[96] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[96] as Connector).intermediatePoints[0].y == 1000 && (diagram.connectors[96] as Connector).intermediatePoints[1].x == 25 && (diagram.connectors[96] as Connector).intermediatePoints[1].y == 1000 && (diagram.connectors[96] as Connector).intermediatePoints[2].x == 25 && (diagram.connectors[96] as Connector).intermediatePoints[2].y == 955 && (diagram.connectors[96] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[96] as Connector).intermediatePoints[3].y == 955 && (diagram.connectors[96] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[96] as Connector).intermediatePoints[4].y == 875).toBe(true);
            expect((diagram.connectors[97] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[97] as Connector).intermediatePoints[0].y == 1000 && (diagram.connectors[97] as Connector).intermediatePoints[1].x == 25 && (diagram.connectors[97] as Connector).intermediatePoints[1].y == 1000 && (diagram.connectors[97] as Connector).intermediatePoints[2].x == 25 && (diagram.connectors[97] as Connector).intermediatePoints[2].y == 955 && (diagram.connectors[97] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[97] as Connector).intermediatePoints[3].y == 955 && (diagram.connectors[97] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[97] as Connector).intermediatePoints[4].y == 875).toBe(true);
            expect((diagram.connectors[98] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[98] as Connector).intermediatePoints[0].y == 1000 && (diagram.connectors[98] as Connector).intermediatePoints[1].x == 62 && (diagram.connectors[98] as Connector).intermediatePoints[1].y == 1000 && (diagram.connectors[98] as Connector).intermediatePoints[2].x == 62 && (diagram.connectors[98] as Connector).intermediatePoints[2].y == 950 && (diagram.connectors[98] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[98] as Connector).intermediatePoints[3].y == 950 && (diagram.connectors[98] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[98] as Connector).intermediatePoints[4].y == 875).toBe(true);
            expect((diagram.connectors[99] as Connector).intermediatePoints[0].x == 75 && (diagram.connectors[99] as Connector).intermediatePoints[0].y == 1000 && (diagram.connectors[99] as Connector).intermediatePoints[1].x == 62 && (diagram.connectors[99] as Connector).intermediatePoints[1].y == 1000 && (diagram.connectors[99] as Connector).intermediatePoints[2].x == 62 && (diagram.connectors[99] as Connector).intermediatePoints[2].y == 1050 && (diagram.connectors[99] as Connector).intermediatePoints[3].x == 145 && (diagram.connectors[99] as Connector).intermediatePoints[3].y == 1050 && (diagram.connectors[99] as Connector).intermediatePoints[4].x == 145 && (diagram.connectors[99] as Connector).intermediatePoints[4].y == 850 && (diagram.connectors[99] as Connector).intermediatePoints[5].x == 125 && (diagram.connectors[99] as Connector).intermediatePoints[5].y == 850).toBe(true);
            expect((diagram.connectors[100] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[100] as Connector).intermediatePoints[0].y == 975 && (diagram.connectors[100] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[100] as Connector).intermediatePoints[1].y == 875).toBe(true);
            expect((diagram.connectors[101] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[101] as Connector).intermediatePoints[0].y == 975 && (diagram.connectors[101] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[101] as Connector).intermediatePoints[1].y == 875).toBe(true);
            expect((diagram.connectors[102] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[102] as Connector).intermediatePoints[0].y == 975 && (diagram.connectors[102] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[102] as Connector).intermediatePoints[1].y == 875).toBe(true);
            expect((diagram.connectors[103] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[103] as Connector).intermediatePoints[0].y == 975 && (diagram.connectors[103] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[103] as Connector).intermediatePoints[1].y == 875).toBe(true);
            expect((diagram.connectors[104] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[104] as Connector).intermediatePoints[0].y == 1000 && (diagram.connectors[104] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[104] as Connector).intermediatePoints[1].y == 1000 && (diagram.connectors[104] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[104] as Connector).intermediatePoints[2].y == 955 && (diagram.connectors[104] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[104] as Connector).intermediatePoints[3].y == 955 && (diagram.connectors[104] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[104] as Connector).intermediatePoints[4].y == 875).toBe(true);
            expect((diagram.connectors[105] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[105] as Connector).intermediatePoints[0].y == 1000 && (diagram.connectors[105] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[105] as Connector).intermediatePoints[1].y == 1000 && (diagram.connectors[105] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[105] as Connector).intermediatePoints[2].y == 955 && (diagram.connectors[105] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[105] as Connector).intermediatePoints[3].y == 955 && (diagram.connectors[105] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[105] as Connector).intermediatePoints[4].y == 875).toBe(true);
            expect((diagram.connectors[106] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[106] as Connector).intermediatePoints[0].y == 1000 && (diagram.connectors[106] as Connector).intermediatePoints[1].x == 138 && (diagram.connectors[106] as Connector).intermediatePoints[1].y == 1000 && (diagram.connectors[106] as Connector).intermediatePoints[2].x == 138 && (diagram.connectors[106] as Connector).intermediatePoints[2].y == 950 && (diagram.connectors[106] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[106] as Connector).intermediatePoints[3].y == 950 && (diagram.connectors[106] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[106] as Connector).intermediatePoints[4].y == 875).toBe(true);
            expect((diagram.connectors[107] as Connector).intermediatePoints[0].x == 125 && (diagram.connectors[107] as Connector).intermediatePoints[0].y == 1000 && (diagram.connectors[107] as Connector).intermediatePoints[1].x == 138 && (diagram.connectors[107] as Connector).intermediatePoints[1].y == 1000 && (diagram.connectors[107] as Connector).intermediatePoints[2].x == 138 && (diagram.connectors[107] as Connector).intermediatePoints[2].y == 1050 && (diagram.connectors[107] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[107] as Connector).intermediatePoints[3].y == 1050 && (diagram.connectors[107] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[107] as Connector).intermediatePoints[4].y == 850 && (diagram.connectors[107] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[107] as Connector).intermediatePoints[5].y == 850).toBe(true);
            expect((diagram.connectors[108] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[108] as Connector).intermediatePoints[0].y == 1025 && (diagram.connectors[108] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[108] as Connector).intermediatePoints[1].y == 1038 && (diagram.connectors[108] as Connector).intermediatePoints[2].x == 50 && (diagram.connectors[108] as Connector).intermediatePoints[2].y == 1038 && (diagram.connectors[108] as Connector).intermediatePoints[3].x == 50 && (diagram.connectors[108] as Connector).intermediatePoints[3].y == 955 && (diagram.connectors[108] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[108] as Connector).intermediatePoints[4].y == 955 && (diagram.connectors[108] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[108] as Connector).intermediatePoints[5].y == 875).toBe(true);
            expect((diagram.connectors[109] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[109] as Connector).intermediatePoints[0].y == 1025 && (diagram.connectors[109] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[109] as Connector).intermediatePoints[1].y == 1038 && (diagram.connectors[109] as Connector).intermediatePoints[2].x == 150 && (diagram.connectors[109] as Connector).intermediatePoints[2].y == 1038 && (diagram.connectors[109] as Connector).intermediatePoints[3].x == 150 && (diagram.connectors[109] as Connector).intermediatePoints[3].y == 955 && (diagram.connectors[109] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[109] as Connector).intermediatePoints[4].y == 955 && (diagram.connectors[109] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[109] as Connector).intermediatePoints[5].y == 875).toBe(true);
            expect((diagram.connectors[110] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[110] as Connector).intermediatePoints[0].y == 1025 && (diagram.connectors[110] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[110] as Connector).intermediatePoints[1].y == 1075 && (diagram.connectors[110] as Connector).intermediatePoints[2].x == 35 && (diagram.connectors[110] as Connector).intermediatePoints[2].y == 1075 && (diagram.connectors[110] as Connector).intermediatePoints[3].x == 35 && (diagram.connectors[110] as Connector).intermediatePoints[3].y == 850 && (diagram.connectors[110] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[110] as Connector).intermediatePoints[4].y == 850).toBe(true);
            expect((diagram.connectors[111] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[111] as Connector).intermediatePoints[0].y == 1025 && (diagram.connectors[111] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[111] as Connector).intermediatePoints[1].y == 1075 && (diagram.connectors[111] as Connector).intermediatePoints[2].x == 35 && (diagram.connectors[111] as Connector).intermediatePoints[2].y == 1075 && (diagram.connectors[111] as Connector).intermediatePoints[3].x == 35 && (diagram.connectors[111] as Connector).intermediatePoints[3].y == 850 && (diagram.connectors[111] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[111] as Connector).intermediatePoints[4].y == 850).toBe(true);
            expect((diagram.connectors[112] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[112] as Connector).intermediatePoints[0].y == 900 && (diagram.connectors[112] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[112] as Connector).intermediatePoints[1].y == 900 && (diagram.connectors[112] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[112] as Connector).intermediatePoints[2].y == 945 && (diagram.connectors[112] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[112] as Connector).intermediatePoints[3].y == 945 && (diagram.connectors[112] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[112] as Connector).intermediatePoints[4].y == 1125).toBe(true);
            expect((diagram.connectors[113] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[113] as Connector).intermediatePoints[0].y == 900 && (diagram.connectors[113] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[113] as Connector).intermediatePoints[1].y == 900 && (diagram.connectors[113] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[113] as Connector).intermediatePoints[2].y == 945 && (diagram.connectors[113] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[113] as Connector).intermediatePoints[3].y == 945 && (diagram.connectors[113] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[113] as Connector).intermediatePoints[4].y == 1125).toBe(true);
            expect((diagram.connectors[114] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[114] as Connector).intermediatePoints[0].y == 900 && (diagram.connectors[114] as Connector).intermediatePoints[1].x == 662 && (diagram.connectors[114] as Connector).intermediatePoints[1].y == 900 && (diagram.connectors[114] as Connector).intermediatePoints[2].x == 662 && (diagram.connectors[114] as Connector).intermediatePoints[2].y == 850 && (diagram.connectors[114] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[114] as Connector).intermediatePoints[3].y == 850 && (diagram.connectors[114] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[114] as Connector).intermediatePoints[4].y == 1150 && (diagram.connectors[114] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[114] as Connector).intermediatePoints[5].y == 1150).toBe(true);
            expect((diagram.connectors[115] as Connector).intermediatePoints[0].x == 675 && (diagram.connectors[115] as Connector).intermediatePoints[0].y == 900 && (diagram.connectors[115] as Connector).intermediatePoints[1].x == 662 && (diagram.connectors[115] as Connector).intermediatePoints[1].y == 900 && (diagram.connectors[115] as Connector).intermediatePoints[2].x == 662 && (diagram.connectors[115] as Connector).intermediatePoints[2].y == 950 && (diagram.connectors[115] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[115] as Connector).intermediatePoints[3].y == 950 && (diagram.connectors[115] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[115] as Connector).intermediatePoints[4].y == 1125).toBe(true);
            expect((diagram.connectors[116] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[116] as Connector).intermediatePoints[0].y == 875 && (diagram.connectors[116] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[116] as Connector).intermediatePoints[1].y == 862 && (diagram.connectors[116] as Connector).intermediatePoints[2].x == 650 && (diagram.connectors[116] as Connector).intermediatePoints[2].y == 862 && (diagram.connectors[116] as Connector).intermediatePoints[3].x == 650 && (diagram.connectors[116] as Connector).intermediatePoints[3].y == 945 && (diagram.connectors[116] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[116] as Connector).intermediatePoints[4].y == 945 && (diagram.connectors[116] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[116] as Connector).intermediatePoints[5].y == 1125).toBe(true);
            expect((diagram.connectors[117] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[117] as Connector).intermediatePoints[0].y == 875 && (diagram.connectors[117] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[117] as Connector).intermediatePoints[1].y == 862 && (diagram.connectors[117] as Connector).intermediatePoints[2].x == 750 && (diagram.connectors[117] as Connector).intermediatePoints[2].y == 862 && (diagram.connectors[117] as Connector).intermediatePoints[3].x == 750 && (diagram.connectors[117] as Connector).intermediatePoints[3].y == 945 && (diagram.connectors[117] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[117] as Connector).intermediatePoints[4].y == 945 && (diagram.connectors[117] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[117] as Connector).intermediatePoints[5].y == 1125).toBe(true);
            expect((diagram.connectors[118] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[118] as Connector).intermediatePoints[0].y == 875 && (diagram.connectors[118] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[118] as Connector).intermediatePoints[1].y == 825 && (diagram.connectors[118] as Connector).intermediatePoints[2].x == 635 && (diagram.connectors[118] as Connector).intermediatePoints[2].y == 825 && (diagram.connectors[118] as Connector).intermediatePoints[3].x == 635 && (diagram.connectors[118] as Connector).intermediatePoints[3].y == 1150 && (diagram.connectors[118] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[118] as Connector).intermediatePoints[4].y == 1150).toBe(true);
            expect((diagram.connectors[119] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[119] as Connector).intermediatePoints[0].y == 875 && (diagram.connectors[119] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[119] as Connector).intermediatePoints[1].y == 825 && (diagram.connectors[119] as Connector).intermediatePoints[2].x == 635 && (diagram.connectors[119] as Connector).intermediatePoints[2].y == 825 && (diagram.connectors[119] as Connector).intermediatePoints[3].x == 635 && (diagram.connectors[119] as Connector).intermediatePoints[3].y == 1150 && (diagram.connectors[119] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[119] as Connector).intermediatePoints[4].y == 1150).toBe(true);
            expect((diagram.connectors[120] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[120] as Connector).intermediatePoints[0].y == 900 && (diagram.connectors[120] as Connector).intermediatePoints[1].x == 775 && (diagram.connectors[120] as Connector).intermediatePoints[1].y == 900 && (diagram.connectors[120] as Connector).intermediatePoints[2].x == 775 && (diagram.connectors[120] as Connector).intermediatePoints[2].y == 945 && (diagram.connectors[120] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[120] as Connector).intermediatePoints[3].y == 945 && (diagram.connectors[120] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[120] as Connector).intermediatePoints[4].y == 1125).toBe(true);
            expect((diagram.connectors[121] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[121] as Connector).intermediatePoints[0].y == 900 && (diagram.connectors[121] as Connector).intermediatePoints[1].x == 775 && (diagram.connectors[121] as Connector).intermediatePoints[1].y == 900 && (diagram.connectors[121] as Connector).intermediatePoints[2].x == 775 && (diagram.connectors[121] as Connector).intermediatePoints[2].y == 945 && (diagram.connectors[121] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[121] as Connector).intermediatePoints[3].y == 945 && (diagram.connectors[121] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[121] as Connector).intermediatePoints[4].y == 1125).toBe(true);
            expect((diagram.connectors[122] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[122] as Connector).intermediatePoints[0].y == 900 && (diagram.connectors[122] as Connector).intermediatePoints[1].x == 738 && (diagram.connectors[122] as Connector).intermediatePoints[1].y == 900 && (diagram.connectors[122] as Connector).intermediatePoints[2].x == 738 && (diagram.connectors[122] as Connector).intermediatePoints[2].y == 850 && (diagram.connectors[122] as Connector).intermediatePoints[3].x == 655 && (diagram.connectors[122] as Connector).intermediatePoints[3].y == 850 && (diagram.connectors[122] as Connector).intermediatePoints[4].x == 655 && (diagram.connectors[122] as Connector).intermediatePoints[4].y == 1150 && (diagram.connectors[122] as Connector).intermediatePoints[5].x == 675 && (diagram.connectors[122] as Connector).intermediatePoints[5].y == 1150).toBe(true);
            expect((diagram.connectors[123] as Connector).intermediatePoints[0].x == 725 && (diagram.connectors[123] as Connector).intermediatePoints[0].y == 900 && (diagram.connectors[123] as Connector).intermediatePoints[1].x == 738 && (diagram.connectors[123] as Connector).intermediatePoints[1].y == 900 && (diagram.connectors[123] as Connector).intermediatePoints[2].x == 738 && (diagram.connectors[123] as Connector).intermediatePoints[2].y == 950 && (diagram.connectors[123] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[123] as Connector).intermediatePoints[3].y == 950 && (diagram.connectors[123] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[123] as Connector).intermediatePoints[4].y == 1125).toBe(true);
            expect((diagram.connectors[124] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[124] as Connector).intermediatePoints[0].y == 925 && (diagram.connectors[124] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[124] as Connector).intermediatePoints[1].y == 1125).toBe(true);
            expect((diagram.connectors[125] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[125] as Connector).intermediatePoints[0].y == 925 && (diagram.connectors[125] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[125] as Connector).intermediatePoints[1].y == 1125).toBe(true);
            expect((diagram.connectors[126] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[126] as Connector).intermediatePoints[0].y == 925 && (diagram.connectors[126] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[126] as Connector).intermediatePoints[1].y == 1125).toBe(true);
            expect((diagram.connectors[127] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[127] as Connector).intermediatePoints[0].y == 925 && (diagram.connectors[127] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[127] as Connector).intermediatePoints[1].y == 1125).toBe(true);
            done();
        });
    });

    describe('Conectors with segments - Orthogonal Segment Rendering(Port To Port)', () => {
        let diagram: Diagram;
        let ele: HTMLElement;
        let mouseEvents: MouseEvents = new MouseEvents();
        let diagramCanvas: HTMLElement;
        beforeAll((): void => {
            ele = createElement('div', { id: 'diagramOrthogonalSegmentPortToPortRendering' });
            document.body.appendChild(ele);
            let nodes: NodeModel[] = []; let count = 1; let offsetY = 100; let offsetX = 100
            for (var i = 0; i < 9; i++) {
                var node = {
                    id: 'node' + i, offsetX: ((count) * offsetX), offsetY: offsetY, width: 50, height: 50,
                    annotations: [{
                        content: ((count) * offsetX).toString(),
                    },
                    {
                        offset: { x: 0.5, y: 0 },
                        content: offsetY.toString(),
                    }, {
                        offset: { x: 0.5, y: 1 },
                        content: 'node' + i,
                    }],
                    ports: [{ id: 'port1', offset: { x: 0, y: 0.5 } },
                    { id: 'port2', offset: { x: 0.5, y: 0 } },
                    { id: 'port3', offset: { x: 1, y: 0.5 } },
                    { id: 'port4', offset: { x: 0.5, y: 1 } }]
                };
                if (node.id == 'node1') {
                    node.offsetX = 550, node.offsetY = 250,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                }
                else if (node.id == 'node3') {
                    node.offsetX = 250, node.offsetY = 250,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                }
                else if (node.id == 'node5') {
                    node.offsetX = 550, node.offsetY = 400,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                } else if (node.id == 'node7') {
                    node.offsetX = 250, node.offsetY = 400,
                        node.annotations = [{
                            content: node.offsetX.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 0 },
                            content: node.offsetY.toString(),
                        },
                        {
                            offset: { x: 0.5, y: 1 },
                            content: node.id.toString(),
                        }];
                }
                if (node.id !== 'node4')
                    nodes.push(node);
                count += 3;
                if (count == 10) {
                    count = 1;
                    offsetX = 100;
                    offsetY = offsetY + 200;
                }
            }
            let connectors: ConnectorModel[] = [];

            let ports = ['port1', 'port2', 'port3', 'port4']
            let dir = ['Right', 'Left', 'Top', 'Bottom'];
            let sourceNodes = ['node3', 'node1', 'node7', 'node5'];
            let targetNodes = ['node0', 'node2', 'node6', 'node8'];
            let con = 0;
            for (let k = 0; k < sourceNodes.length; k++) {
                for (let i = 0; i < ports.length; i++) {
                    for (let j = 0; j < ports.length; j++) {
                        for (let l = 0; l < dir.length; l++) {
                            let connector: ConnectorModel = {
                                id: 'connector' + con, type: 'Orthogonal', sourceID: sourceNodes[k], sourcePortID: ports[i], targetID: targetNodes[k], targetPortID: ports[j],
                                segments: [{ type: 'Orthogonal', direction: dir[l], length: 50 },],
                            }
                            connectors.push(connector);
                            con++;
                        }
                    }
                }
            }

            diagram = new Diagram({
                width: 1000, height: 1000, nodes: nodes,
                connectors: connectors, 
                getConnectorDefaults: (obj: ConnectorModel, diagram: Diagram) => {
                    let connector: ConnectorModel = {};
                    connector.constraints = ConnectorConstraints.Default | ConnectorConstraints.DragSegmentThumb;
                    return connector;
                },
                snapSettings: { constraints: SnapConstraints.ShowLines }
            });
            diagram.appendTo('#diagramOrthogonalSegmentPortToPortRendering');
            diagramCanvas = document.getElementById(diagram.element.id + 'content');
        });
        afterAll((): void => {
            diagram.destroy();
            ele.remove();
        });
        it('Checking Orthogonal segment - Port to Port Rendering', (done: Function) => {

            expect((diagram.connectors[0] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[0] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[0] as Connector).intermediatePoints[1].x == 55 && (diagram.connectors[0] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[0] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[0] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[0] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[0] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[1] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[1] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[1] as Connector).intermediatePoints[1].x == 55 && (diagram.connectors[1] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[1] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[1] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[1] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[1] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[2] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[2] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[2] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[2] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[2] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[2] as Connector).intermediatePoints[2].y == 200 && (diagram.connectors[2] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[2] as Connector).intermediatePoints[3].y == 200 && (diagram.connectors[2] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[2] as Connector).intermediatePoints[4].y == 100 && (diagram.connectors[2] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[2] as Connector).intermediatePoints[5].y == 100).toBe(true);
            expect((diagram.connectors[3] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[3] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[3] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[3] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[3] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[3] as Connector).intermediatePoints[2].y == 300 && (diagram.connectors[3] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[3] as Connector).intermediatePoints[3].y == 300 && (diagram.connectors[3] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[3] as Connector).intermediatePoints[4].y == 100 && (diagram.connectors[3] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[3] as Connector).intermediatePoints[5].y == 100).toBe(true);
            expect((diagram.connectors[4] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[4] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[4] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[4] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[4] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[4] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[4] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[4] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[4] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[4] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[5] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[5] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[5] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[5] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[5] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[5] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[5] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[5] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[5] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[5] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[6] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[6] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[6] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[6] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[6] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[6] as Connector).intermediatePoints[2].y == 54.57 && (diagram.connectors[6] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[6] as Connector).intermediatePoints[3].y == 54.57 && (diagram.connectors[6] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[6] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[7] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[7] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[7] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[7] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[7] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[7] as Connector).intermediatePoints[2].y == 54.57 && (diagram.connectors[7] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[7] as Connector).intermediatePoints[3].y == 54.57 && (diagram.connectors[7] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[7] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[8] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[8] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[8] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[8] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[8] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[8] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[8] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[8] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[9] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[9] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[9] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[9] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[9] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[9] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[9] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[9] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[10] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[10] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[10] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[10] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[10] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[10] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[10] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[10] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[11] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[11] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[11] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[11] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[11] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[11] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[11] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[11] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[12] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[12] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[12] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[12] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[12] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[12] as Connector).intermediatePoints[2].y == 125).toBe(true);
            expect((diagram.connectors[13] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[13] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[13] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[13] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[13] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[13] as Connector).intermediatePoints[2].y == 125).toBe(true);
            expect((diagram.connectors[14] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[14] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[14] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[14] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[14] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[14] as Connector).intermediatePoints[2].y == 200 && (diagram.connectors[14] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[14] as Connector).intermediatePoints[3].y == 200 && (diagram.connectors[14] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[14] as Connector).intermediatePoints[4].y == 125).toBe(true);
            expect((diagram.connectors[15] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[15] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[15] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[15] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[15] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[15] as Connector).intermediatePoints[2].y == 300 && (diagram.connectors[15] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[15] as Connector).intermediatePoints[3].y == 300 && (diagram.connectors[15] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[15] as Connector).intermediatePoints[4].y == 125).toBe(true);
            expect((diagram.connectors[16] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[16] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[16] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[16] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[16] as Connector).intermediatePoints[2].x == 54.57 && (diagram.connectors[16] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[16] as Connector).intermediatePoints[3].x == 54.57 && (diagram.connectors[16] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[16] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[16] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[17] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[17] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[17] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[17] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[17] as Connector).intermediatePoints[2].x == 54.57 && (diagram.connectors[17] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[17] as Connector).intermediatePoints[3].x == 54.57 && (diagram.connectors[17] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[17] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[17] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[18] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[18] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[18] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[18] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[18] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[18] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[18] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[18] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[18] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[18] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[19] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[19] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[19] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[19] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[19] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[19] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[19] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[19] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[19] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[19] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[20] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[20] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[20] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[20] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[20] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[20] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[20] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[20] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[20] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[20] as Connector).intermediatePoints[4].y == 55 && (diagram.connectors[20] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[20] as Connector).intermediatePoints[5].y == 75).toBe(true);
            expect((diagram.connectors[21] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[21] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[21] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[21] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[21] as Connector).intermediatePoints[2].x == 200 && (diagram.connectors[21] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[21] as Connector).intermediatePoints[3].x == 200 && (diagram.connectors[21] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[21] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[21] as Connector).intermediatePoints[4].y == 55 && (diagram.connectors[21] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[21] as Connector).intermediatePoints[5].y == 75).toBe(true);
            expect((diagram.connectors[22] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[22] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[22] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[22] as Connector).intermediatePoints[1].y == 55 && (diagram.connectors[22] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[22] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[22] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[22] as Connector).intermediatePoints[3].y == 75).toBe(true);
            expect((diagram.connectors[23] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[23] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[23] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[23] as Connector).intermediatePoints[1].y == 55 && (diagram.connectors[23] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[23] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[23] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[23] as Connector).intermediatePoints[3].y == 75).toBe(true);
            expect((diagram.connectors[24] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[24] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[24] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[24] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[24] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[24] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[24] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[24] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[24] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[24] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[25] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[25] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[25] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[25] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[25] as Connector).intermediatePoints[2].x == 200 && (diagram.connectors[25] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[25] as Connector).intermediatePoints[3].x == 200 && (diagram.connectors[25] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[25] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[25] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[26] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[26] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[26] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[26] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[26] as Connector).intermediatePoints[2].x == 125 && (diagram.connectors[26] as Connector).intermediatePoints[2].y == 100).toBe(true);
            expect((diagram.connectors[27] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[27] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[27] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[27] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[27] as Connector).intermediatePoints[2].x == 125 && (diagram.connectors[27] as Connector).intermediatePoints[2].y == 100).toBe(true);
            expect((diagram.connectors[28] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[28] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[28] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[28] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[28] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[28] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[28] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[28] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[29] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[29] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[29] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[29] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[29] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[29] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[29] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[29] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[30] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[30] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[30] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[30] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[30] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[30] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[30] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[30] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[31] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[31] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[31] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[31] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[31] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[31] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[31] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[31] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[32] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[32] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[32] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[32] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[32] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[32] as Connector).intermediatePoints[2].y == 205 && (diagram.connectors[32] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[32] as Connector).intermediatePoints[3].y == 205 && (diagram.connectors[32] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[32] as Connector).intermediatePoints[4].y == 100 && (diagram.connectors[32] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[32] as Connector).intermediatePoints[5].y == 100).toBe(true);
            expect((diagram.connectors[33] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[33] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[33] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[33] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[33] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[33] as Connector).intermediatePoints[2].y == 205 && (diagram.connectors[33] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[33] as Connector).intermediatePoints[3].y == 205 && (diagram.connectors[33] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[33] as Connector).intermediatePoints[4].y == 100 && (diagram.connectors[33] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[33] as Connector).intermediatePoints[5].y == 100).toBe(true);
            expect((diagram.connectors[34] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[34] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[34] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[34] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[34] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[34] as Connector).intermediatePoints[2].y == 200 && (diagram.connectors[34] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[34] as Connector).intermediatePoints[3].y == 200 && (diagram.connectors[34] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[34] as Connector).intermediatePoints[4].y == 100 && (diagram.connectors[34] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[34] as Connector).intermediatePoints[5].y == 100).toBe(true);
            expect((diagram.connectors[35] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[35] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[35] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[35] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[35] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[35] as Connector).intermediatePoints[2].y == 300 && (diagram.connectors[35] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[35] as Connector).intermediatePoints[3].y == 300 && (diagram.connectors[35] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[35] as Connector).intermediatePoints[4].y == 100 && (diagram.connectors[35] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[35] as Connector).intermediatePoints[5].y == 100).toBe(true);
            expect((diagram.connectors[36] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[36] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[36] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[36] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[36] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[36] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[36] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[36] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[36] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[36] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[37] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[37] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[37] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[37] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[37] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[37] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[37] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[37] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[37] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[37] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[38] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[38] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[38] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[38] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[38] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[38] as Connector).intermediatePoints[2].y == 54.57 && (diagram.connectors[38] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[38] as Connector).intermediatePoints[3].y == 54.57 && (diagram.connectors[38] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[38] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[39] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[39] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[39] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[39] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[39] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[39] as Connector).intermediatePoints[2].y == 54.57 && (diagram.connectors[39] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[39] as Connector).intermediatePoints[3].y == 54.57 && (diagram.connectors[39] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[39] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[40] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[40] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[40] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[40] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[40] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[40] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[40] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[40] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[41] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[41] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[41] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[41] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[41] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[41] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[41] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[41] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[42] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[42] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[42] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[42] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[42] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[42] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[42] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[42] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[43] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[43] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[43] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[43] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[43] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[43] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[43] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[43] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[44] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[44] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[44] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[44] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[44] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[44] as Connector).intermediatePoints[2].y == 205 && (diagram.connectors[44] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[44] as Connector).intermediatePoints[3].y == 205 && (diagram.connectors[44] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[44] as Connector).intermediatePoints[4].y == 125).toBe(true);
            expect((diagram.connectors[45] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[45] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[45] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[45] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[45] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[45] as Connector).intermediatePoints[2].y == 205 && (diagram.connectors[45] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[45] as Connector).intermediatePoints[3].y == 205 && (diagram.connectors[45] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[45] as Connector).intermediatePoints[4].y == 125).toBe(true);
            expect((diagram.connectors[46] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[46] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[46] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[46] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[46] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[46] as Connector).intermediatePoints[2].y == 200 && (diagram.connectors[46] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[46] as Connector).intermediatePoints[3].y == 200 && (diagram.connectors[46] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[46] as Connector).intermediatePoints[4].y == 125).toBe(true);
            expect((diagram.connectors[47] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[47] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[47] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[47] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[47] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[47] as Connector).intermediatePoints[2].y == 300 && (diagram.connectors[47] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[47] as Connector).intermediatePoints[3].y == 300 && (diagram.connectors[47] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[47] as Connector).intermediatePoints[4].y == 125).toBe(true);
            expect((diagram.connectors[48] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[48] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[48] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[48] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[48] as Connector).intermediatePoints[2].x == 54.57 && (diagram.connectors[48] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[48] as Connector).intermediatePoints[3].x == 54.57 && (diagram.connectors[48] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[48] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[48] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[49] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[49] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[49] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[49] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[49] as Connector).intermediatePoints[2].x == 54.57 && (diagram.connectors[49] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[49] as Connector).intermediatePoints[3].x == 54.57 && (diagram.connectors[49] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[49] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[49] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[50] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[50] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[50] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[50] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[50] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[50] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[50] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[50] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[50] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[50] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[51] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[51] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[51] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[51] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[51] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[51] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[51] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[51] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[51] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[51] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[52] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[52] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[52] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[52] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[52] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[52] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[52] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[52] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[52] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[52] as Connector).intermediatePoints[4].y == 55 && (diagram.connectors[52] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[52] as Connector).intermediatePoints[5].y == 75).toBe(true);
            expect((diagram.connectors[53] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[53] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[53] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[53] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[53] as Connector).intermediatePoints[2].x == 200 && (diagram.connectors[53] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[53] as Connector).intermediatePoints[3].x == 200 && (diagram.connectors[53] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[53] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[53] as Connector).intermediatePoints[4].y == 55 && (diagram.connectors[53] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[53] as Connector).intermediatePoints[5].y == 75).toBe(true);
            expect((diagram.connectors[54] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[54] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[54] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[54] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[54] as Connector).intermediatePoints[2].x == 205 && (diagram.connectors[54] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[54] as Connector).intermediatePoints[3].x == 205 && (diagram.connectors[54] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[54] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[54] as Connector).intermediatePoints[4].y == 55 && (diagram.connectors[54] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[54] as Connector).intermediatePoints[5].y == 75).toBe(true);
            expect((diagram.connectors[55] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[55] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[55] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[55] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[55] as Connector).intermediatePoints[2].x == 205 && (diagram.connectors[55] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[55] as Connector).intermediatePoints[3].x == 205 && (diagram.connectors[55] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[55] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[55] as Connector).intermediatePoints[4].y == 55 && (diagram.connectors[55] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[55] as Connector).intermediatePoints[5].y == 75).toBe(true);
            expect((diagram.connectors[56] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[56] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[56] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[56] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[56] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[56] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[56] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[56] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[56] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[56] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[57] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[57] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[57] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[57] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[57] as Connector).intermediatePoints[2].x == 200 && (diagram.connectors[57] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[57] as Connector).intermediatePoints[3].x == 200 && (diagram.connectors[57] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[57] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[57] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[58] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[58] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[58] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[58] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[58] as Connector).intermediatePoints[2].x == 205 && (diagram.connectors[58] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[58] as Connector).intermediatePoints[3].x == 205 && (diagram.connectors[58] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[58] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[58] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[59] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[59] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[59] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[59] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[59] as Connector).intermediatePoints[2].x == 205 && (diagram.connectors[59] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[59] as Connector).intermediatePoints[3].x == 205 && (diagram.connectors[59] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[59] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[59] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[60] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[60] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[60] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[60] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[60] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[60] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[60] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[60] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[61] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[61] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[61] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[61] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[61] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[61] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[61] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[61] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[62] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[62] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[62] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[62] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[62] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[62] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[62] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[62] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[63] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[63] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[63] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[63] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[63] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[63] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[63] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[63] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[64] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[64] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[64] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[64] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[64] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[64] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[64] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[64] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[65] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[65] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[65] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[65] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[65] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[65] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[65] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[65] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[66] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[66] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[66] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[66] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[66] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[66] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[66] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[66] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[67] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[67] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[67] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[67] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[67] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[67] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[67] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[67] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[68] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[68] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[68] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[68] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[68] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[68] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[68] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[68] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[68] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[68] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[69] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[69] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[69] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[69] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[69] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[69] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[69] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[69] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[69] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[69] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[70] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[70] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[70] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[70] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[70] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[70] as Connector).intermediatePoints[2].y == 54.57 && (diagram.connectors[70] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[70] as Connector).intermediatePoints[3].y == 54.57 && (diagram.connectors[70] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[70] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[71] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[71] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[71] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[71] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[71] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[71] as Connector).intermediatePoints[2].y == 54.57 && (diagram.connectors[71] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[71] as Connector).intermediatePoints[3].y == 54.57 && (diagram.connectors[71] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[71] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[72] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[72] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[72] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[72] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[72] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[72] as Connector).intermediatePoints[2].y == 205 && (diagram.connectors[72] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[72] as Connector).intermediatePoints[3].y == 205 && (diagram.connectors[72] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[72] as Connector).intermediatePoints[4].y == 100 && (diagram.connectors[72] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[72] as Connector).intermediatePoints[5].y == 100).toBe(true);
            expect((diagram.connectors[73] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[73] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[73] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[73] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[73] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[73] as Connector).intermediatePoints[2].y == 205 && (diagram.connectors[73] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[73] as Connector).intermediatePoints[3].y == 205 && (diagram.connectors[73] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[73] as Connector).intermediatePoints[4].y == 100 && (diagram.connectors[73] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[73] as Connector).intermediatePoints[5].y == 100).toBe(true);
            expect((diagram.connectors[74] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[74] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[74] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[74] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[74] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[74] as Connector).intermediatePoints[2].y == 200 && (diagram.connectors[74] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[74] as Connector).intermediatePoints[3].y == 200 && (diagram.connectors[74] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[74] as Connector).intermediatePoints[4].y == 100 && (diagram.connectors[74] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[74] as Connector).intermediatePoints[5].y == 100).toBe(true);
            expect((diagram.connectors[75] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[75] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[75] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[75] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[75] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[75] as Connector).intermediatePoints[2].y == 300 && (diagram.connectors[75] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[75] as Connector).intermediatePoints[3].y == 300 && (diagram.connectors[75] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[75] as Connector).intermediatePoints[4].y == 100 && (diagram.connectors[75] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[75] as Connector).intermediatePoints[5].y == 100).toBe(true);
            expect((diagram.connectors[76] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[76] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[76] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[76] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[76] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[76] as Connector).intermediatePoints[2].y == 205 && (diagram.connectors[76] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[76] as Connector).intermediatePoints[3].y == 205 && (diagram.connectors[76] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[76] as Connector).intermediatePoints[4].y == 125).toBe(true);
            expect((diagram.connectors[77] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[77] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[77] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[77] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[77] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[77] as Connector).intermediatePoints[2].y == 205 && (diagram.connectors[77] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[77] as Connector).intermediatePoints[3].y == 205 && (diagram.connectors[77] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[77] as Connector).intermediatePoints[4].y == 125).toBe(true);
            expect((diagram.connectors[78] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[78] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[78] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[78] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[78] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[78] as Connector).intermediatePoints[2].y == 200 && (diagram.connectors[78] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[78] as Connector).intermediatePoints[3].y == 200 && (diagram.connectors[78] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[78] as Connector).intermediatePoints[4].y == 125).toBe(true);
            expect((diagram.connectors[79] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[79] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[79] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[79] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[79] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[79] as Connector).intermediatePoints[2].y == 300 && (diagram.connectors[79] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[79] as Connector).intermediatePoints[3].y == 300 && (diagram.connectors[79] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[79] as Connector).intermediatePoints[4].y == 125).toBe(true);
            expect((diagram.connectors[80] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[80] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[80] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[80] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[80] as Connector).intermediatePoints[2].x == 600 && (diagram.connectors[80] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[80] as Connector).intermediatePoints[3].x == 600 && (diagram.connectors[80] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[80] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[80] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[81] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[81] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[81] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[81] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[81] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[81] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[81] as Connector).intermediatePoints[3].x == 500 && (diagram.connectors[81] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[81] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[81] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[82] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[82] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[82] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[82] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[82] as Connector).intermediatePoints[2].x == 675 && (diagram.connectors[82] as Connector).intermediatePoints[2].y == 100).toBe(true);
            expect((diagram.connectors[83] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[83] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[83] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[83] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[83] as Connector).intermediatePoints[2].x == 675 && (diagram.connectors[83] as Connector).intermediatePoints[2].y == 100).toBe(true);
            expect((diagram.connectors[84] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[84] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[84] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[84] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[84] as Connector).intermediatePoints[2].x == 600 && (diagram.connectors[84] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[84] as Connector).intermediatePoints[3].x == 600 && (diagram.connectors[84] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[84] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[84] as Connector).intermediatePoints[4].y == 55 && (diagram.connectors[84] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[84] as Connector).intermediatePoints[5].y == 75).toBe(true);
            expect((diagram.connectors[85] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[85] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[85] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[85] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[85] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[85] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[85] as Connector).intermediatePoints[3].x == 500 && (diagram.connectors[85] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[85] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[85] as Connector).intermediatePoints[4].y == 55 && (diagram.connectors[85] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[85] as Connector).intermediatePoints[5].y == 75).toBe(true);
            expect((diagram.connectors[86] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[86] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[86] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[86] as Connector).intermediatePoints[1].y == 55 && (diagram.connectors[86] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[86] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[86] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[86] as Connector).intermediatePoints[3].y == 75).toBe(true);
            expect((diagram.connectors[87] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[87] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[87] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[87] as Connector).intermediatePoints[1].y == 55 && (diagram.connectors[87] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[87] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[87] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[87] as Connector).intermediatePoints[3].y == 75).toBe(true);
            expect((diagram.connectors[88] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[88] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[88] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[88] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[88] as Connector).intermediatePoints[2].x == 745.43 && (diagram.connectors[88] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[88] as Connector).intermediatePoints[3].x == 745.43 && (diagram.connectors[88] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[88] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[88] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[89] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[89] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[89] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[89] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[89] as Connector).intermediatePoints[2].x == 745.43 && (diagram.connectors[89] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[89] as Connector).intermediatePoints[3].x == 745.43 && (diagram.connectors[89] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[89] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[89] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[90] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[90] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[90] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[90] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[90] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[90] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[90] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[90] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[90] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[90] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[91] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[91] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[91] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[91] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[91] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[91] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[91] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[91] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[91] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[91] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[92] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[92] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[92] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[92] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[92] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[92] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[92] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[92] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[93] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[93] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[93] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[93] as Connector).intermediatePoints[1].y == 212 && (diagram.connectors[93] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[93] as Connector).intermediatePoints[2].y == 212 && (diagram.connectors[93] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[93] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[94] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[94] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[94] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[94] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[94] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[94] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[94] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[94] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[95] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[95] as Connector).intermediatePoints[0].y == 225 && (diagram.connectors[95] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[95] as Connector).intermediatePoints[1].y == 175 && (diagram.connectors[95] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[95] as Connector).intermediatePoints[2].y == 175 && (diagram.connectors[95] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[95] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[96] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[96] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[96] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[96] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[96] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[96] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[96] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[96] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[97] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[97] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[97] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[97] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[97] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[97] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[97] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[97] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[98] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[98] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[98] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[98] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[98] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[98] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[98] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[98] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[99] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[99] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[99] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[99] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[99] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[99] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[99] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[99] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[100] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[100] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[100] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[100] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[100] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[100] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[100] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[100] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[100] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[100] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[101] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[101] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[101] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[101] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[101] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[101] as Connector).intermediatePoints[2].y == 55 && (diagram.connectors[101] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[101] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[101] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[101] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[102] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[102] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[102] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[102] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[102] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[102] as Connector).intermediatePoints[2].y == 54.57 && (diagram.connectors[102] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[102] as Connector).intermediatePoints[3].y == 54.57 && (diagram.connectors[102] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[102] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[103] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[103] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[103] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[103] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[103] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[103] as Connector).intermediatePoints[2].y == 54.57 && (diagram.connectors[103] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[103] as Connector).intermediatePoints[3].y == 54.57 && (diagram.connectors[103] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[103] as Connector).intermediatePoints[4].y == 75).toBe(true);
            expect((diagram.connectors[104] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[104] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[104] as Connector).intermediatePoints[1].x == 745 && (diagram.connectors[104] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[104] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[104] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[104] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[104] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[105] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[105] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[105] as Connector).intermediatePoints[1].x == 745 && (diagram.connectors[105] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[105] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[105] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[105] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[105] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[106] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[106] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[106] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[106] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[106] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[106] as Connector).intermediatePoints[2].y == 200 && (diagram.connectors[106] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[106] as Connector).intermediatePoints[3].y == 200 && (diagram.connectors[106] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[106] as Connector).intermediatePoints[4].y == 100 && (diagram.connectors[106] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[106] as Connector).intermediatePoints[5].y == 100).toBe(true);
            expect((diagram.connectors[107] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[107] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[107] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[107] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[107] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[107] as Connector).intermediatePoints[2].y == 300 && (diagram.connectors[107] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[107] as Connector).intermediatePoints[3].y == 300 && (diagram.connectors[107] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[107] as Connector).intermediatePoints[4].y == 100 && (diagram.connectors[107] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[107] as Connector).intermediatePoints[5].y == 100).toBe(true);
            expect((diagram.connectors[108] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[108] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[108] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[108] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[108] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[108] as Connector).intermediatePoints[2].y == 205 && (diagram.connectors[108] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[108] as Connector).intermediatePoints[3].y == 205 && (diagram.connectors[108] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[108] as Connector).intermediatePoints[4].y == 125).toBe(true);
            expect((diagram.connectors[109] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[109] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[109] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[109] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[109] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[109] as Connector).intermediatePoints[2].y == 205 && (diagram.connectors[109] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[109] as Connector).intermediatePoints[3].y == 205 && (diagram.connectors[109] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[109] as Connector).intermediatePoints[4].y == 125).toBe(true);
            expect((diagram.connectors[110] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[110] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[110] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[110] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[110] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[110] as Connector).intermediatePoints[2].y == 200 && (diagram.connectors[110] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[110] as Connector).intermediatePoints[3].y == 200 && (diagram.connectors[110] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[110] as Connector).intermediatePoints[4].y == 125).toBe(true);
            expect((diagram.connectors[111] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[111] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[111] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[111] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[111] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[111] as Connector).intermediatePoints[2].y == 300 && (diagram.connectors[111] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[111] as Connector).intermediatePoints[3].y == 300 && (diagram.connectors[111] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[111] as Connector).intermediatePoints[4].y == 125).toBe(true);
            expect((diagram.connectors[112] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[112] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[112] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[112] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[112] as Connector).intermediatePoints[2].x == 600 && (diagram.connectors[112] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[112] as Connector).intermediatePoints[3].x == 600 && (diagram.connectors[112] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[112] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[112] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[113] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[113] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[113] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[113] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[113] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[113] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[113] as Connector).intermediatePoints[3].x == 500 && (diagram.connectors[113] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[113] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[113] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[114] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[114] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[114] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[114] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[114] as Connector).intermediatePoints[2].x == 595 && (diagram.connectors[114] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[114] as Connector).intermediatePoints[3].x == 595 && (diagram.connectors[114] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[114] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[114] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[115] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[115] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[115] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[115] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[115] as Connector).intermediatePoints[2].x == 595 && (diagram.connectors[115] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[115] as Connector).intermediatePoints[3].x == 595 && (diagram.connectors[115] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[115] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[115] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[116] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[116] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[116] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[116] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[116] as Connector).intermediatePoints[2].x == 600 && (diagram.connectors[116] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[116] as Connector).intermediatePoints[3].x == 600 && (diagram.connectors[116] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[116] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[116] as Connector).intermediatePoints[4].y == 55 && (diagram.connectors[116] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[116] as Connector).intermediatePoints[5].y == 75).toBe(true);
            expect((diagram.connectors[117] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[117] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[117] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[117] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[117] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[117] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[117] as Connector).intermediatePoints[3].x == 500 && (diagram.connectors[117] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[117] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[117] as Connector).intermediatePoints[4].y == 55 && (diagram.connectors[117] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[117] as Connector).intermediatePoints[5].y == 75).toBe(true);
            expect((diagram.connectors[118] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[118] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[118] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[118] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[118] as Connector).intermediatePoints[2].x == 595 && (diagram.connectors[118] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[118] as Connector).intermediatePoints[3].x == 595 && (diagram.connectors[118] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[118] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[118] as Connector).intermediatePoints[4].y == 55 && (diagram.connectors[118] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[118] as Connector).intermediatePoints[5].y == 75).toBe(true);
            expect((diagram.connectors[119] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[119] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[119] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[119] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[119] as Connector).intermediatePoints[2].x == 595 && (diagram.connectors[119] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[119] as Connector).intermediatePoints[3].x == 595 && (diagram.connectors[119] as Connector).intermediatePoints[3].y == 55 && (diagram.connectors[119] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[119] as Connector).intermediatePoints[4].y == 55 && (diagram.connectors[119] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[119] as Connector).intermediatePoints[5].y == 75).toBe(true);
            expect((diagram.connectors[120] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[120] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[120] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[120] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[120] as Connector).intermediatePoints[2].x == 745.43 && (diagram.connectors[120] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[120] as Connector).intermediatePoints[3].x == 745.43 && (diagram.connectors[120] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[120] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[120] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[121] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[121] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[121] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[121] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[121] as Connector).intermediatePoints[2].x == 745.43 && (diagram.connectors[121] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[121] as Connector).intermediatePoints[3].x == 745.43 && (diagram.connectors[121] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[121] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[121] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[122] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[122] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[122] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[122] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[122] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[122] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[122] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[122] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[122] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[122] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[123] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[123] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[123] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[123] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[123] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[123] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[123] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[123] as Connector).intermediatePoints[3].y == 100 && (diagram.connectors[123] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[123] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[124] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[124] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[124] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[124] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[124] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[124] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[124] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[124] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[125] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[125] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[125] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[125] as Connector).intermediatePoints[1].y == 288 && (diagram.connectors[125] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[125] as Connector).intermediatePoints[2].y == 288 && (diagram.connectors[125] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[125] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[126] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[126] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[126] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[126] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[126] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[126] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[126] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[126] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[127] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[127] as Connector).intermediatePoints[0].y == 275 && (diagram.connectors[127] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[127] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[127] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[127] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[127] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[127] as Connector).intermediatePoints[3].y == 125).toBe(true);
            expect((diagram.connectors[128] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[128] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[128] as Connector).intermediatePoints[1].x == 55 && (diagram.connectors[128] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[128] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[128] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[128] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[128] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[129] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[129] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[129] as Connector).intermediatePoints[1].x == 55 && (diagram.connectors[129] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[129] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[129] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[129] as Connector).intermediatePoints[3].x == 75 && (diagram.connectors[129] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[130] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[130] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[130] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[130] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[130] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[130] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[130] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[130] as Connector).intermediatePoints[3].y == 350 && (diagram.connectors[130] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[130] as Connector).intermediatePoints[4].y == 500 && (diagram.connectors[130] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[130] as Connector).intermediatePoints[5].y == 500).toBe(true);
            expect((diagram.connectors[131] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[131] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[131] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[131] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[131] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[131] as Connector).intermediatePoints[2].y == 450 && (diagram.connectors[131] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[131] as Connector).intermediatePoints[3].y == 450 && (diagram.connectors[131] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[131] as Connector).intermediatePoints[4].y == 500 && (diagram.connectors[131] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[131] as Connector).intermediatePoints[5].y == 500).toBe(true);
            expect((diagram.connectors[132] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[132] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[132] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[132] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[132] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[132] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[133] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[133] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[133] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[133] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[133] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[133] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[134] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[134] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[134] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[134] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[134] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[134] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[134] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[134] as Connector).intermediatePoints[3].y == 350 && (diagram.connectors[134] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[134] as Connector).intermediatePoints[4].y == 475).toBe(true);
            expect((diagram.connectors[135] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[135] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[135] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[135] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[135] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[135] as Connector).intermediatePoints[2].y == 450 && (diagram.connectors[135] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[135] as Connector).intermediatePoints[3].y == 450 && (diagram.connectors[135] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[135] as Connector).intermediatePoints[4].y == 475).toBe(true);
            expect((diagram.connectors[136] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[136] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[136] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[136] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[136] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[136] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[136] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[136] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[137] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[137] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[137] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[137] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[137] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[137] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[137] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[137] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[138] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[138] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[138] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[138] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[138] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[138] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[138] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[138] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[139] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[139] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[139] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[139] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[139] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[139] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[139] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[139] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[140] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[140] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[140] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[140] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[140] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[140] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[140] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[140] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[140] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[140] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[141] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[141] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[141] as Connector).intermediatePoints[1].x == 175 && (diagram.connectors[141] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[141] as Connector).intermediatePoints[2].x == 175 && (diagram.connectors[141] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[141] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[141] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[141] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[141] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[142] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[142] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[142] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[142] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[142] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[142] as Connector).intermediatePoints[2].y == 545.58 && (diagram.connectors[142] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[142] as Connector).intermediatePoints[3].y == 545.58 && (diagram.connectors[142] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[142] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[143] as Connector).intermediatePoints[0].x == 225 && (diagram.connectors[143] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[143] as Connector).intermediatePoints[1].x == 212 && (diagram.connectors[143] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[143] as Connector).intermediatePoints[2].x == 212 && (diagram.connectors[143] as Connector).intermediatePoints[2].y == 545.58 && (diagram.connectors[143] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[143] as Connector).intermediatePoints[3].y == 545.58 && (diagram.connectors[143] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[143] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[144] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[144] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[144] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[144] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[144] as Connector).intermediatePoints[2].x == 54.57 && (diagram.connectors[144] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[144] as Connector).intermediatePoints[3].x == 54.57 && (diagram.connectors[144] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[144] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[144] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[145] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[145] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[145] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[145] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[145] as Connector).intermediatePoints[2].x == 54.57 && (diagram.connectors[145] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[145] as Connector).intermediatePoints[3].x == 54.57 && (diagram.connectors[145] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[145] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[145] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[146] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[146] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[146] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[146] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[146] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[146] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[146] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[146] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[146] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[146] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[147] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[147] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[147] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[147] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[147] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[147] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[147] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[147] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[147] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[147] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[148] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[148] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[148] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[148] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[148] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[148] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[148] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[148] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[149] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[149] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[149] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[149] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[149] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[149] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[149] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[149] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[150] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[150] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[150] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[150] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[150] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[150] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[150] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[150] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[151] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[151] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[151] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[151] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[151] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[151] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[151] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[151] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[152] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[152] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[152] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[152] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[152] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[152] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[152] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[152] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[152] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[152] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[153] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[153] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[153] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[153] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[153] as Connector).intermediatePoints[2].x == 200 && (diagram.connectors[153] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[153] as Connector).intermediatePoints[3].x == 200 && (diagram.connectors[153] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[153] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[153] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[154] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[154] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[154] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[154] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[154] as Connector).intermediatePoints[2].x == 205 && (diagram.connectors[154] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[154] as Connector).intermediatePoints[3].x == 205 && (diagram.connectors[154] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[154] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[154] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[155] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[155] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[155] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[155] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[155] as Connector).intermediatePoints[2].x == 205 && (diagram.connectors[155] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[155] as Connector).intermediatePoints[3].x == 205 && (diagram.connectors[155] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[155] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[155] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[156] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[156] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[156] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[156] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[156] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[156] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[156] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[156] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[156] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[156] as Connector).intermediatePoints[4].y == 545 && (diagram.connectors[156] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[156] as Connector).intermediatePoints[5].y == 525).toBe(true);
            expect((diagram.connectors[157] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[157] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[157] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[157] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[157] as Connector).intermediatePoints[2].x == 200 && (diagram.connectors[157] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[157] as Connector).intermediatePoints[3].x == 200 && (diagram.connectors[157] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[157] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[157] as Connector).intermediatePoints[4].y == 545 && (diagram.connectors[157] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[157] as Connector).intermediatePoints[5].y == 525).toBe(true);
            expect((diagram.connectors[158] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[158] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[158] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[158] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[158] as Connector).intermediatePoints[2].x == 205 && (diagram.connectors[158] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[158] as Connector).intermediatePoints[3].x == 205 && (diagram.connectors[158] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[158] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[158] as Connector).intermediatePoints[4].y == 545 && (diagram.connectors[158] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[158] as Connector).intermediatePoints[5].y == 525).toBe(true);
            expect((diagram.connectors[159] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[159] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[159] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[159] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[159] as Connector).intermediatePoints[2].x == 205 && (diagram.connectors[159] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[159] as Connector).intermediatePoints[3].x == 205 && (diagram.connectors[159] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[159] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[159] as Connector).intermediatePoints[4].y == 545 && (diagram.connectors[159] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[159] as Connector).intermediatePoints[5].y == 525).toBe(true);
            expect((diagram.connectors[160] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[160] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[160] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[160] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[160] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[160] as Connector).intermediatePoints[2].y == 445 && (diagram.connectors[160] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[160] as Connector).intermediatePoints[3].y == 445 && (diagram.connectors[160] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[160] as Connector).intermediatePoints[4].y == 500 && (diagram.connectors[160] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[160] as Connector).intermediatePoints[5].y == 500).toBe(true);
            expect((diagram.connectors[161] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[161] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[161] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[161] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[161] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[161] as Connector).intermediatePoints[2].y == 445 && (diagram.connectors[161] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[161] as Connector).intermediatePoints[3].y == 445 && (diagram.connectors[161] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[161] as Connector).intermediatePoints[4].y == 500 && (diagram.connectors[161] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[161] as Connector).intermediatePoints[5].y == 500).toBe(true);
            expect((diagram.connectors[162] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[162] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[162] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[162] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[162] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[162] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[162] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[162] as Connector).intermediatePoints[3].y == 350 && (diagram.connectors[162] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[162] as Connector).intermediatePoints[4].y == 500 && (diagram.connectors[162] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[162] as Connector).intermediatePoints[5].y == 500).toBe(true);
            expect((diagram.connectors[163] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[163] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[163] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[163] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[163] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[163] as Connector).intermediatePoints[2].y == 450 && (diagram.connectors[163] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[163] as Connector).intermediatePoints[3].y == 450 && (diagram.connectors[163] as Connector).intermediatePoints[4].x == 55 && (diagram.connectors[163] as Connector).intermediatePoints[4].y == 500 && (diagram.connectors[163] as Connector).intermediatePoints[5].x == 75 && (diagram.connectors[163] as Connector).intermediatePoints[5].y == 500).toBe(true);
            expect((diagram.connectors[164] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[164] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[164] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[164] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[164] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[164] as Connector).intermediatePoints[2].y == 445 && (diagram.connectors[164] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[164] as Connector).intermediatePoints[3].y == 445 && (diagram.connectors[164] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[164] as Connector).intermediatePoints[4].y == 475).toBe(true);
            expect((diagram.connectors[165] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[165] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[165] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[165] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[165] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[165] as Connector).intermediatePoints[2].y == 445 && (diagram.connectors[165] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[165] as Connector).intermediatePoints[3].y == 445 && (diagram.connectors[165] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[165] as Connector).intermediatePoints[4].y == 475).toBe(true);
            expect((diagram.connectors[166] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[166] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[166] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[166] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[166] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[166] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[166] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[166] as Connector).intermediatePoints[3].y == 350 && (diagram.connectors[166] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[166] as Connector).intermediatePoints[4].y == 475).toBe(true);
            expect((diagram.connectors[167] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[167] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[167] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[167] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[167] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[167] as Connector).intermediatePoints[2].y == 450 && (diagram.connectors[167] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[167] as Connector).intermediatePoints[3].y == 450 && (diagram.connectors[167] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[167] as Connector).intermediatePoints[4].y == 475).toBe(true);
            expect((diagram.connectors[168] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[168] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[168] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[168] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[168] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[168] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[168] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[168] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[169] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[169] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[169] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[169] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[169] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[169] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[169] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[169] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[170] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[170] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[170] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[170] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[170] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[170] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[170] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[170] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[171] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[171] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[171] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[171] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[171] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[171] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[171] as Connector).intermediatePoints[3].x == 125 && (diagram.connectors[171] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[172] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[172] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[172] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[172] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[172] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[172] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[172] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[172] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[172] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[172] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[173] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[173] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[173] as Connector).intermediatePoints[1].x == 325 && (diagram.connectors[173] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[173] as Connector).intermediatePoints[2].x == 325 && (diagram.connectors[173] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[173] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[173] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[173] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[173] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[174] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[174] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[174] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[174] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[174] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[174] as Connector).intermediatePoints[2].y == 545.58 && (diagram.connectors[174] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[174] as Connector).intermediatePoints[3].y == 545.58 && (diagram.connectors[174] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[174] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[175] as Connector).intermediatePoints[0].x == 275 && (diagram.connectors[175] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[175] as Connector).intermediatePoints[1].x == 288 && (diagram.connectors[175] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[175] as Connector).intermediatePoints[2].x == 288 && (diagram.connectors[175] as Connector).intermediatePoints[2].y == 545.58 && (diagram.connectors[175] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[175] as Connector).intermediatePoints[3].y == 545.58 && (diagram.connectors[175] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[175] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[176] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[176] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[176] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[176] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[176] as Connector).intermediatePoints[2].x == 54.57 && (diagram.connectors[176] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[176] as Connector).intermediatePoints[3].x == 54.57 && (diagram.connectors[176] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[176] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[176] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[177] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[177] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[177] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[177] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[177] as Connector).intermediatePoints[2].x == 54.57 && (diagram.connectors[177] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[177] as Connector).intermediatePoints[3].x == 54.57 && (diagram.connectors[177] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[177] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[177] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[178] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[178] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[178] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[178] as Connector).intermediatePoints[1].y == 475 && (diagram.connectors[178] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[178] as Connector).intermediatePoints[2].y == 475 && (diagram.connectors[178] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[178] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[178] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[178] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[179] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[179] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[179] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[179] as Connector).intermediatePoints[1].y == 475 && (diagram.connectors[179] as Connector).intermediatePoints[2].x == 55 && (diagram.connectors[179] as Connector).intermediatePoints[2].y == 475 && (diagram.connectors[179] as Connector).intermediatePoints[3].x == 55 && (diagram.connectors[179] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[179] as Connector).intermediatePoints[4].x == 75 && (diagram.connectors[179] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[180] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[180] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[180] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[180] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[180] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[180] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[180] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[180] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[181] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[181] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[181] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[181] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[181] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[181] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[181] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[181] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[182] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[182] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[182] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[182] as Connector).intermediatePoints[1].y == 455 && (diagram.connectors[182] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[182] as Connector).intermediatePoints[2].y == 455 && (diagram.connectors[182] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[182] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[183] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[183] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[183] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[183] as Connector).intermediatePoints[1].y == 455 && (diagram.connectors[183] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[183] as Connector).intermediatePoints[2].y == 455 && (diagram.connectors[183] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[183] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[184] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[184] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[184] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[184] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[184] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[184] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[184] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[184] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[184] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[184] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[185] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[185] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[185] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[185] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[185] as Connector).intermediatePoints[2].x == 200 && (diagram.connectors[185] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[185] as Connector).intermediatePoints[3].x == 200 && (diagram.connectors[185] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[185] as Connector).intermediatePoints[4].x == 125 && (diagram.connectors[185] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[186] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[186] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[186] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[186] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[186] as Connector).intermediatePoints[2].x == 125 && (diagram.connectors[186] as Connector).intermediatePoints[2].y == 500).toBe(true);
            expect((diagram.connectors[187] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[187] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[187] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[187] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[187] as Connector).intermediatePoints[2].x == 125 && (diagram.connectors[187] as Connector).intermediatePoints[2].y == 500).toBe(true);
            expect((diagram.connectors[188] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[188] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[188] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[188] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[188] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[188] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[188] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[188] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[188] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[188] as Connector).intermediatePoints[4].y == 545 && (diagram.connectors[188] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[188] as Connector).intermediatePoints[5].y == 525).toBe(true);
            expect((diagram.connectors[189] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[189] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[189] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[189] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[189] as Connector).intermediatePoints[2].x == 200 && (diagram.connectors[189] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[189] as Connector).intermediatePoints[3].x == 200 && (diagram.connectors[189] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[189] as Connector).intermediatePoints[4].x == 100 && (diagram.connectors[189] as Connector).intermediatePoints[4].y == 545 && (diagram.connectors[189] as Connector).intermediatePoints[5].x == 100 && (diagram.connectors[189] as Connector).intermediatePoints[5].y == 525).toBe(true);
            expect((diagram.connectors[190] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[190] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[190] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[190] as Connector).intermediatePoints[1].y == 545 && (diagram.connectors[190] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[190] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[190] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[190] as Connector).intermediatePoints[3].y == 525).toBe(true);
            expect((diagram.connectors[191] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[191] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[191] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[191] as Connector).intermediatePoints[1].y == 545 && (diagram.connectors[191] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[191] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[191] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[191] as Connector).intermediatePoints[3].y == 525).toBe(true);
            expect((diagram.connectors[192] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[192] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[192] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[192] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[192] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[192] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[192] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[192] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[193] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[193] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[193] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[193] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[193] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[193] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[193] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[193] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[194] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[194] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[194] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[194] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[194] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[194] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[194] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[194] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[195] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[195] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[195] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[195] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[195] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[195] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[195] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[195] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[196] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[196] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[196] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[196] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[196] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[196] as Connector).intermediatePoints[2].y == 445 && (diagram.connectors[196] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[196] as Connector).intermediatePoints[3].y == 445 && (diagram.connectors[196] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[196] as Connector).intermediatePoints[4].y == 475).toBe(true);
            expect((diagram.connectors[197] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[197] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[197] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[197] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[197] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[197] as Connector).intermediatePoints[2].y == 445 && (diagram.connectors[197] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[197] as Connector).intermediatePoints[3].y == 445 && (diagram.connectors[197] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[197] as Connector).intermediatePoints[4].y == 475).toBe(true);
            expect((diagram.connectors[198] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[198] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[198] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[198] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[198] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[198] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[198] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[198] as Connector).intermediatePoints[3].y == 350 && (diagram.connectors[198] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[198] as Connector).intermediatePoints[4].y == 475).toBe(true);
            expect((diagram.connectors[199] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[199] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[199] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[199] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[199] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[199] as Connector).intermediatePoints[2].y == 450 && (diagram.connectors[199] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[199] as Connector).intermediatePoints[3].y == 450 && (diagram.connectors[199] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[199] as Connector).intermediatePoints[4].y == 475).toBe(true);
            expect((diagram.connectors[200] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[200] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[200] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[200] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[200] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[200] as Connector).intermediatePoints[2].y == 445 && (diagram.connectors[200] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[200] as Connector).intermediatePoints[3].y == 445 && (diagram.connectors[200] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[200] as Connector).intermediatePoints[4].y == 500 && (diagram.connectors[200] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[200] as Connector).intermediatePoints[5].y == 500).toBe(true);
            expect((diagram.connectors[201] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[201] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[201] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[201] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[201] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[201] as Connector).intermediatePoints[2].y == 445 && (diagram.connectors[201] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[201] as Connector).intermediatePoints[3].y == 445 && (diagram.connectors[201] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[201] as Connector).intermediatePoints[4].y == 500 && (diagram.connectors[201] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[201] as Connector).intermediatePoints[5].y == 500).toBe(true);
            expect((diagram.connectors[202] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[202] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[202] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[202] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[202] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[202] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[202] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[202] as Connector).intermediatePoints[3].y == 350 && (diagram.connectors[202] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[202] as Connector).intermediatePoints[4].y == 500 && (diagram.connectors[202] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[202] as Connector).intermediatePoints[5].y == 500).toBe(true);
            expect((diagram.connectors[203] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[203] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[203] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[203] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[203] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[203] as Connector).intermediatePoints[2].y == 450 && (diagram.connectors[203] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[203] as Connector).intermediatePoints[3].y == 450 && (diagram.connectors[203] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[203] as Connector).intermediatePoints[4].y == 500 && (diagram.connectors[203] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[203] as Connector).intermediatePoints[5].y == 500).toBe(true);
            expect((diagram.connectors[204] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[204] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[204] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[204] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[204] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[204] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[204] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[204] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[204] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[204] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[205] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[205] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[205] as Connector).intermediatePoints[1].x == 475 && (diagram.connectors[205] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[205] as Connector).intermediatePoints[2].x == 475 && (diagram.connectors[205] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[205] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[205] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[205] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[205] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[206] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[206] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[206] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[206] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[206] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[206] as Connector).intermediatePoints[2].y == 545.58 && (diagram.connectors[206] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[206] as Connector).intermediatePoints[3].y == 545.58 && (diagram.connectors[206] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[206] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[207] as Connector).intermediatePoints[0].x == 525 && (diagram.connectors[207] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[207] as Connector).intermediatePoints[1].x == 512 && (diagram.connectors[207] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[207] as Connector).intermediatePoints[2].x == 512 && (diagram.connectors[207] as Connector).intermediatePoints[2].y == 545.58 && (diagram.connectors[207] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[207] as Connector).intermediatePoints[3].y == 545.58 && (diagram.connectors[207] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[207] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[208] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[208] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[208] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[208] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[208] as Connector).intermediatePoints[2].x == 600 && (diagram.connectors[208] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[208] as Connector).intermediatePoints[3].x == 600 && (diagram.connectors[208] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[208] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[208] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[209] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[209] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[209] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[209] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[209] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[209] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[209] as Connector).intermediatePoints[3].x == 500 && (diagram.connectors[209] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[209] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[209] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[210] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[210] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[210] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[210] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[210] as Connector).intermediatePoints[2].x == 595 && (diagram.connectors[210] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[210] as Connector).intermediatePoints[3].x == 595 && (diagram.connectors[210] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[210] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[210] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[211] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[211] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[211] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[211] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[211] as Connector).intermediatePoints[2].x == 595 && (diagram.connectors[211] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[211] as Connector).intermediatePoints[3].x == 595 && (diagram.connectors[211] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[211] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[211] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[212] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[212] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[212] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[212] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[212] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[212] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[212] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[212] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[213] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[213] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[213] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[213] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[213] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[213] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[213] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[213] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[214] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[214] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[214] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[214] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[214] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[214] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[214] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[214] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[215] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[215] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[215] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[215] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[215] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[215] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[215] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[215] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[216] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[216] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[216] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[216] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[216] as Connector).intermediatePoints[2].x == 745.43 && (diagram.connectors[216] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[216] as Connector).intermediatePoints[3].x == 745.43 && (diagram.connectors[216] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[216] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[216] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[217] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[217] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[217] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[217] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[217] as Connector).intermediatePoints[2].x == 745.43 && (diagram.connectors[217] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[217] as Connector).intermediatePoints[3].x == 745.43 && (diagram.connectors[217] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[217] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[217] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[218] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[218] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[218] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[218] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[218] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[218] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[218] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[218] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[218] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[218] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[219] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[219] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[219] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[219] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[219] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[219] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[219] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[219] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[219] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[219] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[220] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[220] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[220] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[220] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[220] as Connector).intermediatePoints[2].x == 600 && (diagram.connectors[220] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[220] as Connector).intermediatePoints[3].x == 600 && (diagram.connectors[220] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[220] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[220] as Connector).intermediatePoints[4].y == 545 && (diagram.connectors[220] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[220] as Connector).intermediatePoints[5].y == 525).toBe(true);
            expect((diagram.connectors[221] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[221] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[221] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[221] as Connector).intermediatePoints[1].y == 362 && (diagram.connectors[221] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[221] as Connector).intermediatePoints[2].y == 362 && (diagram.connectors[221] as Connector).intermediatePoints[3].x == 500 && (diagram.connectors[221] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[221] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[221] as Connector).intermediatePoints[4].y == 545 && (diagram.connectors[221] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[221] as Connector).intermediatePoints[5].y == 525).toBe(true);
            expect((diagram.connectors[222] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[222] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[222] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[222] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[222] as Connector).intermediatePoints[2].x == 595 && (diagram.connectors[222] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[222] as Connector).intermediatePoints[3].x == 595 && (diagram.connectors[222] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[222] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[222] as Connector).intermediatePoints[4].y == 545 && (diagram.connectors[222] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[222] as Connector).intermediatePoints[5].y == 525).toBe(true);
            expect((diagram.connectors[223] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[223] as Connector).intermediatePoints[0].y == 375 && (diagram.connectors[223] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[223] as Connector).intermediatePoints[1].y == 325 && (diagram.connectors[223] as Connector).intermediatePoints[2].x == 595 && (diagram.connectors[223] as Connector).intermediatePoints[2].y == 325 && (diagram.connectors[223] as Connector).intermediatePoints[3].x == 595 && (diagram.connectors[223] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[223] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[223] as Connector).intermediatePoints[4].y == 545 && (diagram.connectors[223] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[223] as Connector).intermediatePoints[5].y == 525).toBe(true);
            expect((diagram.connectors[224] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[224] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[224] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[224] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[224] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[224] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[224] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[224] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[225] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[225] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[225] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[225] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[225] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[225] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[225] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[225] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[226] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[226] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[226] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[226] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[226] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[226] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[226] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[226] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[227] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[227] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[227] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[227] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[227] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[227] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[227] as Connector).intermediatePoints[3].x == 675 && (diagram.connectors[227] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[228] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[228] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[228] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[228] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[228] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[228] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[229] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[229] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[229] as Connector).intermediatePoints[1].x == 700 && (diagram.connectors[229] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[229] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[229] as Connector).intermediatePoints[2].y == 475).toBe(true);
            expect((diagram.connectors[230] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[230] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[230] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[230] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[230] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[230] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[230] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[230] as Connector).intermediatePoints[3].y == 350 && (diagram.connectors[230] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[230] as Connector).intermediatePoints[4].y == 475).toBe(true);
            expect((diagram.connectors[231] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[231] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[231] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[231] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[231] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[231] as Connector).intermediatePoints[2].y == 450 && (diagram.connectors[231] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[231] as Connector).intermediatePoints[3].y == 450 && (diagram.connectors[231] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[231] as Connector).intermediatePoints[4].y == 475).toBe(true);
            expect((diagram.connectors[232] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[232] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[232] as Connector).intermediatePoints[1].x == 745 && (diagram.connectors[232] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[232] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[232] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[232] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[232] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[233] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[233] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[233] as Connector).intermediatePoints[1].x == 745 && (diagram.connectors[233] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[233] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[233] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[233] as Connector).intermediatePoints[3].x == 725 && (diagram.connectors[233] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[234] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[234] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[234] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[234] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[234] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[234] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[234] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[234] as Connector).intermediatePoints[3].y == 350 && (diagram.connectors[234] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[234] as Connector).intermediatePoints[4].y == 500 && (diagram.connectors[234] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[234] as Connector).intermediatePoints[5].y == 500).toBe(true);
            expect((diagram.connectors[235] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[235] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[235] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[235] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[235] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[235] as Connector).intermediatePoints[2].y == 450 && (diagram.connectors[235] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[235] as Connector).intermediatePoints[3].y == 450 && (diagram.connectors[235] as Connector).intermediatePoints[4].x == 745 && (diagram.connectors[235] as Connector).intermediatePoints[4].y == 500 && (diagram.connectors[235] as Connector).intermediatePoints[5].x == 725 && (diagram.connectors[235] as Connector).intermediatePoints[5].y == 500).toBe(true);
            expect((diagram.connectors[236] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[236] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[236] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[236] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[236] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[236] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[236] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[236] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[236] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[236] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[237] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[237] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[237] as Connector).intermediatePoints[1].x == 625 && (diagram.connectors[237] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[237] as Connector).intermediatePoints[2].x == 625 && (diagram.connectors[237] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[237] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[237] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[237] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[237] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[238] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[238] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[238] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[238] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[238] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[238] as Connector).intermediatePoints[2].y == 545.58 && (diagram.connectors[238] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[238] as Connector).intermediatePoints[3].y == 545.58 && (diagram.connectors[238] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[238] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[239] as Connector).intermediatePoints[0].x == 575 && (diagram.connectors[239] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[239] as Connector).intermediatePoints[1].x == 588 && (diagram.connectors[239] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[239] as Connector).intermediatePoints[2].x == 588 && (diagram.connectors[239] as Connector).intermediatePoints[2].y == 545.58 && (diagram.connectors[239] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[239] as Connector).intermediatePoints[3].y == 545.58 && (diagram.connectors[239] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[239] as Connector).intermediatePoints[4].y == 525).toBe(true);
            expect((diagram.connectors[240] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[240] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[240] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[240] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[240] as Connector).intermediatePoints[2].x == 600 && (diagram.connectors[240] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[240] as Connector).intermediatePoints[3].x == 600 && (diagram.connectors[240] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[240] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[240] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[241] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[241] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[241] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[241] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[241] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[241] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[241] as Connector).intermediatePoints[3].x == 500 && (diagram.connectors[241] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[241] as Connector).intermediatePoints[4].x == 675 && (diagram.connectors[241] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[242] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[242] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[242] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[242] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[242] as Connector).intermediatePoints[2].x == 675 && (diagram.connectors[242] as Connector).intermediatePoints[2].y == 500).toBe(true);
            expect((diagram.connectors[243] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[243] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[243] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[243] as Connector).intermediatePoints[1].y == 500 && (diagram.connectors[243] as Connector).intermediatePoints[2].x == 675 && (diagram.connectors[243] as Connector).intermediatePoints[2].y == 500).toBe(true);
            expect((diagram.connectors[244] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[244] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[244] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[244] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[244] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[244] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[244] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[244] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[245] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[245] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[245] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[245] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[245] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[245] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[245] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[245] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[246] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[246] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[246] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[246] as Connector).intermediatePoints[1].y == 455 && (diagram.connectors[246] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[246] as Connector).intermediatePoints[2].y == 455 && (diagram.connectors[246] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[246] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[247] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[247] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[247] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[247] as Connector).intermediatePoints[1].y == 455 && (diagram.connectors[247] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[247] as Connector).intermediatePoints[2].y == 455 && (diagram.connectors[247] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[247] as Connector).intermediatePoints[3].y == 475).toBe(true);
            expect((diagram.connectors[248] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[248] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[248] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[248] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[248] as Connector).intermediatePoints[2].x == 745.43 && (diagram.connectors[248] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[248] as Connector).intermediatePoints[3].x == 745.43 && (diagram.connectors[248] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[248] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[248] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[249] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[249] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[249] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[249] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[249] as Connector).intermediatePoints[2].x == 745.43 && (diagram.connectors[249] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[249] as Connector).intermediatePoints[3].x == 745.43 && (diagram.connectors[249] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[249] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[249] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[250] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[250] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[250] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[250] as Connector).intermediatePoints[1].y == 475 && (diagram.connectors[250] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[250] as Connector).intermediatePoints[2].y == 475 && (diagram.connectors[250] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[250] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[250] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[250] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[251] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[251] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[251] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[251] as Connector).intermediatePoints[1].y == 475 && (diagram.connectors[251] as Connector).intermediatePoints[2].x == 745 && (diagram.connectors[251] as Connector).intermediatePoints[2].y == 475 && (diagram.connectors[251] as Connector).intermediatePoints[3].x == 745 && (diagram.connectors[251] as Connector).intermediatePoints[3].y == 500 && (diagram.connectors[251] as Connector).intermediatePoints[4].x == 725 && (diagram.connectors[251] as Connector).intermediatePoints[4].y == 500).toBe(true);
            expect((diagram.connectors[252] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[252] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[252] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[252] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[252] as Connector).intermediatePoints[2].x == 600 && (diagram.connectors[252] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[252] as Connector).intermediatePoints[3].x == 600 && (diagram.connectors[252] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[252] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[252] as Connector).intermediatePoints[4].y == 545 && (diagram.connectors[252] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[252] as Connector).intermediatePoints[5].y == 525).toBe(true);
            expect((diagram.connectors[253] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[253] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[253] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[253] as Connector).intermediatePoints[1].y == 438 && (diagram.connectors[253] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[253] as Connector).intermediatePoints[2].y == 438 && (diagram.connectors[253] as Connector).intermediatePoints[3].x == 500 && (diagram.connectors[253] as Connector).intermediatePoints[3].y == 545 && (diagram.connectors[253] as Connector).intermediatePoints[4].x == 700 && (diagram.connectors[253] as Connector).intermediatePoints[4].y == 545 && (diagram.connectors[253] as Connector).intermediatePoints[5].x == 700 && (diagram.connectors[253] as Connector).intermediatePoints[5].y == 525).toBe(true);
            expect((diagram.connectors[254] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[254] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[254] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[254] as Connector).intermediatePoints[1].y == 545 && (diagram.connectors[254] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[254] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[254] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[254] as Connector).intermediatePoints[3].y == 525).toBe(true);
            expect((diagram.connectors[255] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[255] as Connector).intermediatePoints[0].y == 425 && (diagram.connectors[255] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[255] as Connector).intermediatePoints[1].y == 545 && (diagram.connectors[255] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[255] as Connector).intermediatePoints[2].y == 545 && (diagram.connectors[255] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[255] as Connector).intermediatePoints[3].y == 525).toBe(true);
            done();
        });
    });

    describe('Conectors with segments - Orthogonal Segment Rendering(Point To Point)', () => {
        let diagram: Diagram;
        let ele: HTMLElement;
        let mouseEvents: MouseEvents = new MouseEvents();
        let diagramCanvas: HTMLElement;
        beforeAll((): void => {
            ele = createElement('div', { id: 'diagramOrthogonalSegmentPointToPointRendering' });
            document.body.appendChild(ele);

            let connectors: ConnectorModel[] = [];
            let dir = ['Right', 'Left', 'Top', 'Bottom'];
            let sourcePoints = [{ x: 300, y: 200 }, { x: 550, y: 250 }, { x: 250, y: 400 }, { x: 550, y: 400 }];
            let targetPoints = [{ x: 100, y: 100 }, { x: 700, y: 100 }, { x: 100, y: 500 }, { x: 700, y: 500 }];
            let con = 0;
            for (var k = 0; k < sourcePoints.length; k++) {
                for (var l = 0; l < dir.length; l++) {
                    let connector: ConnectorModel = {
                        id: 'connector' + con, type: 'Orthogonal',
                        sourcePoint: sourcePoints[k], targetPoint: targetPoints[k],
                        segments: [{ type: 'Orthogonal', direction: dir[l], length: 50 },],
                    }
                    connectors.push(connector);
                    con++;
                }
            }

            diagram = new Diagram({
                width: 1000, height: 1000,
                connectors: connectors, 
                getConnectorDefaults: (obj: ConnectorModel, diagram: Diagram) => {
                    let connector: ConnectorModel = {};
                    connector.constraints = ConnectorConstraints.Default | ConnectorConstraints.DragSegmentThumb;
                    return connector;
                },
                snapSettings: { constraints: SnapConstraints.ShowLines }
            });
            diagram.appendTo('#diagramOrthogonalSegmentPointToPointRendering');
            diagramCanvas = document.getElementById(diagram.element.id + 'content');
        });
        afterAll((): void => {
            diagram.destroy();
            ele.remove();
        });
        it('Checking Orthogonal segment - Point to Point Rendering', (done: Function) => {

            expect((diagram.connectors[0] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[0] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[0] as Connector).intermediatePoints[1].x == 350 && (diagram.connectors[0] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[0] as Connector).intermediatePoints[2].x == 350 && (diagram.connectors[0] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[0] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[0] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[1] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[1] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[1] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[1] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[1] as Connector).intermediatePoints[2].x == 250 && (diagram.connectors[1] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[1] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[1] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[2] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[2] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[2] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[2] as Connector).intermediatePoints[1].y == 150 && (diagram.connectors[2] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[2] as Connector).intermediatePoints[2].y == 150 && (diagram.connectors[2] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[2] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[3] as Connector).intermediatePoints[0].x == 300 && (diagram.connectors[3] as Connector).intermediatePoints[0].y == 200 && (diagram.connectors[3] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[3] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[3] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[3] as Connector).intermediatePoints[2].y == 250 && (diagram.connectors[3] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[3] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[4] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[4] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[4] as Connector).intermediatePoints[1].x == 600 && (diagram.connectors[4] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[4] as Connector).intermediatePoints[2].x == 600 && (diagram.connectors[4] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[4] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[4] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[5] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[5] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[5] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[5] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[5] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[5] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[5] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[5] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[6] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[6] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[6] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[6] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[6] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[6] as Connector).intermediatePoints[2].y == 200 && (diagram.connectors[6] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[6] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[7] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[7] as Connector).intermediatePoints[0].y == 250 && (diagram.connectors[7] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[7] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[7] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[7] as Connector).intermediatePoints[2].y == 300 && (diagram.connectors[7] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[7] as Connector).intermediatePoints[3].y == 100).toBe(true);
            expect((diagram.connectors[8] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[8] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[8] as Connector).intermediatePoints[1].x == 300 && (diagram.connectors[8] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[8] as Connector).intermediatePoints[2].x == 300 && (diagram.connectors[8] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[8] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[8] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[9] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[9] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[9] as Connector).intermediatePoints[1].x == 200 && (diagram.connectors[9] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[9] as Connector).intermediatePoints[2].x == 200 && (diagram.connectors[9] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[9] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[9] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[10] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[10] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[10] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[10] as Connector).intermediatePoints[1].y == 350 && (diagram.connectors[10] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[10] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[10] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[10] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[11] as Connector).intermediatePoints[0].x == 250 && (diagram.connectors[11] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[11] as Connector).intermediatePoints[1].x == 250 && (diagram.connectors[11] as Connector).intermediatePoints[1].y == 450 && (diagram.connectors[11] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[11] as Connector).intermediatePoints[2].y == 450 && (diagram.connectors[11] as Connector).intermediatePoints[3].x == 100 && (diagram.connectors[11] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[12] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[12] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[12] as Connector).intermediatePoints[1].x == 600 && (diagram.connectors[12] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[12] as Connector).intermediatePoints[2].x == 600 && (diagram.connectors[12] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[12] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[12] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[13] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[13] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[13] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[13] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[13] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[13] as Connector).intermediatePoints[2].y == 500 && (diagram.connectors[13] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[13] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[14] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[14] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[14] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[14] as Connector).intermediatePoints[1].y == 350 && (diagram.connectors[14] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[14] as Connector).intermediatePoints[2].y == 350 && (diagram.connectors[14] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[14] as Connector).intermediatePoints[3].y == 500).toBe(true);
            expect((diagram.connectors[15] as Connector).intermediatePoints[0].x == 550 && (diagram.connectors[15] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[15] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[15] as Connector).intermediatePoints[1].y == 450 && (diagram.connectors[15] as Connector).intermediatePoints[2].x == 700 && (diagram.connectors[15] as Connector).intermediatePoints[2].y == 450 && (diagram.connectors[15] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[15] as Connector).intermediatePoints[3].y == 500).toBe(true);

            done();
        });

        it('Checking Orthogonal segment - Point to Point Interaction Direction(Top), (Drag terminal segment and Merging to terminal segment)', (done: Function) => {
            diagram.select([diagram.connectors[3]]);
            mouseEvents.dragAndDropEvent(diagramCanvas, 100 + diagram.element.offsetLeft, 170 + diagram.element.offsetTop, 50 + diagram.element.offsetLeft, 170 + diagram.element.offsetTop);
            expect((diagram.selectedItems.connectors[0] as Connector).intermediatePoints[0].x == 300 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[0].y == 200 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[1].x == 300 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[1].y == 250 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[2].x == 45 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[2].y == 250 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[3].x == 45 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[3].y == 150 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[4].x == 100 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[4].y == 150 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[5].x == 100 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[5].y == 100).toBe(true);
            mouseEvents.dragAndDropEvent(diagramCanvas, 50 + diagram.element.offsetLeft, 200 - diagram.element.offsetTop, 95 + diagram.element.offsetLeft, 200 - diagram.element.offsetTop);
            expect((diagram.selectedItems.connectors[0] as Connector).intermediatePoints[0].x == 300 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[0].y == 200 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[1].x == 300 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[1].y == 250 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[2].x == 100 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[2].y == 250 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[3].x == 100 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[3].y == 100).toBe(true);
            done();
        });

        it('Checking Orthogonal segment - Point to Point Interaction Direction(Right), (Drag terminal segment and Merging to terminal segment)', (done: Function) => {
            diagram.select([diagram.connectors[5]]);
            mouseEvents.dragAndDropEvent(diagramCanvas, 600 + diagram.element.offsetLeft, 100 + diagram.element.offsetTop, 600 + diagram.element.offsetLeft, 160 + diagram.element.offsetTop);
            expect((diagram.selectedItems.connectors[0] as Connector).intermediatePoints[0].x == 550 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[0].y == 250 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[1].x == 500 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[1].y == 250 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[2].x == 500 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[2].y == 163 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[3].x == 633.33 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[3].y == 163 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[4].x == 633.33 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[4].y == 100 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[5].x == 700 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[5].y == 100).toBe(true);
            mouseEvents.dragAndDropEvent(diagramCanvas, 570 + diagram.element.offsetLeft, 160 + diagram.element.offsetTop, 570 + diagram.element.offsetLeft, 95 + diagram.element.offsetTop);
            expect((diagram.selectedItems.connectors[0] as Connector).intermediatePoints[0].x == 550 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[0].y == 250 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[1].x == 500 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[1].y == 250 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[2].x == 500 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[2].y == 100 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[3].x == 700 && (diagram.selectedItems.connectors[0] as Connector).intermediatePoints[3].y == 100).toBe(true);
            done();
        });
    });

    describe('Conectors with segments - Straight Segment', () => {
        let ele: HTMLElement;
        let diagram: Diagram;
        let mouseEvents = new MouseEvents();
        beforeAll((): void => {
            ele = createElement('div', { id: 'diagramconnectorsegments' });
            document.body.appendChild(ele);

            let nodes: NodeModel[] = [
                { id: 'node1', offsetX: 100, offsetY: 300, width: 70, height: 70 },
                { id: 'node2', offsetX: 400, offsetY: 300, width: 70, height: 70, ports: [{ id: 'port1', offset: { x: 0.5, y: 1 } }] },
                { id: 'node3', offsetX: 700, offsetY: 300, width: 70, height: 70, ports: [{ id: 'port1', offset: { x: 0, y: 0.5 } }, { id: 'port2', offset: { x: 1, y: 0.5 } }] },
                { id: 'node4', offsetX: 900, offsetY: 300, width: 70, height: 70, ports: [{ id: 'port1', offset: { x: 0, y: 0.5 } }, { id: 'port2', offset: { x: 1, y: 0.5 } }] },
            ];
            let connectors: ConnectorModel[] = [
                //Point - Point (Single segment)
                {
                    id: 'connector1', type: 'Straight', sourcePoint: { x: 100, y: 100 }, targetPoint: { x: 200, y: 100 },
                    segments: [{ type: 'Straight', point: { x: 200, y: 50 } }],
                },
                //Point - Point (Multiple segment)
                {
                    id: 'connector2', type: 'Straight', sourcePoint: { x: 700, y: 100 }, targetPoint: { x: 900, y: 100 },
                    segments: [{ point: { x: 800, y: 50 } }, { point: { x: 800, y: 100 } }, { point: { x: 850, y: 50 } }],
                },
                //Node - Node(Single Segment)
                {
                    id: 'connector3', type: 'Straight', sourceID: 'node1', targetID: 'node2',
                    segments: [{ point: { x: 200, y: 250 } }]
                },
                //Node - Node(Multiple Segment)
                {
                    id: 'connector4', type: 'Straight', sourceID: 'node1', targetID: 'node2',
                    segments: [{ point: { x: 200, y: 320 } }, { point: { x: 220, y: 300 } }, { point: { x: 300, y: 320 } }]
                },
                //Node - Point(Single Segment)
                {
                    id: 'connector5', type: 'Straight', sourceID: 'node1', targetPoint: { x: 100, y: 150 },
                    segments: [{ point: { x: 50, y: 200 } }]
                },
                //Node - Point(Multiple Segment)
                {
                    id: 'connector6', type: 'Straight', sourceID: 'node1', targetPoint: { x: 300, y: 100 },
                    segments: [{ point: { x: 100, y: 250 } }, { point: { x: 200, y: 200 } }, { point: { x: 200, y: 300 } }]
                },
                //Point - Node(Single Segment)
                {
                    id: 'connector7', type: 'Straight', targetID: 'node1', sourcePoint: { x: 0, y: 300 },
                    segments: [{ point: { x: 30, y: 230 } }]
                },
                //Point - Node(Multiple Segment)
                {
                    id: 'connector8', type: 'Straight', targetID: 'node1', sourcePoint: { x: 0, y: 360 },
                    segments: [{ point: { x: 20, y: 360 } }, { point: { x: 20, y: 340 } }, { point: { x: 30, y: 350 } }]
                },
                //Port - Port(Single Segment) //{x: 665, y: 300}

                {
                    id: 'connector9', type: 'Straight', sourceID: 'node3', targetID: 'node4', sourcePortID: 'port1', targetPortID: 'port1',
                    segments: [{ point: { x: 600, y: 100 } }]
                },
                //Port - Port(Multiple Segment) {x: 865, y: 300}
                {
                    id: 'connector10', type: 'Straight', sourceID: 'node4', targetID: 'node3', sourcePortID: 'port1', targetPortID: 'port1',
                    segments: [{ point: { x: 800, y: 300 } }, { point: { x: 800, y: 240 } }, { point: { x: 700, y: 240 } }]
                },
                //Port - Node(Single Segment)
                {
                    id: 'connector11', type: 'Straight', sourceID: 'node3', targetID: 'node2', sourcePortID: 'port1',
                    segments: [{ point: { x: 500, y: 100 } }]
                },
                //Port - Node(Multiple Segment)
                {
                    id: 'connector12', type: 'Straight', sourceID: 'node3', targetID: 'node2', sourcePortID: 'port1',
                    segments: [{ point: { x: 500, y: 200 } }, { point: { x: 500, y: 240 } }, { point: { x: 600, y: 300 } }]
                },
                //Node - Port(Single Segment)
                {
                    id: 'connector13', type: 'Straight', sourceID: 'node1', targetID: 'node2', targetPortID: 'port1',
                    segments: [{ point: { x: 100, y: 380 } }]
                },
                //Node - Port(Multiple Segment)
                {
                    id: 'connector14', type: 'Straight', sourceID: 'node1', targetID: 'node2', targetPortID: 'port1',
                    segments: [{ point: { x: 50, y: 400 } }, { point: { x: 150, y: 400 } }, { point: { x: 380, y: 380 } }]
                },
                //Point - Port(Single Segment)
                {
                    id: 'connector15', type: 'Straight', sourcePoint: { x: 500, y: 400 }, targetID: 'node3', targetPortID: 'port2',
                    segments: [{ point: { x: 550, y: 400 } }]
                },
                //Point - Port(Multiple Segment)
                {
                    id: 'connector16', type: 'Straight', targetID: 'node3', targetPortID: 'port2', sourcePoint: { x: 700, y: 400 },
                    segments: [{ point: { x: 680, y: 400 } }, { point: { x: 680, y: 430 } }, { point: { x: 670, y: 430 } }]
                },

                //Port - Point(Single Segment)
                {
                    id: 'connector17', type: 'Straight', targetPoint: { x: 900, y: 400 }, sourceID: 'node4', sourcePortID: 'port2',
                    segments: [{ point: { x: 950, y: 400 } }]
                },
                //Port - Point(Multiple Segment)
                {
                    id: 'connector18', type: 'Straight', sourceID: 'node4', sourcePortID: 'port2', targetPoint: { x: 900, y: 120 },
                    segments: [{ point: { x: 980, y: 300 } }, { point: { x: 980, y: 200 } }, { point: { x: 900, y: 200 } }]
                },

            ];
            diagram = new Diagram({
                width: '1000px', height: '700px', nodes: nodes,
                connectors: connectors, 
                getConnectorDefaults: (obj: ConnectorModel, diagram: Diagram) => {
                    let connector: ConnectorModel = {};
                    connector.constraints = ConnectorConstraints.Default | ConnectorConstraints.DragSegmentThumb;
                    return connector;
                },
                snapSettings: { constraints: SnapConstraints.ShowLines }
            });
            diagram.appendTo('#diagramconnectorsegments');
        });
        afterAll((): void => {
            diagram.destroy();
            ele.remove();
        });

        it('Checking connectors single segment collection - straight(Single and multiple segment)', (done: Function) => {
            expect((diagram.connectors[0] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[0] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[0] as Connector).intermediatePoints[1].x == 200 && (diagram.connectors[0] as Connector).intermediatePoints[1].y == 50 && (diagram.connectors[0] as Connector).intermediatePoints[2].x == 200 && (diagram.connectors[0] as Connector).intermediatePoints[2].y == 100).toBe(true);
            expect((diagram.connectors[1] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[1] as Connector).intermediatePoints[0].y == 100 && (diagram.connectors[1] as Connector).intermediatePoints[1].x == 800 && (diagram.connectors[1] as Connector).intermediatePoints[1].y == 50 && (diagram.connectors[1] as Connector).intermediatePoints[2].x == 800 && (diagram.connectors[1] as Connector).intermediatePoints[2].y == 100 && (diagram.connectors[1] as Connector).intermediatePoints[3].x == 850 && (diagram.connectors[1] as Connector).intermediatePoints[3].y == 50 && (diagram.connectors[1] as Connector).intermediatePoints[4].x == 900 && (diagram.connectors[1] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[2] as Connector).intermediatePoints[0].x == 135 && (diagram.connectors[2] as Connector).intermediatePoints[0].y == 282.5 && (diagram.connectors[2] as Connector).intermediatePoints[1].x == 200 && (diagram.connectors[2] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[2] as Connector).intermediatePoints[2].x == 365 && (diagram.connectors[2] as Connector).intermediatePoints[2].y == 291.25).toBe(true);
            expect((diagram.connectors[3] as Connector).intermediatePoints[0].x == 135 && (diagram.connectors[3] as Connector).intermediatePoints[0].y == 307 && (diagram.connectors[3] as Connector).intermediatePoints[1].x == 200 && (diagram.connectors[3] as Connector).intermediatePoints[1].y == 320 && (diagram.connectors[3] as Connector).intermediatePoints[2].x == 220 && (diagram.connectors[3] as Connector).intermediatePoints[2].y == 300 && (diagram.connectors[3] as Connector).intermediatePoints[3].x == 300 && (diagram.connectors[3] as Connector).intermediatePoints[3].y == 320 && (diagram.connectors[3] as Connector).intermediatePoints[4].x == 365 && (diagram.connectors[3] as Connector).intermediatePoints[4].y == 307).toBe(true);
            expect((diagram.connectors[4] as Connector).intermediatePoints[0].x == 82.5 && (diagram.connectors[4] as Connector).intermediatePoints[0].y == 265 && (diagram.connectors[4] as Connector).intermediatePoints[1].x == 50 && (diagram.connectors[4] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[4] as Connector).intermediatePoints[2].x == 100 && (diagram.connectors[4] as Connector).intermediatePoints[2].y == 150).toBe(true);
            expect((diagram.connectors[5] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[5] as Connector).intermediatePoints[0].y == 265 && (diagram.connectors[5] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[5] as Connector).intermediatePoints[1].y == 250 && (diagram.connectors[5] as Connector).intermediatePoints[2].x == 200 && (diagram.connectors[5] as Connector).intermediatePoints[2].y == 200 && (diagram.connectors[5] as Connector).intermediatePoints[3].x == 200 && (diagram.connectors[5] as Connector).intermediatePoints[3].y == 300 && (diagram.connectors[5] as Connector).intermediatePoints[4].x == 300 && (diagram.connectors[5] as Connector).intermediatePoints[4].y == 100).toBe(true);
            expect((diagram.connectors[6] as Connector).intermediatePoints[0].x == 0 && (diagram.connectors[6] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[6] as Connector).intermediatePoints[1].x == 30 && (diagram.connectors[6] as Connector).intermediatePoints[1].y == 230 && (diagram.connectors[6] as Connector).intermediatePoints[2].x == 65 && (diagram.connectors[6] as Connector).intermediatePoints[2].y == 265).toBe(true);
            expect((diagram.connectors[7] as Connector).intermediatePoints[0].x == 0 && (diagram.connectors[7] as Connector).intermediatePoints[0].y == 360 && (diagram.connectors[7] as Connector).intermediatePoints[1].x == 20 && (diagram.connectors[7] as Connector).intermediatePoints[1].y == 360 && (diagram.connectors[7] as Connector).intermediatePoints[2].x == 20 && (diagram.connectors[7] as Connector).intermediatePoints[2].y == 340 && (diagram.connectors[7] as Connector).intermediatePoints[3].x == 30 && (diagram.connectors[7] as Connector).intermediatePoints[3].y == 350 && (diagram.connectors[7] as Connector).intermediatePoints[4].x == 65 && (diagram.connectors[7] as Connector).intermediatePoints[4].y == 325).toBe(true);
            expect((diagram.connectors[8] as Connector).intermediatePoints[0].x == 665 && (diagram.connectors[8] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[8] as Connector).intermediatePoints[1].x == 600 && (diagram.connectors[8] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[8] as Connector).intermediatePoints[2].x == 865 && (diagram.connectors[8] as Connector).intermediatePoints[2].y == 300).toBe(true);
            expect((diagram.connectors[9] as Connector).intermediatePoints[0].x == 865 && (diagram.connectors[9] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[9] as Connector).intermediatePoints[1].x == 800 && (diagram.connectors[9] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[9] as Connector).intermediatePoints[2].x == 800 && (diagram.connectors[9] as Connector).intermediatePoints[2].y == 240 && (diagram.connectors[9] as Connector).intermediatePoints[3].x == 700 && (diagram.connectors[9] as Connector).intermediatePoints[3].y == 240 && (diagram.connectors[9] as Connector).intermediatePoints[4].x == 665 && (diagram.connectors[9] as Connector).intermediatePoints[4].y == 300).toBe(true);
            expect((diagram.connectors[10] as Connector).intermediatePoints[0].x == 665 && (diagram.connectors[10] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[10] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[10] as Connector).intermediatePoints[1].y == 100 && (diagram.connectors[10] as Connector).intermediatePoints[2].x == 417.5 && (diagram.connectors[10] as Connector).intermediatePoints[2].y == 265).toBe(true);
            expect((diagram.connectors[11] as Connector).intermediatePoints[0].x == 665 && (diagram.connectors[11] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[11] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[11] as Connector).intermediatePoints[1].y == 200 && (diagram.connectors[11] as Connector).intermediatePoints[2].x == 500 && (diagram.connectors[11] as Connector).intermediatePoints[2].y == 240 && (diagram.connectors[11] as Connector).intermediatePoints[3].x == 600 && (diagram.connectors[11] as Connector).intermediatePoints[3].y == 300 && (diagram.connectors[11] as Connector).intermediatePoints[4].x == 435 && (diagram.connectors[11] as Connector).intermediatePoints[4].y == 300).toBe(true);
            expect((diagram.connectors[12] as Connector).intermediatePoints[0].x == 100 && (diagram.connectors[12] as Connector).intermediatePoints[0].y == 335 && (diagram.connectors[12] as Connector).intermediatePoints[1].x == 100 && (diagram.connectors[12] as Connector).intermediatePoints[1].y == 380 && (diagram.connectors[12] as Connector).intermediatePoints[2].x == 400 && (diagram.connectors[12] as Connector).intermediatePoints[2].y == 335).toBe(true);
            expect((diagram.connectors[13] as Connector).intermediatePoints[0].x == 82.5 && (diagram.connectors[13] as Connector).intermediatePoints[0].y == 335 && (diagram.connectors[13] as Connector).intermediatePoints[1].x == 50 && (diagram.connectors[13] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[13] as Connector).intermediatePoints[2].x == 150 && (diagram.connectors[13] as Connector).intermediatePoints[2].y == 400 && (diagram.connectors[13] as Connector).intermediatePoints[3].x == 380 && (diagram.connectors[13] as Connector).intermediatePoints[3].y == 380 && (diagram.connectors[13] as Connector).intermediatePoints[4].x == 400 && (diagram.connectors[13] as Connector).intermediatePoints[4].y == 335).toBe(true);
            expect((diagram.connectors[14] as Connector).intermediatePoints[0].x == 500 && (diagram.connectors[14] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[14] as Connector).intermediatePoints[1].x == 550 && (diagram.connectors[14] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[14] as Connector).intermediatePoints[2].x == 735 && (diagram.connectors[14] as Connector).intermediatePoints[2].y == 300).toBe(true);
            expect((diagram.connectors[15] as Connector).intermediatePoints[0].x == 700 && (diagram.connectors[15] as Connector).intermediatePoints[0].y == 400 && (diagram.connectors[15] as Connector).intermediatePoints[1].x == 680 && (diagram.connectors[15] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[15] as Connector).intermediatePoints[2].x == 680 && (diagram.connectors[15] as Connector).intermediatePoints[2].y == 430 && (diagram.connectors[15] as Connector).intermediatePoints[3].x == 670 && (diagram.connectors[15] as Connector).intermediatePoints[3].y == 430 && (diagram.connectors[15] as Connector).intermediatePoints[4].x == 735 && (diagram.connectors[15] as Connector).intermediatePoints[4].y == 300).toBe(true);
            expect((diagram.connectors[16] as Connector).intermediatePoints[0].x == 935 && (diagram.connectors[16] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[16] as Connector).intermediatePoints[1].x == 950 && (diagram.connectors[16] as Connector).intermediatePoints[1].y == 400 && (diagram.connectors[16] as Connector).intermediatePoints[2].x == 900 && (diagram.connectors[16] as Connector).intermediatePoints[2].y == 400).toBe(true);
            expect((diagram.connectors[17] as Connector).intermediatePoints[0].x == 935 && (diagram.connectors[17] as Connector).intermediatePoints[0].y == 300 && (diagram.connectors[17] as Connector).intermediatePoints[1].x == 980 && (diagram.connectors[17] as Connector).intermediatePoints[1].y == 300 && (diagram.connectors[17] as Connector).intermediatePoints[2].x == 980 && (diagram.connectors[17] as Connector).intermediatePoints[2].y == 200 && (diagram.connectors[17] as Connector).intermediatePoints[3].x == 900 && (diagram.connectors[17] as Connector).intermediatePoints[3].y == 200 && (diagram.connectors[17] as Connector).intermediatePoints[4].x == 900 && (diagram.connectors[17] as Connector).intermediatePoints[4].y == 120).toBe(true);
            done();
        });
    });

    describe('Conectors with segments - Bezier Segment', () => {
        let diagram: Diagram;
        let ele: HTMLElement;
        let mouseEvents: MouseEvents = new MouseEvents();
        beforeAll((): void => {
            ele = createElement('div', { id: 'diagramBezierSegment' });
            document.body.appendChild(ele);
            let nodes: NodeModel[] = [
                { id: 'node1', offsetX: 100, offsetY: 600, width: 100, height: 100, },
                { id: 'node2', offsetX: 400, offsetY: 600, width: 100, height: 100, },
                { id: 'node3', offsetX: 700, offsetY: 600, width: 100, height: 100, },
                { id: 'node4', offsetX: 900, offsetY: 600, width: 100, height: 100, },
                {
                    id: 'node5', offsetX: 100, offsetY: 900, width: 80, height: 80,
                    ports: [{ id: 'port1', offset: { x: 0, y: 0.5 } },
                    { id: 'port2', offset: { x: 0.5, y: 0 } },
                    { id: 'port3', offset: { x: 1, y: 0.5 } },
                    { id: 'port4', offset: { x: 0.5, y: 1 } }]
                },
                {
                    id: 'node6', offsetX: 400, offsetY: 900, width: 80, height: 80,
                    ports: [{ id: 'port1', offset: { x: 0, y: 0.5 } },
                    { id: 'port2', offset: { x: 0.5, y: 0 } },
                    { id: 'port3', offset: { x: 1, y: 0.5 } },
                    { id: 'port4', offset: { x: 0.5, y: 1 } }]
                },
                {
                    id: 'node7', offsetX: 700, offsetY: 900, width: 80, height: 80,
                    ports: [{ id: 'port1', offset: { x: 0, y: 0.5 } },
                    { id: 'port2', offset: { x: 0.5, y: 0 } },
                    { id: 'port3', offset: { x: 1, y: 0.5 } },
                    { id: 'port4', offset: { x: 0.5, y: 1 } }]
                },
                {
                    id: 'node8', offsetX: 900, offsetY: 900, width: 80, height: 80,
                    ports: [{ id: 'port1', offset: { x: 0, y: 0.5 } },
                    { id: 'port2', offset: { x: 0.5, y: 0 } },
                    { id: 'port3', offset: { x: 1, y: 0.5 } },
                    { id: 'port4', offset: { x: 0.5, y: 1 } }]
                },
            ];
            let connectors: ConnectorModel[] = [
                //Single Segment - Point
                {
                    id: 'connector1',
                    type: 'Bezier',
                    sourcePoint: { x: 100, y: 200 },
                    targetPoint: { x: 250, y: 400 },
                    segments: [
                        {
                            type: 'Bezier',
                            point: { x: 200, y: 300 }
                        }
                    ]
                },
                //Single Segment - Vector
                {
                    id: 'connector2',
                    type: 'Bezier',
                    sourcePoint: { x: 250, y: 230 },
                    targetPoint: { x: 450, y: 200 },
                    segments: [{
                        type: 'Bezier',
                        point: { x: 400, y: 300 },
                        vector1: { angle: 90, distance: 75 },
                        vector2: { angle: 90, distance: 75 }
                    }]
                },
                // Single Segment - Point1, point2
                {
                    id: 'connector3',
                    type: 'Bezier',
                    sourcePoint: { x: 500, y: 200 },
                    targetPoint: { x: 700, y: 200 },
                    segments: [{
                        type: 'Bezier',
                        point: { x: 600, y: 300 },
                        point1: { x: 525, y: 475 },
                        point2: { x: 575, y: 475 },
                    }]
                },
                //Multiple Segment - Point
                {
                    id: 'connector4',
                    type: 'Bezier',
                    sourcePoint: { x: 800, y: 200 },
                    targetPoint: { x: 980, y: 250 },
                    segments: [
                        {
                            type: 'Bezier',
                            point: { x: 840, y: 230 }
                        },
                        {
                            type: 'Bezier',
                            point: { x: 900, y: 300 }
                        },
                        {
                            type: 'Bezier',
                            point: { x: 960, y: 340 }
                        }
                    ]
                },
                //Multiple Segment - Vector
                {
                    id: 'connector5',
                    type: 'Bezier',
                    sourcePoint: { x: 800, y: 100 },
                    targetPoint: { x: 1150, y: 350 },
                    segments: [{
                        type: 'Bezier',
                        point: { x: 900, y: 160 },
                        vector1: { angle: 20, distance: 75 },
                        vector2: { angle: 20, distance: 75 }
                    },
                    {
                        type: 'Bezier',
                        point: { x: 1000, y: 220 },
                        vector1: { angle: 20, distance: 75 },
                        vector2: { angle: 20, distance: 75 }
                    },
                    {
                        type: 'Bezier',
                        point: { x: 1100, y: 280 },
                        vector1: { angle: 20, distance: 75 },
                        vector2: { angle: 20, distance: 75 }
                    }]
                },
                //Multiple Segment - Point1, Point2
                {
                    id: 'connector6',
                    type: 'Bezier',
                    sourcePoint: { x: 0, y: 100 },
                    targetPoint: { x: 400, y: 150 },
                    segments: [{
                        type: 'Bezier',
                        point: { x: 100, y: 100 },
                        point1: { x: 25, y: 75 },
                        point2: { x: 75, y: 75 },
                    },
                    {
                        type: 'Bezier',
                        point: { x: 200, y: 100 },
                        point1: { x: 125, y: 75 },
                        point2: { x: 175, y: 75 },
                    },
                    {
                        type: 'Bezier',
                        point: { x: 300, y: 100 },
                        point1: { x: 225, y: 75 },
                        point2: { x: 275, y: 75 },
                    }]
                },
                //Node - Node(Point)
                {
                    id: 'connector7',
                    type: 'Bezier',
                    sourceID: 'node1', targetID: 'node2',
                    // sourcePoint: { x: 100, y: 200 },
                    // targetPoint: { x: 250, y: 400 },
                    segments: [
                        {
                            type: 'Bezier',
                            point: { x: 150, y: 500 }
                        },
                        {
                            type: 'Bezier',
                            point: { x: 220, y: 560 }
                        }
                    ]
                },
                //Node - Node(Vector)
                {
                    id: 'connector8',
                    type: 'Bezier',
                    sourceID: 'node2', targetID: 'node1',
                    //     sourcePoint: { x: 250, y: 230 },
                    //     targetPoint: { x: 450, y: 200 },
                    segments: [{
                        type: 'Bezier',
                        point: { x: 280, y: 690 },
                        vector1: { angle: 90, distance: 75 },
                        vector2: { angle: 90, distance: 75 }
                    },
                    {
                        type: 'Bezier',
                        point: { x: 180, y: 650 },
                        vector1: { angle: 90, distance: 75 },
                        vector2: { angle: 90, distance: 75 }
                    }]
                },
                //Node - Node(Point1, Point2)
                {
                    id: 'connector9',
                    type: 'Bezier',
                    sourceID: 'node2', targetID: 'node3',
                    segments: [{
                        type: 'Bezier',
                        point: { x: 500, y: 500 },
                        point1: { x: 420, y: 475 },
                        point2: { x: 470, y: 475 },
                    },
                    {
                        type: 'Bezier',
                        point: { x: 550, y: 550 },
                        point1: { x: 520, y: 575 },
                        point2: { x: 570, y: 575 },
                    }]
                },
            ];

            diagram = new Diagram({
                width: 1000, height: 1000, nodes: nodes,
                connectors: connectors, 
                getConnectorDefaults: (obj: ConnectorModel, diagram: Diagram) => {
                    let connector: ConnectorModel = {};
                    connector.constraints = ConnectorConstraints.Default | ConnectorConstraints.DragSegmentThumb;
                    return connector;
                },
                snapSettings: { constraints: SnapConstraints.ShowLines }
            });
            diagram.appendTo('#diagramBezierSegment');
        });
        afterAll((): void => {
            diagram.destroy();
            ele.remove();
        });
        it('Checking bezier curve - Multiple Segment', function (done) {
            expect(((diagram.connectors[0]).wrapper.children[0] as PathElement).data === 'M100 200C100 245 200 255 200 300C200 344.7975 249.78 354.7525 250 399.5').toBe(true);
            expect(((diagram.connectors[1]).wrapper.children[0] as PathElement).data === 'M250 230C250 305 400 375 400 300C400 255.2025 449.78 245.2475 450 200.5').toBe(true);
            expect(((diagram.connectors[2]).wrapper.children[0] as PathElement).data === 'M500 200C525 475 575 475 600 300C600 255.1575 699.65 245.1925 700 200.5').toBe(true);
            expect(((diagram.connectors[3]).wrapper.children[0] as PathElement).data === 'M800 200C818 200 822 230 840 230C840 261.5 900 268.5 900 300C927 300 933 340 960 340C960 299.7205 979.89 290.7695 980 250.5').toBe(true);
            expect(((diagram.connectors[4]).wrapper.children[0] as PathElement).data === 'M800 100C870.48 125.65 970.48 185.65 900 160C970.48 185.65 1070.48 245.65 1000 220C1070.48 245.65 1170.48 305.65 1100 280C1100 311.3155 1149.71 318.2745 1150 349.5').toBe(true);
            expect(((diagram.connectors[5]).wrapper.children[0] as PathElement).data === 'M0 100C25 75 75 75 100 100C125 75 175 75 200 100C225 75 275 75 300 100C344.7975 100 354.7525 149.78 399.5 150').toBe(true);
            expect(((diagram.connectors[6]).wrapper.children[0] as PathElement).data === 'M125 550C125 527.5 138.75 500 150 500C150 473 188.5 560 220 560C278.2795 560 291.2305 588.89 349.5 589').toBe(true);
            expect(((diagram.connectors[7]).wrapper.children[0] as PathElement).data === 'M400 650C400 725 280 765 280 690C280 765 180 725 180 650C166.689 650 163.731 631.27 150.5 631.01').toBe(true);
            expect(((diagram.connectors[8]).wrapper.children[0] as PathElement).data === 'M450 550C420 475 470 475 500 500C520 575 570 575 550 550C594.7885 550 604.7415 582.84 649.5 583').toBe(true);
            done();
        });
    });
    describe('Conectors Constraints - remove drag source end and drag target end', () => {
        let diagram: Diagram;
        let ele: HTMLElement;
        let mouseEvents: MouseEvents = new MouseEvents();
        let diagramCanvas: HTMLElement;
        beforeAll((): void => {
            ele = createElement('div', { id: 'diagramRemoveDragSourceAndTargetEnd' });
            document.body.appendChild(ele);
            let connectors: ConnectorModel[] = [
                {
                    id: 'connector1',
                    type: 'Bezier',
                    sourcePoint: { x: 100, y: 100 },
                    targetPoint: { x: 300, y: 300 },
                    segments: [
                        {
                            type: 'Bezier',
                            point: { x: 200, y: 200 }
                        }
                    ]
                },
                {
                    id: 'connector2',
                    type: 'Straight',
                    sourcePoint: { x: 300, y: 100 },
                    targetPoint: { x: 400, y: 100 },
                    segments: [{
                        type: 'Straight',
                        point: { x: 350, y: 250 },
                    }]
                },
                {
                    id: 'connector3',
                    type: 'Orthogonal',
                    sourcePoint: { x: 500, y: 100 },
                    targetPoint: { x: 600, y: 200 },
                    segments: [{
                        type: 'Orthogonal',
                        length: 20,
                        direction: 'Bottom'
                    }]
                },
            ];

            diagram = new Diagram({
                width: 1000, height: 1000,
                connectors: connectors, 
                getConnectorDefaults: (obj: ConnectorModel) => {
                    let connector: ConnectorModel = {};
                    connector.constraints = (ConnectorConstraints.Default & ~ConnectorConstraints.DragSourceEnd & ~ConnectorConstraints.DragTargetEnd) | ConnectorConstraints.DragSegmentThumb;
                    return connector;
                },
                snapSettings: { constraints: SnapConstraints.ShowLines }
            });
            diagram.appendTo('#diagramRemoveDragSourceAndTargetEnd');
            diagramCanvas = document.getElementById(diagram.element.id + 'content');
        });
        afterAll((): void => {
            diagram.destroy();
            ele.remove();
        });
        it('Checking bezier - segment point editing when drag source end and drag target end constraints remove', function (done) {
            mouseEvents.clickEvent(diagramCanvas, 10 + diagram.element.offsetLeft, 10 + diagram.element.offsetTop);
            diagram.select([diagram.connectors[0]]);
            mouseEvents.dragAndDropEvent(diagramCanvas, 200 + diagram.element.offsetLeft, 200 + diagram.element.offsetTop, 200 + diagram.element.offsetLeft, 100 + diagram.element.offsetTop);
            expect((diagram.connectors[0] as Connector).intermediatePoints[1].x == 200 && (diagram.connectors[0] as Connector).intermediatePoints[1].y == 100 + diagram.element.offsetTop).toBe(true);
            done();
        });
        it('Checking Straight - segment point editing when drag source end and drag target end constraints remove', function (done) {
            diagram.select([diagram.connectors[1]]);
            mouseEvents.dragAndDropEvent(diagramCanvas, 350 + diagram.element.offsetLeft, 250 + diagram.element.offsetTop, 350 + diagram.element.offsetLeft, 200 + diagram.element.offsetTop);
            expect((diagram.connectors[1] as Connector).intermediatePoints[1].x == 350 && (diagram.connectors[1] as Connector).intermediatePoints[1].y == 200 + diagram.element.offsetTop).toBe(true);
            done();
        });
        it('Checking Orthogonal - segment point editing when drag source end and drag target end constraints remove', function (done) {
            diagram.select([diagram.connectors[2]]);
            mouseEvents.dragAndDropEvent(diagramCanvas, 550 + diagram.element.offsetLeft, 120 + diagram.element.offsetTop, 550 + diagram.element.offsetLeft, 300 + diagram.element.offsetTop);
            expect((diagram.connectors[2] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[2] as Connector).intermediatePoints[1].y == 300 + diagram.element.offsetTop &&
                (diagram.connectors[2] as Connector).intermediatePoints[2].x == 600 && (diagram.connectors[2] as Connector).intermediatePoints[2].y == 300 + diagram.element.offsetTop).toBe(true);
            done();
        });
    });
    describe('Conectors Constraints - remove drag segment thumb', () => {
        let diagram: Diagram;
        let ele: HTMLElement;
        let mouseEvents: MouseEvents = new MouseEvents();
        let diagramCanvas: HTMLElement;
        beforeAll((): void => {
            ele = createElement('div', { id: 'diagramRemoveDragSegmentThumb' });
            document.body.appendChild(ele);
            let connectors: ConnectorModel[] = [
                {
                    id: 'connector1',
                    type: 'Bezier',
                    sourcePoint: { x: 100, y: 100 },
                    targetPoint: { x: 300, y: 300 },
                    segments: [
                        {
                            type: 'Bezier',
                            point: { x: 200, y: 200 }
                        }
                    ]
                },
                {
                    id: 'connector2',
                    type: 'Straight',
                    sourcePoint: { x: 300, y: 100 },
                    targetPoint: { x: 400, y: 100 },
                    segments: [{
                        type: 'Straight',
                        point: { x: 350, y: 250 },
                    }]
                },
                {
                    id: 'connector3',
                    type: 'Orthogonal',
                    sourcePoint: { x: 500, y: 100 },
                    targetPoint: { x: 600, y: 200 },
                    segments: [{
                        type: 'Orthogonal',
                        length: 20,
                        direction: 'Bottom'
                    }]
                },
            ];

            diagram = new Diagram({
                width: 1000, height: 1000,
                connectors: connectors, 
                getConnectorDefaults: (obj: ConnectorModel) => {
                    let connector: ConnectorModel = {};
                    connector.constraints = ConnectorConstraints.Default;
                    return connector;
                },
                snapSettings: { constraints: SnapConstraints.ShowLines }
            });
            diagram.appendTo('#diagramRemoveDragSegmentThumb');
            diagramCanvas = document.getElementById(diagram.element.id + 'content');
        });
        afterAll((): void => {
            diagram.destroy();
            ele.remove();
        });
        it('Checking bezier - segment point editing when drag segmrnt thumb constraints remove', function (done) {
            mouseEvents.clickEvent(diagramCanvas, 10 + diagram.element.offsetLeft, 10 + diagram.element.offsetTop);
            diagram.select([diagram.connectors[0]]);
            mouseEvents.dragAndDropEvent(diagramCanvas, 200 + diagram.element.offsetLeft, 200 + diagram.element.offsetTop, 200 + diagram.element.offsetLeft, 100 + diagram.element.offsetTop);
            expect((diagram.connectors[0] as Connector).intermediatePoints[1].x == 200 && (diagram.connectors[0] as Connector).intermediatePoints[1].y == 100).toBe(true);
            done();
        });
        it('Checking Straight - segment point editing when drag segmrnt thumb constraints remove', function (done) {
            diagram.select([diagram.connectors[1]]);
            mouseEvents.dragAndDropEvent(diagramCanvas, 350 + diagram.element.offsetLeft, 250 + diagram.element.offsetTop, 350 + diagram.element.offsetLeft, 200 + diagram.element.offsetTop);
            expect((diagram.connectors[1] as Connector).intermediatePoints[1].x == 350 && (diagram.connectors[1] as Connector).intermediatePoints[1].y == 250).toBe(true);
            done();
        });
        it('Checking Orthogonal - segment point editing when drag segmrnt thumb constraints remove', function (done) {
            diagram.select([diagram.connectors[2]]);
            mouseEvents.dragAndDropEvent(diagramCanvas, 550 + diagram.element.offsetLeft, 120 + diagram.element.offsetTop, 550 + diagram.element.offsetLeft, 300 + diagram.element.offsetTop);
            expect((diagram.connectors[2] as Connector).intermediatePoints[1].x == 500 && (diagram.connectors[2] as Connector).intermediatePoints[1].y == 300 &&
                (diagram.connectors[2] as Connector).intermediatePoints[2].x == 600 && (diagram.connectors[2] as Connector).intermediatePoints[2].y == 300).toBe(true);
            done();
        });
    });
    describe('Conectors Segments - Ortho node to node connection', () => {
        let diagram: Diagram;
        let ele: HTMLElement;
        let mouseEvents: MouseEvents = new MouseEvents();
        let diagramCanvas: HTMLElement;
        beforeAll((): void => {
            ele = createElement('div', { id: 'diagramOrthoNodeToNode' });
            document.body.appendChild(ele);
            diagram = new Diagram({
                width: 1000, height: 1000,
                nodes: [{ id: 'node1', offsetX: 307.5, offsetY: 211.5, width: 237, height: 213, },
                {
                    id: 'node2', offsetX: 572, offsetY: 142, width: 50, height: 50,
                }
                ],
                connectors: [{
                    id: 'connector1', sourceID: 'node1', targetID: 'node2', type: 'Orthogonal',
                    segments: [{ type: 'Orthogonal', direction: 'Right', length: 80 },
                    { type: 'Orthogonal', direction: 'Bottom', length: 89.5 },
                    { type: 'Orthogonal', direction: 'Right', length: 131 },
                    { type: 'Orthogonal', direction: 'Top', length: 114 },]
                },
                {
                    id: 'connector2', sourceID: 'node1', targetPoint: { x: 20, y: 60 }, type: 'Orthogonal',
                    segments: [{ type: 'Orthogonal', direction: 'Top', length: 80 },
                    { type: 'Orthogonal', direction: 'Left', length: 70 },
                    { type: 'Orthogonal', direction: 'Top', length: 9 },]
                }],
                getConnectorDefaults: (obj: ConnectorModel) => {
                    let connector: ConnectorModel = {};
                    connector.constraints = ConnectorConstraints.Default | ConnectorConstraints.DragSegmentThumb;
                    return connector;
                },
                snapSettings: { constraints: SnapConstraints.ShowLines }
            });
            diagram.appendTo('#diagramOrthoNodeToNode');
            diagramCanvas = document.getElementById(diagram.element.id + 'content');
        });
        afterAll((): void => {
            diagram.destroy();
            ele.remove();
        });
        it('Checking Orthogonal - when drag segment thumb less node width or node height', function(done) {
            
            let mouseEvents: MouseEvents = new MouseEvents();
            mouseEvents.clickEvent(diagramCanvas, 10 + diagram.element.offsetLeft, 10 + diagram.element.offsetTop);
            diagram.select([diagram.connectors[0]]);
            let startX = (diagram.connectors[0] as Connector).intermediatePoints[1].x;
            let startY = ((diagram.connectors[0] as Connector).intermediatePoints[1].y + (diagram.connectors[0] as Connector).intermediatePoints[2].y) / 2;
            expect((diagram.connectors[0] as Connector).intermediatePoints[0].x == 426 && (diagram.connectors[0] as Connector).intermediatePoints[0].y == 211.5 && (diagram.connectors[0] as Connector).intermediatePoints[1].x == 506 && (diagram.connectors[0] as Connector).intermediatePoints[1].y == 211.5 && (diagram.connectors[0] as Connector).intermediatePoints[2].x == 506 && (diagram.connectors[0] as Connector).intermediatePoints[2].y == 301 && (diagram.connectors[0] as Connector).intermediatePoints[3].x == 637 && (diagram.connectors[0] as Connector).intermediatePoints[3].y == 301 && (diagram.connectors[0] as Connector).intermediatePoints[4].x == 637 && (diagram.connectors[0] as Connector).intermediatePoints[4].y == 187 && (diagram.connectors[0] as Connector).intermediatePoints[5].x == 572 && (diagram.connectors[0] as Connector).intermediatePoints[5].y == 187 && (diagram.connectors[0] as Connector).intermediatePoints[6].x == 572 && (diagram.connectors[0] as Connector).intermediatePoints[6].y == 167).toBe(true);
            mouseEvents.clickEvent(diagramCanvas, startX + diagram.element.offsetLeft, startY + diagram.element.offsetTop);
            mouseEvents.dragAndDropEvent(diagramCanvas, startX + diagram.element.offsetLeft, startY + diagram.element.offsetTop, (startX - 200) + diagram.element.offsetLeft, startY + diagram.element.offsetTop);
            expect((diagram.connectors[0] as Connector).intermediatePoints.length == 6 && (diagram.connectors[0] as Connector).intermediatePoints[0].x == 307.5 && (diagram.connectors[0] as Connector).intermediatePoints[0].y == 318 && (diagram.connectors[0] as Connector).intermediatePoints[1].x == 307.5 && (diagram.connectors[0] as Connector).intermediatePoints[1].y == 338 && (diagram.connectors[0] as Connector).intermediatePoints[2].x == 637 && (diagram.connectors[0] as Connector).intermediatePoints[2].y == 338 && (diagram.connectors[0] as Connector).intermediatePoints[3].x == 637 && (diagram.connectors[0] as Connector).intermediatePoints[3].y == 187 && (diagram.connectors[0] as Connector).intermediatePoints[4].x == 572 && (diagram.connectors[0] as Connector).intermediatePoints[4].y == 187).toBe(true);
            diagram.select([diagram.connectors[1]]);
            startX = ((diagram.connectors[1] as Connector).intermediatePoints[1].x + (diagram.connectors[1] as Connector).intermediatePoints[2].x) / 2;
            startY = ((diagram.connectors[1] as Connector).intermediatePoints[1].y);
            expect((diagram.connectors[1] as Connector).intermediatePoints[0].x == 307.5 && (diagram.connectors[1] as Connector).intermediatePoints[0].y == 105 && (diagram.connectors[1] as Connector).intermediatePoints[1].x == 307.5 && (diagram.connectors[1] as Connector).intermediatePoints[1].y == 25 && (diagram.connectors[1] as Connector).intermediatePoints[2].x == 237.5 && (diagram.connectors[1] as Connector).intermediatePoints[2].y == 25 && (diagram.connectors[1] as Connector).intermediatePoints[3].x == 237.5 && (diagram.connectors[1] as Connector).intermediatePoints[3].y == 16 && (diagram.connectors[1] as Connector).intermediatePoints[4].x == 20 && (diagram.connectors[1] as Connector).intermediatePoints[4].y == 16 && (diagram.connectors[1] as Connector).intermediatePoints[5].x == 20 && (diagram.connectors[1] as Connector).intermediatePoints[5].y == 60).toBe(true);
            mouseEvents.clickEvent(diagramCanvas, startX + diagram.element.offsetLeft, startY + diagram.element.offsetTop);
            mouseEvents.dragAndDropEvent(diagramCanvas, startX + diagram.element.offsetLeft, startY + diagram.element.offsetTop, startX + diagram.element.offsetLeft, (startY + 80) + diagram.element.offsetTop);
            expect((diagram.connectors[1] as Connector).intermediatePoints.length == 5 && (diagram.connectors[1] as Connector).intermediatePoints[0].x == 189 && (diagram.connectors[1] as Connector).intermediatePoints[0].y == 211.5 && (diagram.connectors[1] as Connector).intermediatePoints[1].x == 169 && (diagram.connectors[1] as Connector).intermediatePoints[1].y == 211.5 && (diagram.connectors[1] as Connector).intermediatePoints[2].x == 169 && (diagram.connectors[1] as Connector).intermediatePoints[2].y == 16 && (diagram.connectors[1] as Connector).intermediatePoints[3].x == 20 && (diagram.connectors[1] as Connector).intermediatePoints[3].y == 16).toBe(true);
            done();
        });

    });

    describe('Connectors Segments - Change source point', () => {
        let diagram: Diagram;
        let ele: HTMLElement;
        let mouseEvents: MouseEvents = new MouseEvents();
        let diagramCanvas: HTMLElement;
        beforeAll((): void => {
            ele = createElement('div', { id: 'diagramOrthoChangeSourcePoint' });
            document.body.appendChild(ele);
            diagram = new Diagram({
                width: 1000, height: 1000,
                nodes: [{
                    id: 'node1', offsetX: 400, offsetY: 300, width: 160, height: 60, ports: [{ id: 'port1', offset: { x: 0, y: 0.5 } },
                    { id: 'port2', offset: { x: 0.5, y: 0 } },
                    { id: 'port3', offset: { x: 1, y: 0.5 } },
                    { id: 'port4', offset: { x: 0.5, y: 1 } }]
                },
                {
                    id: 'node2', offsetX: 572, offsetY: 142, width: 50, height: 50, ports: [{ id: 'port1', offset: { x: 0, y: 0.5 } },
                    { id: 'port2', offset: { x: 0.5, y: 0 } },
                    { id: 'port3', offset: { x: 1, y: 0.5 } },
                    { id: 'port4', offset: { x: 0.5, y: 1 } }]
                }
                ],
                connectors: [
                    {
                        id: 'connector1', sourcePoint: { x: 320, y: 300 }, targetPoint: { x: 200, y: 100 }, type: 'Orthogonal',
                        segments: [{ type: 'Orthogonal', direction: 'Top', length: 100 },
                        { type: 'Orthogonal', direction: 'Left', length: 120 },]
                    },
                    {
                        id: 'connector2', sourcePoint: { x: 572, y: 40 }, targetPoint: { x: 600, y: 300 }, type: 'Orthogonal',
                        segments: [{ type: 'Orthogonal', direction: 'Bottom', length: 200 },
                        { type: 'Orthogonal', direction: 'Right', length: 120 },]
                    },
                    {
                        id: 'connector3', sourcePoint: { x: 400, y: 142 }, targetPoint: { x: 600, y: 100 }, type: 'Orthogonal',
                        segments: [{ type: 'Orthogonal', direction: 'Right', length: 260 },
                        { type: 'Orthogonal', direction: 'Top', length: 120 },]
                    }
                ],
                getConnectorDefaults: (obj: ConnectorModel) => {
                    let connector: ConnectorModel = {};
                    connector.constraints = ConnectorConstraints.Default | ConnectorConstraints.DragSegmentThumb;
                    return connector;
                },
                snapSettings: { constraints: SnapConstraints.ShowLines }
            });
            diagram.appendTo('#diagramOrthoChangeSourcePoint');
            diagramCanvas = document.getElementById(diagram.element.id + 'content');
        });
        afterAll((): void => {
            diagram.destroy();
            ele.remove();
        });
        it('Checking source point to port, port to node, node to port', function(done) {
            
            let mouseEvents: MouseEvents = new MouseEvents();
            mouseEvents.clickEvent(diagramCanvas, 10 + diagram.element.offsetLeft, 10 + diagram.element.offsetTop);
            diagram.select([diagram.connectors[0]]);
            let startX = (diagram.connectors[0] as Connector).sourcePoint.x;
            let startY = (diagram.connectors[0] as Connector).sourcePoint.y;
            mouseEvents.mouseDownEvent(diagramCanvas, startX + diagram.element.offsetLeft, startY + diagram.element.offsetTop);
            mouseEvents.mouseMoveEvent(diagramCanvas, startX + 1 + diagram.element.offsetLeft, diagram.nodes[0].offsetY);
            expect(diagram.connectors[0].sourceID == 'node1' && diagram.connectors[0].sourcePortID == 'port1').toBe(true);
            mouseEvents.mouseMoveEvent(diagramCanvas, diagram.nodes[0].offsetX + diagram.element.offsetLeft, diagram.nodes[0].offsetY);
            mouseEvents.mouseMoveEvent(diagramCanvas, diagram.nodes[0].offsetX, diagram.nodes[0].offsetY);
            expect(diagram.connectors[0].sourceID == 'node1' && diagram.connectors[0].sourcePortID == '').toBe(true);
            mouseEvents.mouseMoveEvent(diagramCanvas, diagram.nodes[0].offsetX + diagram.element.offsetLeft, diagram.nodes[0].offsetY + diagram.nodes[0].height / 2 + diagram.element.offsetTop);
            mouseEvents.mouseMoveEvent(diagramCanvas, diagram.nodes[0].offsetX + diagram.element.offsetLeft, diagram.nodes[0].offsetY + diagram.nodes[0].height / 2);
            expect(diagram.connectors[0].sourceID == 'node1' && diagram.connectors[0].sourcePortID == 'port4').toBe(true);
            mouseEvents.mouseUpEvent(diagramCanvas, diagram.nodes[0].offsetX + diagram.element.offsetLeft, diagram.nodes[0].offsetY + diagram.nodes[0].height / 2);
            startX = diagram.connectors[0].sourcePoint.x;
            startY = diagram.connectors[0].sourcePoint.y;
            mouseEvents.mouseDownEvent(diagramCanvas, startX + diagram.element.offsetLeft, startY + diagram.element.offsetTop);
            mouseEvents.mouseMoveEvent(diagramCanvas, startX + 1 + diagram.element.offsetLeft, diagram.nodes[0].offsetY);
            mouseEvents.mouseMoveEvent(diagramCanvas, diagram.nodes[0].offsetX + diagram.nodes[0].width / 2 + diagram.element.offsetLeft, diagram.nodes[0].offsetY + diagram.nodes[0].height / 2 + diagram.element.offsetTop);
            mouseEvents.mouseMoveEvent(diagramCanvas, diagram.nodes[0].offsetX + diagram.nodes[0].width / 2 + diagram.element.offsetLeft, diagram.nodes[0].offsetY);
            expect(diagram.connectors[0].sourceID == 'node1' && diagram.connectors[0].sourcePortID == 'port3').toBe(true);
            mouseEvents.mouseMoveEvent(diagramCanvas, diagram.nodes[0].offsetX + diagram.element.offsetLeft, diagram.nodes[0].offsetY - diagram.nodes[0].height / 2);
            expect(diagram.connectors[0].sourceID == 'node1' && diagram.connectors[0].sourcePortID == 'port2').toBe(true);
            mouseEvents.mouseMoveEvent(diagramCanvas, diagram.nodes[0].offsetX + diagram.element.offsetLeft, diagram.nodes[0].offsetY - diagram.nodes[0].height / 2 + diagram.element.offsetTop);
            expect(diagram.connectors[0].sourceID == 'node1' && diagram.connectors[0].sourcePortID == '').toBe(true);
            mouseEvents.mouseUpEvent(diagramCanvas, diagram.nodes[0].offsetX + diagram.element.offsetLeft, diagram.nodes[0].offsetY + diagram.nodes[0].height / 2);
            done();
        });

        it('Checking source point to port (Opposite direction)', function(done) {
            let mouseEvents: MouseEvents = new MouseEvents();
            mouseEvents.clickEvent(diagramCanvas, 10 + diagram.element.offsetLeft, 10 + diagram.element.offsetTop);
            diagram.select([diagram.connectors[1]]);
            let startX = (diagram.connectors[1] as Connector).sourcePoint.x;
            let startY = (diagram.connectors[1] as Connector).sourcePoint.y;
            mouseEvents.mouseDownEvent(diagramCanvas, startX + diagram.element.offsetLeft, startY + diagram.element.offsetTop);
            mouseEvents.mouseMoveEvent(diagramCanvas, diagram.nodes[1].offsetX + diagram.element.offsetLeft, diagram.nodes[1].offsetY - diagram.nodes[1].height / 2 );
            expect(diagram.connectors[1].sourceID == 'node2' && diagram.connectors[1].sourcePortID == 'port2').toBe(true);
            mouseEvents.mouseUpEvent(diagramCanvas, diagram.nodes[1].offsetX + diagram.element.offsetLeft, diagram.nodes[1].offsetY + diagram.nodes[1].height / 2);
             diagram.select([diagram.connectors[2]]);
            startX = (diagram.connectors[2] as Connector).sourcePoint.x;
            startY = (diagram.connectors[2] as Connector).sourcePoint.y;
            mouseEvents.mouseDownEvent(diagramCanvas, startX + diagram.element.offsetLeft, startY + diagram.element.offsetTop);
            mouseEvents.mouseMoveEvent(diagramCanvas, diagram.nodes[1].offsetX - diagram.nodes[1].width/2 + 4, diagram.nodes[1].offsetY);
            expect(diagram.connectors[2].sourceID == 'node2' && diagram.connectors[2].sourcePortID == 'port1').toBe(true);
            mouseEvents.mouseUpEvent(diagramCanvas, diagram.nodes[1].offsetX + diagram.element.offsetLeft, diagram.nodes[1].offsetY + diagram.nodes[1].height / 2);
            done();
        });

    });

});