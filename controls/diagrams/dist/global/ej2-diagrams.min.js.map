{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/objects/tooltip.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/connector.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/ruler/ruler.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/appearance.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/interaction/selector.js","../../src/diagram/core/elements/html-element.js","../../src/diagram/objects/node.js","../../src/ruler/ruler.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n        }\n    }\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper);\n    var targetSegment = createSegmentsCollection(targetWrapper);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix } from '../primitives/matrix';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription) {\n        annotation.id = annotation.id || randomId();\n        var textele = new TextElement();\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.content = annotation.content;\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        textele.style.textOverflow = 'Wrap';\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        textElement.refreshTextElement();\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function getPoints(element, corners) {\n    var line = [];\n    line.push(corners.topLeft);\n    line.push(corners.topRight);\n    line.push(corners.bottomRight);\n    line.push(corners.bottomLeft);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    dataObj.selectedItems.nodes = [];\n    dataObj.selectedItems.connectors = [];\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                style.gradient = changedObject.gradient;\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_groupElement', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                this.arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return nodes[i];\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    bounds.height = childNodes.length * text.style.fontSize;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n// /** @private */\n// export function getDiagramLayer(diagramId: string): SVGElement {\n//     let diagramLayer: SVGElement;\n//     let diagramLayerSvg: SVGSVGElement = getDiagramLayerSvg(diagramId);\n//     diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer') as SVGElement;\n//     return diagramLayer;\n// }\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'wrapper') {\n                var constructorId = 'constructor';\n                var name_1 = 'name';\n                var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                if (!isEventEmmitter) {\n                    if (obj[property] instanceof Array) {\n                        newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                        newObject[property] = obj[property].cloneNode(true).innerHtml;\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                        newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                    }\n                    else {\n                        newObject[property] = obj[property];\n                    }\n                }\n            }\n            else {\n                if (obj[property]) {\n                    newObject[property] = {\n                        actualSize: {\n                            width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                        }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                    };\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n})(DiagramAction || (DiagramAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n","import { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds, randomId } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n        this.id = randomId();\n    }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        /**   @private  */\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'white', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt) {\n            size = measureText(this, this.style, this.content, this.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.measure(availableSize);\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    if (child.rotateAngle !== 0) {\n                        childSize = rotateSize(childSize, child.rotateAngle);\n                    }\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY, childSize);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                child.arrange(child.desiredSize);\n                this.outerBounds.uniteRect(child.outerBounds);\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y, childSize) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= childSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= childSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= childSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= childSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        if (_this.children && _this.children.length > 0) {\n            var nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content = new DiagramElement();\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if (this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas = this.children ? new Container() : new Canvas();\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent.setOffsetWithRespectToBounds(ports.offset.x, ports.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation) {\n        annotation.id = annotation.id || randomId();\n        var label = annotation;\n        var annotationcontent = new TextElement();\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        var style = annotation.style;\n        var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n        annotationcontent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n            bold: style.bold, textWrapping: style.textWrapping,\n            color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n            fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n            textDecoration: link ? link.textDecoration || annotationcontent.hyperlink.textDecoration : style.textDecoration,\n        };\n        annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n        annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n        annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n        annotationcontent.content = link ? link.content || annotationcontent.hyperlink.link : annotation.content;\n        if (this.width !== undefined) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj) {\n        ctx.rotate(obj.angle * Math.PI / 180);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n        ctx.rotate(-(obj.angle * Math.PI / 180));\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX = obj.x + obj.width * obj.pivotX;\n            var pivotY = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap) {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(htmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + element.parentTransform + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = svgContainer.getElementById(svg.id + '_radial');\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        var dashArray = [];\n        var fill;\n        if (style.dashArray !== undefined) {\n            var canvasRenderer = new CanvasRenderer();\n            dashArray = canvasRenderer.parseDashArray(style.dashArray);\n        }\n        if (style.gradient && style.gradient.type !== 'None') {\n            var grd = this.renderGradient(style, svg, diagramId);\n            fill = 'url(#' + grd.id + ')';\n        }\n        else {\n            fill = style.fill;\n        }\n        if (style.stroke) {\n            svg.setAttribute('stroke', style.stroke);\n        }\n        if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n            svg.setAttribute('stroke-width', style.strokeWidth.toString());\n        }\n        if (dashArray) {\n            svg.setAttribute('stroke-dasharray', dashArray.toString());\n        }\n        if (fill) {\n            svg.setAttribute('fill', fill);\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        if (element instanceof Container) {\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (nodeWidth >= 40 && nodeHeight >= 40) {\n            //Hide corners when the size is less than 40\n            if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n            }\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n            this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n            this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeWest) {\n            this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeEast) {\n            this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = 'transparent';\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer));\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        var container = document.getElementById(diagramElement.id);\n        var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n        var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n        if (!target && background.source) {\n            var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n            target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            target.setAttribute('id', diagramElement.id + '_image');\n            bgimageLayer.appendChild(target);\n        }\n        if (target) {\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', background.source);\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1) + ' '\n                + scale.charAt(0).toLowerCase() + scale.slice(1);\n            var container_1 = document.getElementById(diagramElement.id);\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element));\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, diff.x, diff.y, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && canOutConnect(args.target))\n                    || (this.endPoint === 'ConnectorTargetEnd' && canInConnect(args.target)))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    this.commandHandler.connect(this.endPoint, args);\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            if (obj.offsetX !== this.undoElement.offsetX || obj.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', changeObjectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            if (args.source instanceof Node) {\n                if (args.source.offsetX === this.undoElement.nodes[0].offsetX &&\n                    args.source.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(args.source.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(args.source.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (args.source.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                args.source.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (args.source) {\n            oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n        }\n        var arg = {\n            source: args.source, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (args.source) {\n                oldValues_1 = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                newValues = {\n                    offsetX: args.source.wrapper.offsetX + snappedPoint.x,\n                    offsetY: args.source.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: args.source, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drawHighlighter(this.currentTarget);\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, args.position.x - this.prevPosition.x, args.position.y - this.prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        if (this.undoElement.rotateAngle !== args.source.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: args.source.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.undoElement.rotateAngle === args.source.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: args.source.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: this.currentElement.wrapper.offsetX, y: this.currentElement.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: args.source.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - this.currentElement.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        if (this.undoElement.offsetX !== args.source.wrapper.offsetX || this.undoElement.offsetY !== args.source.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, args.source);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.undoElement.offsetX === args.source.wrapper.offsetX && this.undoElement.offsetY === args.source.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, args.source));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            changeObjectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', changeObjectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', changeObjectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            this.eventArgs.sourceWrapper instanceof TextElement) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target)) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        //end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            this.diagram.startTextEdit();\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape' && (this.checkEditBoxAsTarget(evt))) {\n                                    document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === \"nudgeRight\" || i === \"nudgeDown\" || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element) {\n                                    if (obj instanceof Connector && diagram.bpmnModule) {\n                                        //    obj = diagram.bpmnModule.findInteractableObject(obj, diagram);\n                                    }\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node && canOutConnect(objects[i])) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node && canInConnect(objects[i])) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (actualTarget.parentId) {\n                    var obj = actualTarget;\n                    var selected = isSelected(diagram, obj);\n                    while (obj) {\n                        if (isSelected(diagram, obj) && !selected) {\n                            break;\n                        }\n                        actualTarget = obj;\n                        obj = diagram.nameTable[obj.parentId];\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection && element instanceof TextElement) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyList.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyList.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        children = children.concat(obj.children);\n        if (this.clipboardData.childTable) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = this.clipboardData.childTable[children[i]];\n                if (childObj) {\n                    var newObj = void 0;\n                    if (getObjectType(childObj) === Connector) {\n                        newObj = this.cloneConnector(childObj, multiSelect);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect);\n                    }\n                    newChildren.push(newObj.id);\n                }\n            }\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj) {\n        obj.id += randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        width: node.width, height: node.height, offsetX: node.offsetX,\n                        offsetY: node.offsetY, margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                    });\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            intersectingOffset = intersetingPts[intersetingPts.length - 1];\n            newOffset = intersectingOffset;\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size);\n        }\n    };\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var expand = node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (target.isExpanded) {\n                this.expandCollapse(target, visibility, diagram);\n            }\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            target.visible = visibility;\n            target.style.opacity = (this.diagram.layoutAnimateModule &&\n                this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            diagram.nodePropertyChange(target, oldValues, newValues);\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node.shape.shape === 'TextAnnotation') {\n            return true;\n        }\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        _this.deleteVirtualObject = false;\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    refreshLayout = true;\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        this.initCommands();\n        this.isLoading = false;\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        this.drag(obj, tx, ty);\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n        if (this.mode === 'Canvas') {\n            for (var _f = 0, _g = this.views; _f < _g.length; _f++) {\n                var temp = _g[_f];\n                var view = void 0;\n                view = this.views[temp];\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            this.triggerEvent(DiagramEvent.collectionChange, args);\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    //  newObj.processId = (obj as Node).processId;\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyList.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyList.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    this.updateBridging();\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        this.triggerEvent(DiagramEvent.collectionChange, args);\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyList.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyList.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                parentNode.children.push(id);\n                parentNode.wrapper.children.push(this.nameTable[id].wrapper);\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    bounds.width = Math.max(bounds.width, 50);\n                    x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                    y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1]));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1]));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof TextElement) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    var getDefaults = getFunction(this.getNodeDefaults);\n                    if (getDefaults) {\n                        var defaults = getDefaults(obj, this);\n                        if (defaults && defaults !== obj) {\n                            extendObject(defaults, obj);\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            if (independentObj) {\n                var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n                if (!checkBoundaryConstraints) {\n                    var node = obj instanceof Node ? this.nodes : this.connectors;\n                    for (var i = 0; i <= node.length; i++) {\n                        if (node[i] && obj.id === node[i].id) {\n                            node.splice(i, 1);\n                        }\n                    }\n                }\n                layer.zIndexTable[obj.zIndex] = obj.id;\n            }\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    this.drag(node1, diffX, 0);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    this.drag(node1, 0, diffY);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            for (var i = 0; i < obj.children.length; i++) {\n                if (this.nameTable[obj.children[i]]) {\n                    canvas.children.push(this.nameTable[obj.children[i]].wrapper);\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            canvas.children.push(portContainer);\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        canvas.measure(new Size(obj.width, obj.height));\n        canvas.arrange(canvas.desiredSize);\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var htmlLayer = getHTMLLayer(this.element.id);\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers();\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function () {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            var view = this.views[temp];\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        if (!canVitualize(this)) {\n            var container = document.getElementById(view.element.id);\n            var bounds = container.getBoundingClientRect();\n            var node = void 0;\n            var element = void 0;\n            var connector = void 0;\n            var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(view.element.id);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var _this = this;\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        var removeObjectInterval;\n        for (var i = 0; i < collection.length; i++) {\n            var index = this.scroller.removeCollection.indexOf(collection[i]);\n            if (index >= 0) {\n                this.scroller.removeCollection.splice(index, 1);\n            }\n            var object = this.nameTable[collection[i]];\n            this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n        }\n        for (var k = 0; k < tCollection.length; k++) {\n            this.scroller.removeCollection.push(tCollection[k]);\n        }\n        var delay = 50;\n        removeObjectInterval = setInterval(function (args) {\n            _this.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.deleteVirtualObject = true;\n        }, delay);\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport) {\n        if (transform === void 0) { transform = true; }\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            for (var _b = 0, _c = Object.keys(layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var element = this.nameTable[layer.zIndexTable[node]].wrapper;\n                if (!(this.nameTable[layer.zIndexTable[node]].parentId)\n                    && !(this.nameTable[layer.zIndexTable[node]].processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (this.constraints & DiagramConstraints.Virtualization) {\n                        if (this.scroller.currentZoom < 1) {\n                            var horizonatlValue = this.scroller.horizontalOffset < 0 ? this.scroller.horizontalOffset : 0;\n                            var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                            left = ((this.realActions & RealAction.hScrollbarMoved) ? 0 : -horizonatlValue) + 'px';\n                            top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = -this.scroller.horizontalOffset + 'px';\n                            top_1 = -this.scroller.verticalOffset + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    renderer.renderElement(element, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this) && this.mode === 'SVG') {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.width : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.height : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG') {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.nodes[0].wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]));\n                }\n                else if (selectorModel.connectors[0] instanceof Connector) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selectorModel.wrapper !== null && selectorModel.wrapper.children && selectorModel.wrapper.children.length) {\n                selectorModel.wrapper.measure(size);\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                if (selectorModel.rotateAngle !== 0 || selectorModel.rotateAngle !== selectorModel.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                var selectorElement = void 0;\n                selectorElement = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n                if (selectorModel.annotation) {\n                    this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n                }\n                else {\n                    this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                    this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selectorModel.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n                }\n                if (selectorModel.annotation) {\n                    this.renderSelectorForAnnotation(selectorModel, selectorElement);\n                }\n                else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                    if (selectorModel.connectors[0] instanceof Connector) {\n                        var connector = selectorModel.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selectorModel.nodes[0] instanceof Node) {\n                        this.diagramRenderer.renderResizeHandle(selectorModel.nodes[0].wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel.nodes[0]));\n                    }\n                }\n                else {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        this.clearHighlighter();\n        var childNodes = getSelectorElement(this.element.id).childNodes;\n        var child;\n        for (var i = childNodes.length; i > 0; i--) {\n            child = childNodes[i - 1];\n            child.parentNode.removeChild(child);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_1 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_1.children) {\n                        for (var _i = 0, _a = parent_1.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else {\n                this.scaleObject(actualObject, node.width, true);\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else {\n                this.scaleObject(actualObject, node.height, false);\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            actualObject.wrapper.offsetX = node.offsetX;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            actualObject.wrapper.offsetY = node.offsetY;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (node.ports !== undefined) {\n            for (var _i = 0, _a = Object.keys(node.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.annotations || actualObject.annotations); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId) {\n                    var parent_2 = this.nameTable[actualObject.parentId];\n                    parent_2.wrapper.measure(new Size(parent_2.wrapper.width, actualObject.wrapper.height));\n                    parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                    parent_2.offsetX = parent_2.wrapper.offsetX;\n                    parent_2.offsetY = parent_2.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (this.mode === 'SVG' && !this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || canOutConnect(sourceNode)) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                if (!targetNode || canInConnect(targetNode)) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ?\n                    this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            points = this.getPoints(actualObject);\n        }\n        //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                if (actualObject.annotations.length) {\n                    for (var _i = 0, _a = actualObject.annotations; _i < _a.length; _i++) {\n                        var annotation = _a[_i];\n                        var annotationWrapper = void 0;\n                        annotationWrapper = this.getWrapper(actualObject.wrapper, annotation.id);\n                        actualObject.updateAnnotation(annotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n                    }\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction))) {\n            this.updateSelector();\n        }\n        if (this.mode === 'SVG' && !this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            if (changedObject.content !== undefined) {\n                if (annotationWrapper) {\n                    isMeasure = true;\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            annotationWrapper.refreshTextElement();\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.setSize();\n            this.scroller.updateScrollOffsets();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            newObj.id += randomId();\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (arg.cancel) {\n                    _this.removeChildNodes(_this.currentSymbol);\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (clonedObject.children) {\n                        _this.addChildNodes(clonedObject);\n                    }\n                    _this.add(clonedObject, true);\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n            }\n        };\n    };\n    Diagram.prototype.removeChildNodes = function (node) {\n        if (node instanceof Node && node.children) {\n            for (var i = 0; i < node.children.length; i++) {\n                if (this.nameTable[node.children[i]].children) {\n                    this.removeChildNodes(node);\n                }\n                this.removeFromAQuad(this.nameTable[node.children[i]]);\n                this.removeObjectsFromLayer(this.nameTable[node.children[i]]);\n                delete this.nameTable[node.children[i]];\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var _this = this;\n        var fileType;\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var images = [];\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        fileType = options.format || 'JPG';\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n        return null;\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'transform': 'translate(' + (-options.bounds.x + margin.left) + ', ' + (-options.bounds.y + margin.top) + ')',\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        if (this.diagram.mode === 'SVG') {\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (var i = 0; i < svg.childNodes.length; i++) {\n                var element = svg.childNodes[i];\n                if (element.id === 'diagram_diagramLayer') {\n                    element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n                        (-bounds.y + margin.top) + ')');\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            g.setAttribute('transform', 'translate(' + (-options.bounds.x + margin.left) + ', ' +\n                (-options.bounds.y + margin.top) + ')');\n            var nodes = this.diagram.nodes;\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            this.printImage(div, url, 0);\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        var _this = this;\n        options.mode = 'Data';\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var url = this.exportDiagram(options);\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                child.measure(availableSize);\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    updateSize(childSize, desired);\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width;\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height;\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            var contextItems_1 = this;\n            args.items.forEach(function (item) {\n                if (contextItems_1.hiddenItems.indexOf(item.id) > -1) {\n                    contextItems_1.contextMenu.hideItems([item.id], true);\n                }\n            });\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyList && this.parent.historyList.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyList && this.parent.historyList.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = this.intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.intersect2 = function (start1, end1, start2, end2) {\n        var point = { x: 0, y: 0 };\n        var lineUtil1 = this.getLineSegment(start1.x, start1.y, end1.x, end1.y);\n        var lineUtil2 = this.getLineSegment(start2.x, start2.y, end2.x, end2.y);\n        var line3 = intersect3(lineUtil1, lineUtil2);\n        if (line3.enabled) {\n            return line3.intersectPt;\n        }\n        else {\n            return point;\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.getLineSegment = function (x1, y1, x2, y2) {\n        return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = (shape instanceof TextElement) ? getBounds(shape) : getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyList = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyList.canLog) {\n            var hEntry = diagram.historyList.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyList && diagram.historyList.canUndo && diagram.historyList.currentEntry) {\n            entryObject = diagram.historyList.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyList.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyList.canUndo = true;\n        diagram.historyList.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyList.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyList.currentEntry;\n        if (diagram.historyList.canUndo || diagram.historyList.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyList.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyList.undoStack = undoStack;\n        diagram.historyList.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyList.undoStack.length > 0) {\n                var addObject = diagram.historyList.undoStack.splice(0, 1);\n                diagram.historyList.redoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.changeObjectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.changeObjectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.changeObjectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.changeObjectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyList.redoStack.length > 0) {\n                var addObject = diagram.historyList.redoStack.splice(0, 1);\n                diagram.historyList.undoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyList;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyList;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || !this.isAnimation)) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.nestedBestRanks[j][cell.temp[0]] = cell;\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations  \n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType } from '../diagram/utility/diagram-util';\nimport { getFunction } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / (content.width || width);\n                sh = actualHeight / (content.height || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.description ? symbolInfo.description.text : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","topLeft","bottomLeft","middleLeft","topRight","bottomCenter","middleRight","bottomRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","isTarget","reverse","isTar","child","segmentPoints","wrapper","actualSize","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","getIntersectionPoints","thisSegment","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canOutConnect","OutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","state","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","PortConstraints","Draw","canDrag","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","class","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","parentNode","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","completeRegion","region","selectedObjects","containsRect","findObjectType","drawingObject","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","k","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","nameTable","isPointOverConnector","intermediatePoints","rect","Rect","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","annotations","container","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","index","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","serialize","clonedObject","cloneObject","getCustomProperty","selectedItems","nodes","connectors","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","_a","commandManager","name","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","mode","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","updateStyle","changedObject","textElement","Object","keys","fill","StrokeStyle","textOverflow","opacity","strokeColor","strokeDashArray","strokeWidth","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","gradient","TextElement","refreshTextElement","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","actualObject","minHeight","maxHeight","minWidth","maxWidth","horizontalAlignment","verticalAlignment","visible","Text","elementId","updateShape","oldObject","DiagramElement","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","basicShapeData","removeItem","array","item","indexOf","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","size","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","action","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","ports","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","measure","arrange","desiredSize","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","enterObject","enterTable","symbolPalette","palettes","symbols","getPoint","w","h","cornerPoint","trans","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","text","textValue","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","getAdornerLayerSvg","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","getNativeLayer","getHTMLLayer","elementType","attribute","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","parent","className","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compiledString","compile","cloneNode","svg","attributes","createMeasureElements","usageCount","divElement","createTextNode","tSpan","randomId","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","properties","concat","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","currentSymbol","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkForResizeHandles","PointPort","findPortToolToActivate","isSelected","conn","connectorEditingToolModule","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","padding","firstLevel","parentId","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","isDirt","Self","Parent","isSvgRender","staticSize","isRectElement","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","template","templatePosition","getAvailableSize","textNodes","textWrapBounds","imageSource","stretch","Canvas","leftMargin","topMargin","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","None","defaultValue","isArray","Hyperlink","Annotation","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","bridges","bpmnElement","getSegmentElement","getConnectorPoints","flow","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","pathseqData","pathseq","findPath","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","slice","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","Default","CollectionFactory","UserHandle","getWrapper","All","getShapeType","BasicShape","FlowShape","Path","Image","BpmnShape","Native","Html","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","processId","outEdges","inEdges","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","canvas","borderColor","borderWidth","initPorts","accessibilityContent","initPortWrapper","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","initAnnotationWrapper","portContent","pathdata","label","annotationcontent","initIconContainer","iconContent","iconContentBounds","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","getObjectType","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","stops","linear","createLinearGradient","radial","createRadialGradient","fx","fy","cx","cy","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","parentSvg","fromPalette","ctx_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","indexValue","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","renderUserHandler","option","pathSize","newData","pathColor","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","entry","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","grid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","commandHandler","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","childTable","undoElement","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","updateSize","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","clearSelection","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","redoObject","undoObject","category","addHistoryEntry","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","selectedObject","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","dropAnnotation","endGroupAction","changeObjectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","elements","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","findObjectsUnderMouse","findObjectUnderMouse","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","touchMoveList","elementLeave","elementEnter","mouseEvents","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","setInterval","doAutoScroll","detail","which","isMultipleSelect","renderSelector","click","up","wheelDelta","isTriggerEvent","startTextEdit","keyDown","keyCode","keycode","i_1","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","layer","getObjectLayer","lock","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","actions","actualTarget","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","zIndex","_d","_e","actualTarget_1","parentObj","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","updateDiagramObject","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","getAnnotation","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyList","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","UndoRedo","removePorts","removeLabels","deleteChild","addChild","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","newObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","childObj","prop","initObject","removeFromAQuad","removeObjectsFromLayer","multipleSelection","cause","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","select","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","objectId","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","diagramRenderer","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","drag","updateInnerParentProperties","nodePropertyChange","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","parent_1","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","nodes_1","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_2","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","updateLabelMargin","tempPt","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","line3","labelWrapper","newMat","offsetx","offsety","nodeBounds","selectorBounds","top_2","expandNode","expand","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","preventNodesUpdate","preventConnectorsUpdate","doLayout","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","undoObj","redoObj","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","selectionConnectorsList","deleteVirtualObject","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","_f","_g","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","localeObj","L10n","locale","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","requiredModules","modules","member","show","dataManager","droppable","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","refreshCanvasDiagramLayer","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","removeElements","currentObj","removeElement_1","removeCommand","Clear","deleteGroup","removeBpmnProcesses","updateNodeEdges","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","exportDiagram","printandExportModule","print","addPorts","addConstraints","constraintsType","constraintsValue","removeConstraints","labels","removelabelExtension","element_1","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_h","_j","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","dataSource","url","initSource","independentObj","currentLayer","defaultLayer","getDefaults","defaults","initNode","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","objectArray_1","refreshSvgDiagramLayer","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","removeVirtualObjects","clearIntervalVal","tCollection","removeObjectInterval","fromExport","transformValue","horizonatlValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","hideRotate","hideResize","thumbConstraints","selectorElement","renderSelectorForAnnotation","adornerSvg","highlighter","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","isLayout","existingBounds","updateMargin","updateBPMN","actualPort","updatePort","checkSelectedItem","updateTextAnnotationProp","updateConnectorEdges","updateGroupSize","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","annotationWrapper","updateAnnotations","updateNodeProperty","selItems","canUpdateSize","isMeasure","portWrapper","String","iconRect","iconShape","enable","entryTable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","dragEnter","findChild","removeChildNodes","addChildNodes","out","dragLeave","Event","PrintAndExport","fileType","buffers","getDiagramBounds","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","images","setScaleValueforCanvas","diagramAsCanvas","toDataURL","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","exportImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","printImage","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printWind","write","innerHTML","StackPanel","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","then","firstNode","nextLevel","rootNodes","items","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","showCustomMenuOnly","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","contextItems_1","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","child1","child2","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","self","zOrder","inter1","intersect2","checkForHorizontalLine","roundedAngle","start1","end1","start2","end2","getLineSegment","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","line1","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","addObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","rows","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","columns","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","cell","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","header","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","draggable","initSymbols","symbolGroup","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","addPaletteItem","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","i_2","stackPanel","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","symbolWidth","symbolHeight","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}