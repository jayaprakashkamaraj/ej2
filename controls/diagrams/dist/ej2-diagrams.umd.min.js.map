{"version":3,"file":"ej2-diagrams.umd.min.js","sources":["../src/diagram/utility/path-util.js","../src/diagram/primitives/matrix.js","../src/diagram/objects/dictionary/basic-shapes.js","../src/diagram/objects/dictionary/common.js","../src/diagram/objects/dictionary/flow-shapes.js","../src/diagram/objects/tooltip.js","../src/diagram/utility/connector.js","../src/diagram/objects/connector.js","../src/diagram/utility/constraints-util.js","../src/diagram/ruler/ruler.js","../src/diagram/utility/diagram-util.js","../src/diagram/utility/dom-util.js","../src/diagram/utility/base-util.js","../src/diagram/interaction/actions.js","../src/diagram/objects/bpmn.js","../src/diagram/layout/symmetrical-layout.js","../src/diagram/primitives/size.js","../src/diagram/primitives/point.js","../src/diagram/primitives/rect.js","../src/diagram/enum/enum.js","../src/diagram/core/elements/diagram-element.js","../src/diagram/core/appearance.js","../src/diagram/core/containers/container.js","../src/diagram/core/elements/path-element.js","../src/diagram/core/elements/native-element.js","../src/diagram/core/elements/text-element.js","../src/diagram/core/elements/image-element.js","../src/diagram/core/containers/canvas.js","../src/diagram/objects/port.js","../src/diagram/objects/annotation.js","../src/diagram/objects/icon.js","../src/diagram/objects/node-base.js","../src/diagram/interaction/selector.js","../src/diagram/core/elements/html-element.js","../src/diagram/objects/node.js","../src/ruler/ruler.js","../src/diagram/rendering/canvas-renderer.js","../src/diagram/rendering/svg-renderer.js","../src/diagram/rendering/renderer.js","../src/diagram/diagram/page-settings.js","../src/diagram/objects/service.js","../src/diagram/diagram/grid-lines.js","../src/diagram/diagram/ruler-settings.js","../src/diagram/diagram/data-source.js","../src/diagram/layout/layout-base.js","../src/diagram/interaction/tool.js","../src/diagram/interaction/connector-editing.js","../src/diagram/interaction/event-handlers.js","../src/diagram/diagram/layer.js","../src/diagram/interaction/command-manager.js","../src/diagram/interaction/scroller.js","../src/diagram/interaction/spatial-search/quad.js","../src/diagram/interaction/spatial-search/spatial-search.js","../src/diagram/diagram/keyboard-commands.js","../src/diagram/diagram.js","../src/diagram/print-settings.js","../src/diagram/core/containers/stack-panel.js","../src/diagram/data-binding/data-binding.js","../src/diagram/objects/context-menu.js","../src/diagram/objects/connector-bridging.js","../src/diagram/objects/snapping.js","../src/diagram/objects/undo-redo.js","../src/diagram/objects/layout-animation.js","../src/diagram/layout/hierarchical-tree.js","../src/diagram/layout/mind-map.js","../src/diagram/layout/radial-tree.js","../src/diagram/layout/complex-hierarchical-tree.js","../src/symbol-palette/symbol-palette.js","../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n        }\n    }\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper);\n    var targetSegment = createSegmentsCollection(targetWrapper);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix } from '../primitives/matrix';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription) {\n        annotation.id = annotation.id || randomId();\n        var textele = new TextElement();\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.content = annotation.content;\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        textele.style.textOverflow = 'Wrap';\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        textElement.refreshTextElement();\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal') {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function getPoints(element, corners) {\n    var line = [];\n    line.push(corners.topLeft);\n    line.push(corners.topRight);\n    line.push(corners.bottomRight);\n    line.push(corners.bottomLeft);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    dataObj.selectedItems.nodes = [];\n    dataObj.selectedItems.connectors = [];\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                style.gradient = changedObject.gradient;\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_groupElement', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                this.arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return nodes[i];\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    bounds.height = childNodes.length * text.style.fontSize;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n// /** @private */\n// export function getDiagramLayer(diagramId: string): SVGElement {\n//     let diagramLayer: SVGElement;\n//     let diagramLayerSvg: SVGSVGElement = getDiagramLayerSvg(diagramId);\n//     diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer') as SVGElement;\n//     return diagramLayer;\n// }\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'wrapper') {\n                var constructorId = 'constructor';\n                var name_1 = 'name';\n                var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                if (!isEventEmmitter) {\n                    if (obj[property] instanceof Array) {\n                        newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                        newObject[property] = obj[property].cloneNode(true).innerHtml;\n                    }\n                    else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                        newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                    }\n                    else {\n                        newObject[property] = obj[property];\n                    }\n                }\n            }\n            else {\n                if (obj[property]) {\n                    newObject[property] = {\n                        actualSize: {\n                            width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                        }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                    };\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n})(DiagramAction || (DiagramAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n","import { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds, randomId } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n        this.id = randomId();\n    }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        /**   @private  */\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'white', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt) {\n            size = measureText(this, this.style, this.content, this.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.measure(availableSize);\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    if (child.rotateAngle !== 0) {\n                        childSize = rotateSize(childSize, child.rotateAngle);\n                    }\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY, childSize);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                child.arrange(child.desiredSize);\n                this.outerBounds.uniteRect(child.outerBounds);\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y, childSize) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= childSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= childSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= childSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= childSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        if (_this.children && _this.children.length > 0) {\n            var nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content = new DiagramElement();\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if (this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas = this.children ? new Container() : new Canvas();\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent.setOffsetWithRespectToBounds(ports.offset.x, ports.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation) {\n        annotation.id = annotation.id || randomId();\n        var label = annotation;\n        var annotationcontent = new TextElement();\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        var style = annotation.style;\n        var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n        annotationcontent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n            bold: style.bold, textWrapping: style.textWrapping,\n            color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n            fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n            textDecoration: link ? link.textDecoration || annotationcontent.hyperlink.textDecoration : style.textDecoration,\n        };\n        annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n        annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n        annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n        annotationcontent.content = link ? link.content || annotationcontent.hyperlink.link : annotation.content;\n        if (this.width !== undefined) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj) {\n        ctx.rotate(obj.angle * Math.PI / 180);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n        ctx.rotate(-(obj.angle * Math.PI / 180));\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX = obj.x + obj.width * obj.pivotX;\n            var pivotY = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap) {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(htmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + element.parentTransform + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = svgContainer.getElementById(svg.id + '_radial');\n                grd = svgContainer.getElementById(svg.id + '_linear');\n                if (grd) {\n                    grd.parentNode.removeChild(grd);\n                }\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        var dashArray = [];\n        var fill;\n        if (style.dashArray !== undefined) {\n            var canvasRenderer = new CanvasRenderer();\n            dashArray = canvasRenderer.parseDashArray(style.dashArray);\n        }\n        if (style.gradient && style.gradient.type !== 'None') {\n            var grd = this.renderGradient(style, svg, diagramId);\n            fill = 'url(#' + grd.id + ')';\n        }\n        else {\n            fill = style.fill;\n        }\n        if (style.stroke) {\n            svg.setAttribute('stroke', style.stroke);\n        }\n        if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n            svg.setAttribute('stroke-width', style.strokeWidth.toString());\n        }\n        if (dashArray) {\n            svg.setAttribute('stroke-dasharray', dashArray.toString());\n        }\n        if (fill) {\n            svg.setAttribute('fill', fill);\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        if (element instanceof Container) {\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (nodeWidth >= 40 && nodeHeight >= 40) {\n            //Hide corners when the size is less than 40\n            if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n            }\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n            this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n            this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeWest) {\n            this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n        }\n        if (selectorConstraints & SelectorConstraints.ResizeEast) {\n            this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = 'transparent';\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer));\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        var container = document.getElementById(diagramElement.id);\n        var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n        var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n        if (!target && background.source) {\n            var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n            target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            target.setAttribute('id', diagramElement.id + '_image');\n            bgimageLayer.appendChild(target);\n        }\n        if (target) {\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', background.source);\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1) + ' '\n                + scale.charAt(0).toLowerCase() + scale.slice(1);\n            var container_1 = document.getElementById(diagramElement.id);\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element));\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, diff.x, diff.y, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && canOutConnect(args.target))\n                    || (this.endPoint === 'ConnectorTargetEnd' && canInConnect(args.target)))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    this.commandHandler.connect(this.endPoint, args);\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            if (obj.offsetX !== this.undoElement.offsetX || obj.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', changeObjectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            if (args.source instanceof Node) {\n                if (args.source.offsetX === this.undoElement.nodes[0].offsetX &&\n                    args.source.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(args.source.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(args.source.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (args.source.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                args.source.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (args.source) {\n            oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n        }\n        var arg = {\n            source: args.source, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (args.source) {\n                oldValues_1 = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                newValues = {\n                    offsetX: args.source.wrapper.offsetX + snappedPoint.x,\n                    offsetY: args.source.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: args.source, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drawHighlighter(this.currentTarget);\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, args.position.x - this.prevPosition.x, args.position.y - this.prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        if (this.undoElement.rotateAngle !== args.source.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: args.source.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.undoElement.rotateAngle === args.source.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: args.source.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: this.currentElement.wrapper.offsetX, y: this.currentElement.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: args.source.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - this.currentElement.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        if (this.undoElement.offsetX !== args.source.wrapper.offsetX || this.undoElement.offsetY !== args.source.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, args.source);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.undoElement.offsetX === args.source.wrapper.offsetX && this.undoElement.offsetY === args.source.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, args.source));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            changeObjectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', changeObjectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', changeObjectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            this.eventArgs.sourceWrapper instanceof TextElement) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target)) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        //end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            this.diagram.startTextEdit();\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape' && (this.checkEditBoxAsTarget(evt))) {\n                                    document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === \"nudgeRight\" || i === \"nudgeDown\" || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element) {\n                                    if (obj instanceof Connector && diagram.bpmnModule) {\n                                        //    obj = diagram.bpmnModule.findInteractableObject(obj, diagram);\n                                    }\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node && canOutConnect(objects[i])) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node && canInConnect(objects[i])) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (actualTarget.parentId) {\n                    var obj = actualTarget;\n                    var selected = isSelected(diagram, obj);\n                    while (obj) {\n                        if (isSelected(diagram, obj) && !selected) {\n                            break;\n                        }\n                        actualTarget = obj;\n                        obj = diagram.nameTable[obj.parentId];\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection && element instanceof TextElement) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyList.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyList.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyList.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        children = children.concat(obj.children);\n        if (this.clipboardData.childTable) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = this.clipboardData.childTable[children[i]];\n                if (childObj) {\n                    var newObj = void 0;\n                    if (getObjectType(childObj) === Connector) {\n                        newObj = this.cloneConnector(childObj, multiSelect);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect);\n                    }\n                    newChildren.push(newObj.id);\n                }\n            }\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj) {\n        obj.id += randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        width: node.width, height: node.height, offsetX: node.offsetX,\n                        offsetY: node.offsetY, margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                    });\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            intersectingOffset = intersetingPts[intersetingPts.length - 1];\n            newOffset = intersectingOffset;\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size);\n        }\n    };\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var expand = node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (target.isExpanded) {\n                this.expandCollapse(target, visibility, diagram);\n            }\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            target.visible = visibility;\n            target.style.opacity = (this.diagram.layoutAnimateModule &&\n                this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            diagram.nodePropertyChange(target, oldValues, newValues);\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node.shape.shape === 'TextAnnotation') {\n            return true;\n        }\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        _this.deleteVirtualObject = false;\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    refreshLayout = true;\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        this.initCommands();\n        this.isLoading = false;\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        this.drag(obj, tx, ty);\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n        if (this.mode === 'Canvas') {\n            for (var _f = 0, _g = this.views; _f < _g.length; _f++) {\n                var temp = _g[_f];\n                var view = void 0;\n                view = this.views[temp];\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            this.triggerEvent(DiagramEvent.collectionChange, args);\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    //  newObj.processId = (obj as Node).processId;\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyList.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyList.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    this.updateBridging();\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        this.triggerEvent(DiagramEvent.collectionChange, args);\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyList.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyList.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                parentNode.children.push(id);\n                parentNode.wrapper.children.push(this.nameTable[id].wrapper);\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    bounds.width = Math.max(bounds.width, 50);\n                    x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                    y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1]));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1]));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof TextElement) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    var getDefaults = getFunction(this.getNodeDefaults);\n                    if (getDefaults) {\n                        var defaults = getDefaults(obj, this);\n                        if (defaults && defaults !== obj) {\n                            extendObject(defaults, obj);\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            if (independentObj) {\n                var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n                if (!checkBoundaryConstraints) {\n                    var node = obj instanceof Node ? this.nodes : this.connectors;\n                    for (var i = 0; i <= node.length; i++) {\n                        if (node[i] && obj.id === node[i].id) {\n                            node.splice(i, 1);\n                        }\n                    }\n                }\n                layer.zIndexTable[obj.zIndex] = obj.id;\n            }\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    this.drag(node1, diffX, 0);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    this.drag(node1, 0, diffY);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            for (var i = 0; i < obj.children.length; i++) {\n                if (this.nameTable[obj.children[i]]) {\n                    canvas.children.push(this.nameTable[obj.children[i]].wrapper);\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            canvas.children.push(portContainer);\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        canvas.measure(new Size(obj.width, obj.height));\n        canvas.arrange(canvas.desiredSize);\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var htmlLayer = getHTMLLayer(this.element.id);\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers();\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function () {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            var view = this.views[temp];\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        if (!canVitualize(this)) {\n            var container = document.getElementById(view.element.id);\n            var bounds = container.getBoundingClientRect();\n            var node = void 0;\n            var element = void 0;\n            var connector = void 0;\n            var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(view.element.id);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var _this = this;\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        var removeObjectInterval;\n        for (var i = 0; i < collection.length; i++) {\n            var index = this.scroller.removeCollection.indexOf(collection[i]);\n            if (index >= 0) {\n                this.scroller.removeCollection.splice(index, 1);\n            }\n            var object = this.nameTable[collection[i]];\n            this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n        }\n        for (var k = 0; k < tCollection.length; k++) {\n            this.scroller.removeCollection.push(tCollection[k]);\n        }\n        var delay = 50;\n        removeObjectInterval = setInterval(function (args) {\n            _this.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.deleteVirtualObject = true;\n        }, delay);\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport) {\n        if (transform === void 0) { transform = true; }\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            for (var _b = 0, _c = Object.keys(layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var element = this.nameTable[layer.zIndexTable[node]].wrapper;\n                if (!(this.nameTable[layer.zIndexTable[node]].parentId)\n                    && !(this.nameTable[layer.zIndexTable[node]].processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (this.constraints & DiagramConstraints.Virtualization) {\n                        if (this.scroller.currentZoom < 1) {\n                            var horizonatlValue = this.scroller.horizontalOffset < 0 ? this.scroller.horizontalOffset : 0;\n                            var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                            left = ((this.realActions & RealAction.hScrollbarMoved) ? 0 : -horizonatlValue) + 'px';\n                            top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = -this.scroller.horizontalOffset + 'px';\n                            top_1 = -this.scroller.verticalOffset + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    renderer.renderElement(element, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this) && this.mode === 'SVG') {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.width : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.height : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG') {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.nodes[0].wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]));\n                }\n                else if (selectorModel.connectors[0] instanceof Connector) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selectorModel.wrapper !== null && selectorModel.wrapper.children && selectorModel.wrapper.children.length) {\n                selectorModel.wrapper.measure(size);\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                if (selectorModel.rotateAngle !== 0 || selectorModel.rotateAngle !== selectorModel.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                var selectorElement = void 0;\n                selectorElement = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n                if (selectorModel.annotation) {\n                    this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n                }\n                else {\n                    this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                    this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selectorModel.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n                }\n                if (selectorModel.annotation) {\n                    this.renderSelectorForAnnotation(selectorModel, selectorElement);\n                }\n                else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                    if (selectorModel.connectors[0] instanceof Connector) {\n                        var connector = selectorModel.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selectorModel.nodes[0] instanceof Node) {\n                        this.diagramRenderer.renderResizeHandle(selectorModel.nodes[0].wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel.nodes[0]));\n                    }\n                }\n                else {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        this.clearHighlighter();\n        var childNodes = getSelectorElement(this.element.id).childNodes;\n        var child;\n        for (var i = childNodes.length; i > 0; i--) {\n            child = childNodes[i - 1];\n            child.parentNode.removeChild(child);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_1 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_1.children) {\n                        for (var _i = 0, _a = parent_1.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else {\n                this.scaleObject(actualObject, node.width, true);\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else {\n                this.scaleObject(actualObject, node.height, false);\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            actualObject.wrapper.offsetX = node.offsetX;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            actualObject.wrapper.offsetY = node.offsetY;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (node.ports !== undefined) {\n            for (var _i = 0, _a = Object.keys(node.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.annotations || actualObject.annotations); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId) {\n                    var parent_2 = this.nameTable[actualObject.parentId];\n                    parent_2.wrapper.measure(new Size(parent_2.wrapper.width, actualObject.wrapper.height));\n                    parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                    parent_2.offsetX = parent_2.wrapper.offsetX;\n                    parent_2.offsetY = parent_2.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (this.mode === 'SVG' && !this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || canOutConnect(sourceNode)) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                if (!targetNode || canInConnect(targetNode)) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ?\n                    this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            points = this.getPoints(actualObject);\n        }\n        //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                if (actualObject.annotations.length) {\n                    for (var _i = 0, _a = actualObject.annotations; _i < _a.length; _i++) {\n                        var annotation = _a[_i];\n                        var annotationWrapper = void 0;\n                        annotationWrapper = this.getWrapper(actualObject.wrapper, annotation.id);\n                        actualObject.updateAnnotation(annotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n                    }\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction))) {\n            this.updateSelector();\n        }\n        if (this.mode === 'SVG' && !this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            if (changedObject.content !== undefined) {\n                if (annotationWrapper) {\n                    isMeasure = true;\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            annotationWrapper.refreshTextElement();\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.setSize();\n            this.scroller.updateScrollOffsets();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            newObj.id += randomId();\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (arg.cancel) {\n                    _this.removeChildNodes(_this.currentSymbol);\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (clonedObject.children) {\n                        _this.addChildNodes(clonedObject);\n                    }\n                    _this.add(clonedObject, true);\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n            }\n        };\n    };\n    Diagram.prototype.removeChildNodes = function (node) {\n        if (node instanceof Node && node.children) {\n            for (var i = 0; i < node.children.length; i++) {\n                if (this.nameTable[node.children[i]].children) {\n                    this.removeChildNodes(node);\n                }\n                this.removeFromAQuad(this.nameTable[node.children[i]]);\n                this.removeObjectsFromLayer(this.nameTable[node.children[i]]);\n                delete this.nameTable[node.children[i]];\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var _this = this;\n        var fileType;\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var images = [];\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        fileType = options.format || 'JPG';\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n        return null;\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'transform': 'translate(' + (-options.bounds.x + margin.left) + ', ' + (-options.bounds.y + margin.top) + ')',\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        if (this.diagram.mode === 'SVG') {\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (var i = 0; i < svg.childNodes.length; i++) {\n                var element = svg.childNodes[i];\n                if (element.id === 'diagram_diagramLayer') {\n                    element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n                        (-bounds.y + margin.top) + ')');\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            g.setAttribute('transform', 'translate(' + (-options.bounds.x + margin.left) + ', ' +\n                (-options.bounds.y + margin.top) + ')');\n            var nodes = this.diagram.nodes;\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            this.printImage(div, url, 0);\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        var _this = this;\n        options.mode = 'Data';\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var url = this.exportDiagram(options);\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                child.measure(availableSize);\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    updateSize(childSize, desired);\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width;\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height;\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            var contextItems_1 = this;\n            args.items.forEach(function (item) {\n                if (contextItems_1.hiddenItems.indexOf(item.id) > -1) {\n                    contextItems_1.contextMenu.hideItems([item.id], true);\n                }\n            });\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyList && this.parent.historyList.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyList && this.parent.historyList.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = this.intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.intersect2 = function (start1, end1, start2, end2) {\n        var point = { x: 0, y: 0 };\n        var lineUtil1 = this.getLineSegment(start1.x, start1.y, end1.x, end1.y);\n        var lineUtil2 = this.getLineSegment(start2.x, start2.y, end2.x, end2.y);\n        var line3 = intersect3(lineUtil1, lineUtil2);\n        if (line3.enabled) {\n            return line3.intersectPt;\n        }\n        else {\n            return point;\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.getLineSegment = function (x1, y1, x2, y2) {\n        return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = (shape instanceof TextElement) ? getBounds(shape) : getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyList = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyList.canLog) {\n            var hEntry = diagram.historyList.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyList && diagram.historyList.canUndo && diagram.historyList.currentEntry) {\n            entryObject = diagram.historyList.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyList.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyList.canUndo = true;\n        diagram.historyList.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyList.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyList.currentEntry;\n        if (diagram.historyList.canUndo || diagram.historyList.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyList.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyList.undoStack = undoStack;\n        diagram.historyList.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyList.undoStack.length > 0) {\n                var addObject = diagram.historyList.undoStack.splice(0, 1);\n                diagram.historyList.redoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.changeObjectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.changeObjectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.changeObjectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.changeObjectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyList.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyList.redoStack.length > 0) {\n                var addObject = diagram.historyList.redoStack.splice(0, 1);\n                diagram.historyList.undoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyList;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyList;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || !this.isAnimation)) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.nestedBestRanks[j][cell.temp[0]] = cell;\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations  \n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType } from '../diagram/utility/diagram-util';\nimport { getFunction } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / (content.width || width);\n                sh = actualHeight / (content.height || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.description ? symbolInfo.description.text : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","type","Translation","offsetX","offsetY","Scaling","m11","m22","num","m21","num2","m12","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","result","sin","cos","Unknown","setMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getSourcePoint","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","source","srcCorner","direction","srcDir","margin","left","right","bottom","top","target","tarCorner","tarDir","port","tarPortPt","getDirection","abs","equals","containsPoint","topCenter","ele","sPt","tPt","refPoint","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","swapBounds","tarBounds","isInterSect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","tarSegmet","intersect3","enabled","checkSourceAndTargetIntersect","findPoint","getOppositeDirection","first","checkLastSegmentasTerminal","Point","isEmptyPoint","vector1","distance","value","max","transform","vector2","intermeditatePointsForStraight","removeSegment","checkConsectiveSegmentAsSame","updateSegmentPoints","checkSourcePointInTarget","nodeOrPortToNode","pointToPort","checkPreviousSegment","splice","checkPortdirection","returnIntermeditatePoints","findIntermeditatePoints","OrthogonalSegment","extra","swap","getSwapping","swapPoints","pts","diffY","min","NoOfSegments","One","Three","Five","getRightToLeftSegmentCount","sourceObj","targetObj","diffX","middleRight","getRightToRightSegmentCount","Two","Four","getRightToTopSegmentCount","bottomCenter","getRightToBottomSegmentCount","getBottomToTopSegmentCount","difX","getBottomToBottomSegmentCount","bottomLeft","middleLeft","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","bottomRight","getTopToTopSegmentCount","segLength","src","tar","adjustSegmentLength","orthoConnection2Segment","orthoConnection3Segment","prevDir","orthoConnection4Segment","segmentValue","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","addLineSegment","orthoConnection5Segment","addOrthoSegments","findOrthoSegments","defaultOrthoConnection","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","source_1","target_1","findDirection","segmentPoint","connectToOneEnd","seg_1","lastSegment","pointToNode","pointToPoint","findPointToPointOrtho","terminateConnection","targetPoint","setLineEndPoint","segPoint","portdirection","length_1","findSourceDirection","addPoints","update","portDir","findSegmentDirection","endPoint","isTarget","reverse","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","getPoints","createLineSegment","object","outerBounds","rectBounds","rotateAngle","parentTransform","topLeft","topRight","dir","BezierSegment","StraightSegment","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","findAngle","e","r","re","findLength","es","asin","PI","cor","isTar","child","segmentPoints","wrapper","actualSize","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","getIntersectionPoints","thisSegment","minimal","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","point1","allow","temp","diffx","diffy","interPt","getLeftLength","getRightLength","preDir","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canOutConnect","OutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","DiagramConstraints","Virtualization","canSingleSelect","model","tool","DiagramTools","SingleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","MultipleSelect","canUserInteract","UserInteraction","canZoomTextEdit","ZoomTextEdit","canPageEditable","ApiUpdate","canApiInteract","diagramActions","DiagramAction","ToolAction","canDraw","PortConstraints","Draw","canDrag","renderRuler","isHorizontal","div","document","getElementById","rulerSize","getRulerSize","rulerGeometry","getRulerGeometry","createHtmlElement","insertBefore","firstChild","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","completeRegion","region","selectedObjects","containsRect","findObjectType","drawingObject","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","nameTable","isPointOverConnector","intermediatePoints","k","bezierPoint1","bezierPoint2","pointsForBezier","rect","Rect","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","annotations","container","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","line","getTooltipOffset","mousePosition","inheritTooltip","InheritTooltip","objectTooltip","isMouseBased","getBoundingClientRect","offsetPoint","tooltipOffset","relativeMode","bound","sort","objects","getBounds","getAnnotationPosition","annotation","getloop","getOffsetOfConnector","index","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","state","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","serialize","clonedObject","cloneObject","getCustomProperty","selectedItems","nodes","connectors","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","_a","commandManager","name","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","mode","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","updateStyle","changedObject","textElement","Object","keys","fill","StrokeStyle","textOverflow","opacity","strokeColor","strokeDashArray","strokeWidth","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","gradient","TextElement","refreshTextElement","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","actualObject","minHeight","maxHeight","minWidth","maxWidth","horizontalAlignment","verticalAlignment","visible","Text","elementId","updateShape","oldObject","DiagramElement","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","removeChild","appendChild","getContent","htmlElement","flowshapedata","basicShapeData","removeItem","array","item","indexOf","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","size","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","action","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","ports","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","measure","arrange","desiredSize","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","symbolPalette","palettes","symbols","getPaletteSymbols","nodeId","enterObject","enterTable","getPoint","w","h","cornerPoint","trans","findSegmentPoints","sample","sampleLength","measureElement","window","pathNode","getChildNode","setAttributeNS","bBox","newPathString","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","measurePath","setAttribute","getBBox","svgBounds","wrapSvgText","text","textValue","txtValue","bounds1","breakWord","bBoxText","dy","replace","ceil","words","newText","existingWidth","existingText","wrap","eachLine","wordWrapping","measureHtmlText","fontWeight","fontStyle","textContent","whiteSpaceToString","wordBreak","wordBreakToString","body","offsetWidth","offsetHeight","measureText","wrapBounds","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","textAlignToString","getTextOptions","txtWidth","wrapSvgTextAlign","getDiagramLayerSvg","elementcoll","getElementsByClassName","contentId","querySelector","getAdornerLayerSvg","getSelectorElement","getAdornerLayer","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","parentNode","getBackgroundLayer","getHTMLLayer","elementType","attribute","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","parent","className","animVal","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compile","compiledString","cloneNode","svg","attributes","createMeasureElements","usageCount","divElement","imageElement","createTextNode","tSpan","randomId","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","properties","concat","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","currentSymbol","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","conn","connectorEditingToolModule","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","forty","checkForResizeHandles","PointPort","findPortToolToActivate","isSelected","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","padding","firstLevel","parentId","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt1","pt2","getLengthFromListOfPoints","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","contextMenuClick","contextMenuOpen","isDirt","Self","Parent","isSvgRender","staticSize","isRectElement","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","translatedPts","translatePoints","template","nativeSVG","measureNativeContent","contentSize","templatePosition","getAvailableSize","measureNativeSvg","textNodes","textWrapBounds","imageSource","stretch","measureImage","Canvas","leftMargin","topMargin","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","None","defaultValue","isArray","Hyperlink","Annotation","InheritReadOnly","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","bridges","bpmnElement","getSegmentElement","getConnectorPoints","flow","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","pathseqData","pathseq","findPath","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","slice","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","Default","CollectionFactory","UserHandle","getWrapper","All","getShapeType","BasicShape","FlowShape","Path","Image","BpmnShape","Native","Html","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","processId","outEdges","inEdges","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","canvas","borderColor","borderWidth","initPorts","accessibilityContent","initPortWrapper","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","initAnnotationWrapper","portContent","pathdata","label","annotationcontent","initIconContainer","iconContent","iconContentBounds","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","class","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","drawRulerMarker","currentPoint","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","getObjectType","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","stops","linear","createLinearGradient","radial","createRadialGradient","fx","fy","cx","cy","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","parentSvg","fromPalette","ctx_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","tX","tY","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","indexValue","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","renderUserHandler","option","pathSize","newData","pathColor","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","grid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","drawRect","renderSvgBackGroundImage","background","bgimageLayer","getBackgroundImageLayer","transformLayers","svgMode","getGridLayer","updateNode","diagramElementsLayer","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","Pan","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","commandHandler","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","childTable","undoElement","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","updateSize","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","clearSelection","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","entry","redoObject","undoObject","category","addHistoryEntry","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","selectedObject","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","dropAnnotation","endGroupAction","changeObjectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","findObjectsUnderMouse","findObjectUnderMouse","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","drawRulerMarkers","touchMoveList","elementLeave","elementEnter","mouseEvents","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","setInterval","doAutoScroll","detail","which","isMultipleSelect","renderSelector","click","marker","markers","removeRulerMarkers","up","wheelDelta","isTriggerEvent","startTextEdit","keyDown","keyCode","keycode","i_1","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","canEnableToolTip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","layer","getObjectLayer","lock","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","actions","actualTarget","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","zIndex","_d","_e","actualTarget_1","parentObj","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","updateDiagramObject","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","portEnd","clonedNode","getAnnotation","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyList","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","UndoRedo","removePorts","removeLabels","deleteChild","addChild","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","newObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","childObj","prop","initObject","removeFromAQuad","removeObjectsFromLayer","multipleSelection","cause","selectionChange","canDoMultipleSelection","canMultiSelect","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","select","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","objectId","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","diagramRenderer","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","drag","updateInnerParentProperties","nodePropertyChange","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","parent_1","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","nodes_1","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_2","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","updateLabelMargin","tempPt","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","line3","labelWrapper","newMat","offsetx","offsety","nodeBounds","selectorBounds","top_2","expandNode","expand","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","preventNodesUpdate","preventConnectorsUpdate","doLayout","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","undoObj","redoObj","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","PanX","canPanX","pany","PanY","canPanY","pan","clearHighlighter","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","overflow","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","Zoom","canZoom","canPan","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","selectionConnectorsList","deleteVirtualObject","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","_f","_g","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","localeObj","L10n","locale","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","requiredModules","modules","member","show","dataManager","droppable","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","refreshCanvasDiagramLayer","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","removeElements","currentObj","removeElement_1","removeCommand","Delete","canDelete","Clear","deleteGroup","removeBpmnProcesses","updateNodeEdges","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","enumValue","ReadOnly","enableReadOnly","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","exportDiagram","printandExportModule","print","addPorts","addConstraints","constraintsType","constraintsValue","removeConstraints","labels","removelabelExtension","element_1","removePortsExtenion","real","overlap","renderOverlapElement","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","outer","widthNoScroll","inner","widthWithScroll","getScrollerWidth","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_h","_j","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","dataSource","url","initSource","independentObj","currentLayer","getDefaults","defaults","initNode","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","objectArray_1","refreshSvgDiagramLayer","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","removeVirtualObjects","clearIntervalVal","tCollection","removeObjectInterval","fromExport","transformValue","horizonatlValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","getPortLayerSvg","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","hideRotate","hideResize","thumbConstraints","selectorElement","renderSelectorForAnnotation","adornerSvg","highlighter","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","isLayout","existingBounds","updateMargin","updateBPMN","actualPort","updatePort","checkSelectedItem","updateTextAnnotationProp","updateConnectorEdges","updateGroupSize","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","annotationWrapper","updateAnnotations","updateNodeProperty","selItems","canUpdateSize","isMeasure","portWrapper","String","iconRect","iconShape","enable","entryTable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","selectedSymbols","dragEnter","findChild","removeChildNodes","addChildNodes","out","dragLeave","Event","PrintAndExport","fileType","buffers","getDiagramBounds","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","images","setScaleValueforCanvas","diagramAsCanvas","toDataURL","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","exportImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","_loop_1","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","printImage","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printWind","write","innerHTML","StackPanel","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","then","firstNode","nextLevel","rootNodes","items","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","showCustomMenuOnly","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","contextItems_1","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","child1","child2","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","Bridging","InheritBridging","canBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","self","zOrder","inter1","intersect2","checkForHorizontalLine","roundedAngle","start1","end1","start2","end2","getLineSegment","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","line1","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","addObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","shapeBounds","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","rows","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","columns","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","newlevel","filter","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","cell","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","header","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","draggable","measureElemnt","initSymbols","symbolGroup","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","addPaletteItem","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","i_2","stackPanel","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","symbolWidth","symbolHeight","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","getNativeLayer","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}